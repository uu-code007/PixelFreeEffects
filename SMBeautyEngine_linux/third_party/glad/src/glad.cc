/*

    OpenGL, OpenGL ES loader generated by glad 0.1.33 on Thu Jun  4 09:31:57
   2020.

    Language/Generator: C/C++
    Specification: gl
    APIs: gl=4.6, gles2=3.2
    Profile: compatibility
    Extensions:
        GL_EXT_422_pixels,
        GL_EXT_EGL_image_array,
        GL_EXT_EGL_image_storage,
        GL_EXT_EGL_sync,
        GL_EXT_YUV_target,
        GL_EXT_abgr,
        GL_EXT_base_instance,
        GL_EXT_bgra,
        GL_EXT_bindable_uniform,
        GL_EXT_blend_color,
        GL_EXT_blend_equation_separate,
        GL_EXT_blend_func_extended,
        GL_EXT_blend_func_separate,
        GL_EXT_blend_logic_op,
        GL_EXT_blend_minmax,
        GL_EXT_blend_subtract,
        GL_EXT_buffer_storage,
        GL_EXT_clear_texture,
        GL_EXT_clip_control,
        GL_EXT_clip_cull_distance,
        GL_EXT_clip_volume_hint,
        GL_EXT_cmyka,
        GL_EXT_color_buffer_float,
        GL_EXT_color_buffer_half_float,
        GL_EXT_color_subtable,
        GL_EXT_compiled_vertex_array,
        GL_EXT_conservative_depth,
        GL_EXT_convolution,
        GL_EXT_coordinate_frame,
        GL_EXT_copy_image,
        GL_EXT_copy_texture,
        GL_EXT_cull_vertex,
        GL_EXT_debug_label,
        GL_EXT_debug_marker,
        GL_EXT_depth_bounds_test,
        GL_EXT_depth_clamp,
        GL_EXT_direct_state_access,
        GL_EXT_discard_framebuffer,
        GL_EXT_disjoint_timer_query,
        GL_EXT_draw_buffers,
        GL_EXT_draw_buffers2,
        GL_EXT_draw_buffers_indexed,
        GL_EXT_draw_elements_base_vertex,
        GL_EXT_draw_instanced,
        GL_EXT_draw_range_elements,
        GL_EXT_draw_transform_feedback,
        GL_EXT_external_buffer,
        GL_EXT_float_blend,
        GL_EXT_fog_coord,
        GL_EXT_framebuffer_blit,
        GL_EXT_framebuffer_multisample,
        GL_EXT_framebuffer_multisample_blit_scaled,
        GL_EXT_framebuffer_object,
        GL_EXT_framebuffer_sRGB,
        GL_EXT_geometry_point_size,
        GL_EXT_geometry_shader,
        GL_EXT_geometry_shader4,
        GL_EXT_gpu_program_parameters,
        GL_EXT_gpu_shader4,
        GL_EXT_gpu_shader5,
        GL_EXT_histogram,
        GL_EXT_index_array_formats,
        GL_EXT_index_func,
        GL_EXT_index_material,
        GL_EXT_index_texture,
        GL_EXT_instanced_arrays,
        GL_EXT_light_texture,
        GL_EXT_map_buffer_range,
        GL_EXT_memory_object,
        GL_EXT_memory_object_fd,
        GL_EXT_memory_object_win32,
        GL_EXT_misc_attribute,
        GL_EXT_multi_draw_arrays,
        GL_EXT_multi_draw_indirect,
        GL_EXT_multisample,
        GL_EXT_multisampled_compatibility,
        GL_EXT_multisampled_render_to_texture,
        GL_EXT_multiview_draw_buffers,
        GL_EXT_multiview_tessellation_geometry_shader,
        GL_EXT_multiview_texture_multisample,
        GL_EXT_multiview_timer_query,
        GL_EXT_occlusion_query_boolean,
        GL_EXT_packed_depth_stencil,
        GL_EXT_packed_float,
        GL_EXT_packed_pixels,
        GL_EXT_paletted_texture,
        GL_EXT_pixel_buffer_object,
        GL_EXT_pixel_transform,
        GL_EXT_pixel_transform_color_table,
        GL_EXT_point_parameters,
        GL_EXT_polygon_offset,
        GL_EXT_polygon_offset_clamp,
        GL_EXT_post_depth_coverage,
        GL_EXT_primitive_bounding_box,
        GL_EXT_protected_textures,
        GL_EXT_provoking_vertex,
        GL_EXT_pvrtc_sRGB,
        GL_EXT_raster_multisample,
        GL_EXT_read_format_bgra,
        GL_EXT_render_snorm,
        GL_EXT_rescale_normal,
        GL_EXT_robustness,
        GL_EXT_sRGB,
        GL_EXT_sRGB_write_control,
        GL_EXT_secondary_color,
        GL_EXT_semaphore,
        GL_EXT_semaphore_fd,
        GL_EXT_semaphore_win32,
        GL_EXT_separate_shader_objects,
        GL_EXT_separate_specular_color,
        GL_EXT_shader_framebuffer_fetch,
        GL_EXT_shader_framebuffer_fetch_non_coherent,
        GL_EXT_shader_group_vote,
        GL_EXT_shader_image_load_formatted,
        GL_EXT_shader_image_load_store,
        GL_EXT_shader_implicit_conversions,
        GL_EXT_shader_integer_mix,
        GL_EXT_shader_io_blocks,
        GL_EXT_shader_non_constant_global_initializers,
        GL_EXT_shader_pixel_local_storage,
        GL_EXT_shader_pixel_local_storage2,
        GL_EXT_shader_texture_lod,
        GL_EXT_shadow_funcs,
        GL_EXT_shadow_samplers,
        GL_EXT_shared_texture_palette,
        GL_EXT_sparse_texture,
        GL_EXT_sparse_texture2,
        GL_EXT_stencil_clear_tag,
        GL_EXT_stencil_two_side,
        GL_EXT_stencil_wrap,
        GL_EXT_subtexture,
        GL_EXT_tessellation_point_size,
        GL_EXT_tessellation_shader,
        GL_EXT_texture,
        GL_EXT_texture3D,
        GL_EXT_texture_array,
        GL_EXT_texture_border_clamp,
        GL_EXT_texture_buffer,
        GL_EXT_texture_buffer_object,
        GL_EXT_texture_compression_astc_decode_mode,
        GL_EXT_texture_compression_bptc,
        GL_EXT_texture_compression_dxt1,
        GL_EXT_texture_compression_latc,
        GL_EXT_texture_compression_rgtc,
        GL_EXT_texture_compression_s3tc,
        GL_EXT_texture_compression_s3tc_srgb,
        GL_EXT_texture_cube_map,
        GL_EXT_texture_cube_map_array,
        GL_EXT_texture_env_add,
        GL_EXT_texture_env_combine,
        GL_EXT_texture_env_dot3,
        GL_EXT_texture_filter_anisotropic,
        GL_EXT_texture_filter_minmax,
        GL_EXT_texture_format_BGRA8888,
        GL_EXT_texture_format_sRGB_override,
        GL_EXT_texture_integer,
        GL_EXT_texture_lod_bias,
        GL_EXT_texture_mirror_clamp,
        GL_EXT_texture_mirror_clamp_to_edge,
        GL_EXT_texture_norm16,
        GL_EXT_texture_object,
        GL_EXT_texture_perturb_normal,
        GL_EXT_texture_query_lod,
        GL_EXT_texture_rg,
        GL_EXT_texture_sRGB,
        GL_EXT_texture_sRGB_R8,
        GL_EXT_texture_sRGB_RG8,
        GL_EXT_texture_sRGB_decode,
        GL_EXT_texture_shadow_lod,
        GL_EXT_texture_shared_exponent,
        GL_EXT_texture_snorm,
        GL_EXT_texture_storage,
        GL_EXT_texture_swizzle,
        GL_EXT_texture_type_2_10_10_10_REV,
        GL_EXT_texture_view,
        GL_EXT_timer_query,
        GL_EXT_transform_feedback,
        GL_EXT_unpack_subimage,
        GL_EXT_vertex_array,
        GL_EXT_vertex_array_bgra,
        GL_EXT_vertex_attrib_64bit,
        GL_EXT_vertex_shader,
        GL_EXT_vertex_weighting,
        GL_EXT_win32_keyed_mutex,
        GL_EXT_window_rectangles,
        GL_EXT_x11_sync_object,
        GL_KHR_blend_equation_advanced,
        GL_KHR_blend_equation_advanced_coherent,
        GL_KHR_context_flush_control,
        GL_KHR_debug,
        GL_KHR_no_error,
        GL_KHR_parallel_shader_compile,
        GL_KHR_robust_buffer_access_behavior,
        GL_KHR_robustness,
        GL_KHR_shader_subgroup,
        GL_KHR_texture_compression_astc_hdr,
        GL_KHR_texture_compression_astc_ldr,
        GL_KHR_texture_compression_astc_sliced_3d,
        GL_OES_EGL_image,
        GL_OES_EGL_image_external,
        GL_OES_EGL_image_external_essl3,
        GL_OES_byte_coordinates,
        GL_OES_compressed_ETC1_RGB8_sub_texture,
        GL_OES_compressed_ETC1_RGB8_texture,
        GL_OES_compressed_paletted_texture,
        GL_OES_copy_image,
        GL_OES_depth24,
        GL_OES_depth32,
        GL_OES_depth_texture,
        GL_OES_draw_buffers_indexed,
        GL_OES_draw_elements_base_vertex,
        GL_OES_element_index_uint,
        GL_OES_fbo_render_mipmap,
        GL_OES_fixed_point,
        GL_OES_fragment_precision_high,
        GL_OES_geometry_point_size,
        GL_OES_geometry_shader,
        GL_OES_get_program_binary,
        GL_OES_gpu_shader5,
        GL_OES_mapbuffer,
        GL_OES_packed_depth_stencil,
        GL_OES_primitive_bounding_box,
        GL_OES_query_matrix,
        GL_OES_read_format,
        GL_OES_required_internalformat,
        GL_OES_rgb8_rgba8,
        GL_OES_sample_shading,
        GL_OES_sample_variables,
        GL_OES_shader_image_atomic,
        GL_OES_shader_io_blocks,
        GL_OES_shader_multisample_interpolation,
        GL_OES_single_precision,
        GL_OES_standard_derivatives,
        GL_OES_stencil1,
        GL_OES_stencil4,
        GL_OES_surfaceless_context,
        GL_OES_tessellation_point_size,
        GL_OES_tessellation_shader,
        GL_OES_texture_3D,
        GL_OES_texture_border_clamp,
        GL_OES_texture_buffer,
        GL_OES_texture_compression_astc,
        GL_OES_texture_cube_map_array,
        GL_OES_texture_float,
        GL_OES_texture_float_linear,
        GL_OES_texture_half_float,
        GL_OES_texture_half_float_linear,
        GL_OES_texture_npot,
        GL_OES_texture_stencil8,
        GL_OES_texture_storage_multisample_2d_array,
        GL_OES_texture_view,
        GL_OES_vertex_array_object,
        GL_OES_vertex_half_float,
        GL_OES_vertex_type_10_10_10_2,
        GL_OES_viewport_array
    Loader: True
    Local files: False
    Omit khrplatform: False
    Reproducible: False

    Commandline:
        --profile="compatibility" --api="gl=4.6,gles2=3.2" --generator="c"
   --spec="gl"
   --extensions="GL_EXT_422_pixels,GL_EXT_EGL_image_array,GL_EXT_EGL_image_storage,GL_EXT_EGL_sync,GL_EXT_YUV_target,GL_EXT_abgr,GL_EXT_base_instance,GL_EXT_bgra,GL_EXT_bindable_uniform,GL_EXT_blend_color,GL_EXT_blend_equation_separate,GL_EXT_blend_func_extended,GL_EXT_blend_func_separate,GL_EXT_blend_logic_op,GL_EXT_blend_minmax,GL_EXT_blend_subtract,GL_EXT_buffer_storage,GL_EXT_clear_texture,GL_EXT_clip_control,GL_EXT_clip_cull_distance,GL_EXT_clip_volume_hint,GL_EXT_cmyka,GL_EXT_color_buffer_float,GL_EXT_color_buffer_half_float,GL_EXT_color_subtable,GL_EXT_compiled_vertex_array,GL_EXT_conservative_depth,GL_EXT_convolution,GL_EXT_coordinate_frame,GL_EXT_copy_image,GL_EXT_copy_texture,GL_EXT_cull_vertex,GL_EXT_debug_label,GL_EXT_debug_marker,GL_EXT_depth_bounds_test,GL_EXT_depth_clamp,GL_EXT_direct_state_access,GL_EXT_discard_framebuffer,GL_EXT_disjoint_timer_query,GL_EXT_draw_buffers,GL_EXT_draw_buffers2,GL_EXT_draw_buffers_indexed,GL_EXT_draw_elements_base_vertex,GL_EXT_draw_instanced,GL_EXT_draw_range_elements,GL_EXT_draw_transform_feedback,GL_EXT_external_buffer,GL_EXT_float_blend,GL_EXT_fog_coord,GL_EXT_framebuffer_blit,GL_EXT_framebuffer_multisample,GL_EXT_framebuffer_multisample_blit_scaled,GL_EXT_framebuffer_object,GL_EXT_framebuffer_sRGB,GL_EXT_geometry_point_size,GL_EXT_geometry_shader,GL_EXT_geometry_shader4,GL_EXT_gpu_program_parameters,GL_EXT_gpu_shader4,GL_EXT_gpu_shader5,GL_EXT_histogram,GL_EXT_index_array_formats,GL_EXT_index_func,GL_EXT_index_material,GL_EXT_index_texture,GL_EXT_instanced_arrays,GL_EXT_light_texture,GL_EXT_map_buffer_range,GL_EXT_memory_object,GL_EXT_memory_object_fd,GL_EXT_memory_object_win32,GL_EXT_misc_attribute,GL_EXT_multi_draw_arrays,GL_EXT_multi_draw_indirect,GL_EXT_multisample,GL_EXT_multisampled_compatibility,GL_EXT_multisampled_render_to_texture,GL_EXT_multiview_draw_buffers,GL_EXT_multiview_tessellation_geometry_shader,GL_EXT_multiview_texture_multisample,GL_EXT_multiview_timer_query,GL_EXT_occlusion_query_boolean,GL_EXT_packed_depth_stencil,GL_EXT_packed_float,GL_EXT_packed_pixels,GL_EXT_paletted_texture,GL_EXT_pixel_buffer_object,GL_EXT_pixel_transform,GL_EXT_pixel_transform_color_table,GL_EXT_point_parameters,GL_EXT_polygon_offset,GL_EXT_polygon_offset_clamp,GL_EXT_post_depth_coverage,GL_EXT_primitive_bounding_box,GL_EXT_protected_textures,GL_EXT_provoking_vertex,GL_EXT_pvrtc_sRGB,GL_EXT_raster_multisample,GL_EXT_read_format_bgra,GL_EXT_render_snorm,GL_EXT_rescale_normal,GL_EXT_robustness,GL_EXT_sRGB,GL_EXT_sRGB_write_control,GL_EXT_secondary_color,GL_EXT_semaphore,GL_EXT_semaphore_fd,GL_EXT_semaphore_win32,GL_EXT_separate_shader_objects,GL_EXT_separate_specular_color,GL_EXT_shader_framebuffer_fetch,GL_EXT_shader_framebuffer_fetch_non_coherent,GL_EXT_shader_group_vote,GL_EXT_shader_image_load_formatted,GL_EXT_shader_image_load_store,GL_EXT_shader_implicit_conversions,GL_EXT_shader_integer_mix,GL_EXT_shader_io_blocks,GL_EXT_shader_non_constant_global_initializers,GL_EXT_shader_pixel_local_storage,GL_EXT_shader_pixel_local_storage2,GL_EXT_shader_texture_lod,GL_EXT_shadow_funcs,GL_EXT_shadow_samplers,GL_EXT_shared_texture_palette,GL_EXT_sparse_texture,GL_EXT_sparse_texture2,GL_EXT_stencil_clear_tag,GL_EXT_stencil_two_side,GL_EXT_stencil_wrap,GL_EXT_subtexture,GL_EXT_tessellation_point_size,GL_EXT_tessellation_shader,GL_EXT_texture,GL_EXT_texture3D,GL_EXT_texture_array,GL_EXT_texture_border_clamp,GL_EXT_texture_buffer,GL_EXT_texture_buffer_object,GL_EXT_texture_compression_astc_decode_mode,GL_EXT_texture_compression_bptc,GL_EXT_texture_compression_dxt1,GL_EXT_texture_compression_latc,GL_EXT_texture_compression_rgtc,GL_EXT_texture_compression_s3tc,GL_EXT_texture_compression_s3tc_srgb,GL_EXT_texture_cube_map,GL_EXT_texture_cube_map_array,GL_EXT_texture_env_add,GL_EXT_texture_env_combine,GL_EXT_texture_env_dot3,GL_EXT_texture_filter_anisotropic,GL_EXT_texture_filter_minmax,GL_EXT_texture_format_BGRA8888,GL_EXT_texture_format_sRGB_override,GL_EXT_texture_integer,GL_EXT_texture_lod_bias,GL_EXT_texture_mirror_clamp,GL_EXT_texture_mirror_clamp_to_edge,GL_EXT_texture_norm16,GL_EXT_texture_object,GL_EXT_texture_perturb_normal,GL_EXT_texture_query_lod,GL_EXT_texture_rg,GL_EXT_texture_sRGB,GL_EXT_texture_sRGB_R8,GL_EXT_texture_sRGB_RG8,GL_EXT_texture_sRGB_decode,GL_EXT_texture_shadow_lod,GL_EXT_texture_shared_exponent,GL_EXT_texture_snorm,GL_EXT_texture_storage,GL_EXT_texture_swizzle,GL_EXT_texture_type_2_10_10_10_REV,GL_EXT_texture_view,GL_EXT_timer_query,GL_EXT_transform_feedback,GL_EXT_unpack_subimage,GL_EXT_vertex_array,GL_EXT_vertex_array_bgra,GL_EXT_vertex_attrib_64bit,GL_EXT_vertex_shader,GL_EXT_vertex_weighting,GL_EXT_win32_keyed_mutex,GL_EXT_window_rectangles,GL_EXT_x11_sync_object,GL_KHR_blend_equation_advanced,GL_KHR_blend_equation_advanced_coherent,GL_KHR_context_flush_control,GL_KHR_debug,GL_KHR_no_error,GL_KHR_parallel_shader_compile,GL_KHR_robust_buffer_access_behavior,GL_KHR_robustness,GL_KHR_shader_subgroup,GL_KHR_texture_compression_astc_hdr,GL_KHR_texture_compression_astc_ldr,GL_KHR_texture_compression_astc_sliced_3d,GL_OES_EGL_image,GL_OES_EGL_image_external,GL_OES_EGL_image_external_essl3,GL_OES_byte_coordinates,GL_OES_compressed_ETC1_RGB8_sub_texture,GL_OES_compressed_ETC1_RGB8_texture,GL_OES_compressed_paletted_texture,GL_OES_copy_image,GL_OES_depth24,GL_OES_depth32,GL_OES_depth_texture,GL_OES_draw_buffers_indexed,GL_OES_draw_elements_base_vertex,GL_OES_element_index_uint,GL_OES_fbo_render_mipmap,GL_OES_fixed_point,GL_OES_fragment_precision_high,GL_OES_geometry_point_size,GL_OES_geometry_shader,GL_OES_get_program_binary,GL_OES_gpu_shader5,GL_OES_mapbuffer,GL_OES_packed_depth_stencil,GL_OES_primitive_bounding_box,GL_OES_query_matrix,GL_OES_read_format,GL_OES_required_internalformat,GL_OES_rgb8_rgba8,GL_OES_sample_shading,GL_OES_sample_variables,GL_OES_shader_image_atomic,GL_OES_shader_io_blocks,GL_OES_shader_multisample_interpolation,GL_OES_single_precision,GL_OES_standard_derivatives,GL_OES_stencil1,GL_OES_stencil4,GL_OES_surfaceless_context,GL_OES_tessellation_point_size,GL_OES_tessellation_shader,GL_OES_texture_3D,GL_OES_texture_border_clamp,GL_OES_texture_buffer,GL_OES_texture_compression_astc,GL_OES_texture_cube_map_array,GL_OES_texture_float,GL_OES_texture_float_linear,GL_OES_texture_half_float,GL_OES_texture_half_float_linear,GL_OES_texture_npot,GL_OES_texture_stencil8,GL_OES_texture_storage_multisample_2d_array,GL_OES_texture_view,GL_OES_vertex_array_object,GL_OES_vertex_half_float,GL_OES_vertex_type_10_10_10_2,GL_OES_viewport_array"
    Online:
        Too many extensions
*/

#include "../include/glad/glad.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifndef NAMA_ENABLE_GL_DEBUG

static void* get_proc(const char* namez);

#if defined(_WIN32) || defined(__CYGWIN__)
#ifndef _WINDOWS_
#undef APIENTRY
#endif
#include <windows.h>
static HMODULE libGL;

typedef void*(APIENTRYP PFNWGLGETPROCADDRESSPROC_PRIVATE)(const char*);
static PFNWGLGETPROCADDRESSPROC_PRIVATE gladGetProcAddressPtr;

#ifdef _MSC_VER
#ifdef __has_include
#if __has_include(<winapifamily.h>)
#define HAVE_WINAPIFAMILY 1
#endif
#elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
#define HAVE_WINAPIFAMILY 1
#endif
#endif

#ifdef HAVE_WINAPIFAMILY
#include <winapifamily.h>
#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && \
    WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
#define IS_UWP 1
#endif
#endif

static int open_gl(void) {
#ifndef IS_UWP
  libGL = LoadLibraryW(L"opengl32.dll");
  if (libGL != NULL) {
    void (*tmp)(void);
    tmp = (void (*)(void))GetProcAddress(libGL, "wglGetProcAddress");
    gladGetProcAddressPtr = (PFNWGLGETPROCADDRESSPROC_PRIVATE)tmp;
    return gladGetProcAddressPtr != NULL;
  }
#endif

  return 0;
}

static void close_gl(void) {
  if (libGL != NULL) {
    FreeLibrary((HMODULE)libGL);
    libGL = NULL;
  }
}
#else
#include <dlfcn.h>
static void* libGL;

#if !defined(__APPLE__) && !defined(__HAIKU__)
typedef void*(APIENTRYP PFNGLXGETPROCADDRESSPROC_PRIVATE)(const char*);
static PFNGLXGETPROCADDRESSPROC_PRIVATE gladGetProcAddressPtr;
#endif

static int open_gl(void) {
#ifdef __APPLE__
  static const char* NAMES[] = {
      "../Frameworks/OpenGL.framework/OpenGL",
      "/Library/Frameworks/OpenGL.framework/OpenGL",
      "/System/Library/Frameworks/OpenGL.framework/OpenGL",
      "/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL"};
#else
  static const char* NAMES[] = {"libGL.so.1", "libGL.so"};
#endif

  unsigned int index = 0;
  for (index = 0; index < (sizeof(NAMES) / sizeof(NAMES[0])); index++) {
    libGL = dlopen(NAMES[index], RTLD_NOW | RTLD_GLOBAL);

    if (libGL != NULL) {
#if defined(__APPLE__) || defined(__HAIKU__)
      return 1;
#else
      gladGetProcAddressPtr = (PFNGLXGETPROCADDRESSPROC_PRIVATE)dlsym(
          libGL, "glXGetProcAddressARB");
      return gladGetProcAddressPtr != NULL;
#endif
    }
  }

  return 0;
}

static void close_gl(void) {
  if (libGL != NULL) {
    dlclose(libGL);
    libGL = NULL;
  }
}
#endif

static void* get_proc(const char* namez) {
  void* result = NULL;
  if (libGL == NULL) return NULL;

#if !defined(__APPLE__) && !defined(__HAIKU__)
  if (gladGetProcAddressPtr != NULL) {
    result = gladGetProcAddressPtr(namez);
  }
#endif
  if (result == NULL) {
#if defined(_WIN32) || defined(__CYGWIN__)
    result = (void*)GetProcAddress((HMODULE)libGL, namez);
#else
    result = dlsym(libGL, namez);
#endif
  }

  return result;
}

int gladLoadGL(void) {
  int status = 0;

  if (open_gl()) {
    status = gladLoadGLLoader(&get_proc);
    close_gl();
  }

  return status;
}

struct gladGLversionStruct GLVersion = {0, 0};

#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)
#define _GLAD_IS_SOME_NEW_VERSION 1
#endif

static int max_loaded_major;
static int max_loaded_minor;

static const char* exts = NULL;
static int num_exts_i = 0;
static char** exts_i = NULL;

static int get_exts(void) {
#ifdef _GLAD_IS_SOME_NEW_VERSION
  if (max_loaded_major < 3) {
#endif
    exts = (const char*)glGetString(GL_EXTENSIONS);
#ifdef _GLAD_IS_SOME_NEW_VERSION
  } else {
    unsigned int index;

    num_exts_i = 0;
    glGetIntegerv(GL_NUM_EXTENSIONS, &num_exts_i);
    if (num_exts_i > 0) {
      exts_i = (char**)malloc((size_t)num_exts_i * (sizeof *exts_i));
    }

    if (exts_i == NULL) {
      return 0;
    }

    for (index = 0; index < (unsigned)num_exts_i; index++) {
      const char* gl_str_tmp = (const char*)glGetStringi(GL_EXTENSIONS, index);
      size_t len = strlen(gl_str_tmp);

      char* local_str = (char*)malloc((len + 1) * sizeof(char));
      if (local_str != NULL) {
        memcpy(local_str, gl_str_tmp, (len + 1) * sizeof(char));
      }
      exts_i[index] = local_str;
    }
  }
#endif
  return 1;
}

static void free_exts(void) {
  if (exts_i != NULL) {
    int index;
    for (index = 0; index < num_exts_i; index++) {
      free((char*)exts_i[index]);
    }
    free((void*)exts_i);
    exts_i = NULL;
  }
}

static int has_ext(const char* ext) {
#ifdef _GLAD_IS_SOME_NEW_VERSION
  if (max_loaded_major < 3) {
#endif
    const char* extensions;
    const char* loc;
    const char* terminator;
    extensions = exts;
    if (extensions == NULL || ext == NULL) {
      return 0;
    }

    while (1) {
      loc = strstr(extensions, ext);
      if (loc == NULL) {
        return 0;
      }

      terminator = loc + strlen(ext);
      if ((loc == extensions || *(loc - 1) == ' ') &&
          (*terminator == ' ' || *terminator == '\0')) {
        return 1;
      }
      extensions = terminator;
    }
#ifdef _GLAD_IS_SOME_NEW_VERSION
  } else {
    int index;
    if (exts_i == NULL) return 0;
    for (index = 0; index < num_exts_i; index++) {
      const char* e = exts_i[index];

      if (exts_i[index] != NULL && strcmp(e, ext) == 0) {
        return 1;
      }
    }
  }
#endif

  return 0;
}
int GLAD_GL_VERSION_1_0 = 0;
int GLAD_GL_VERSION_1_1 = 0;
int GLAD_GL_VERSION_1_2 = 0;
int GLAD_GL_VERSION_1_3 = 0;
int GLAD_GL_VERSION_1_4 = 0;
int GLAD_GL_VERSION_1_5 = 0;
int GLAD_GL_VERSION_2_0 = 0;
int GLAD_GL_VERSION_2_1 = 0;
int GLAD_GL_VERSION_3_0 = 0;
int GLAD_GL_VERSION_3_1 = 0;
int GLAD_GL_VERSION_3_2 = 0;
int GLAD_GL_VERSION_3_3 = 0;
int GLAD_GL_VERSION_4_0 = 0;
int GLAD_GL_VERSION_4_1 = 0;
int GLAD_GL_VERSION_4_2 = 0;
int GLAD_GL_VERSION_4_3 = 0;
int GLAD_GL_VERSION_4_4 = 0;
int GLAD_GL_VERSION_4_5 = 0;
int GLAD_GL_VERSION_4_6 = 0;
int GLAD_GL_ES_VERSION_2_0 = 0;
int GLAD_GL_ES_VERSION_3_0 = 0;
int GLAD_GL_ES_VERSION_3_1 = 0;
int GLAD_GL_ES_VERSION_3_2 = 0;
PFNGLACCUMPROC glad_glAccum = NULL;
PFNGLACTIVESHADERPROGRAMPROC glad_glActiveShaderProgram = NULL;
PFNGLACTIVETEXTUREPROC glad_glActiveTexture = NULL;
PFNGLALPHAFUNCPROC glad_glAlphaFunc = NULL;
PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident = NULL;
PFNGLARRAYELEMENTPROC glad_glArrayElement = NULL;
PFNGLATTACHSHADERPROC glad_glAttachShader = NULL;
PFNGLBEGINPROC glad_glBegin = NULL;
PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender = NULL;
PFNGLBEGINQUERYPROC glad_glBeginQuery = NULL;
PFNGLBEGINQUERYINDEXEDPROC glad_glBeginQueryIndexed = NULL;
PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback = NULL;
PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation = NULL;
PFNGLBINDBUFFERPROC glad_glBindBuffer = NULL;
PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase = NULL;
PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange = NULL;
PFNGLBINDBUFFERSBASEPROC glad_glBindBuffersBase = NULL;
PFNGLBINDBUFFERSRANGEPROC glad_glBindBuffersRange = NULL;
PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation = NULL;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed = NULL;
PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer = NULL;
PFNGLBINDIMAGETEXTUREPROC glad_glBindImageTexture = NULL;
PFNGLBINDIMAGETEXTURESPROC glad_glBindImageTextures = NULL;
PFNGLBINDPROGRAMPIPELINEPROC glad_glBindProgramPipeline = NULL;
PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer = NULL;
PFNGLBINDSAMPLERPROC glad_glBindSampler = NULL;
PFNGLBINDSAMPLERSPROC glad_glBindSamplers = NULL;
PFNGLBINDTEXTUREPROC glad_glBindTexture = NULL;
PFNGLBINDTEXTUREUNITPROC glad_glBindTextureUnit = NULL;
PFNGLBINDTEXTURESPROC glad_glBindTextures = NULL;
PFNGLBINDTRANSFORMFEEDBACKPROC glad_glBindTransformFeedback = NULL;
PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray = NULL;
PFNGLBINDVERTEXBUFFERPROC glad_glBindVertexBuffer = NULL;
PFNGLBINDVERTEXBUFFERSPROC glad_glBindVertexBuffers = NULL;
PFNGLBITMAPPROC glad_glBitmap = NULL;
PFNGLBLENDBARRIERPROC glad_glBlendBarrier = NULL;
PFNGLBLENDCOLORPROC glad_glBlendColor = NULL;
PFNGLBLENDEQUATIONPROC glad_glBlendEquation = NULL;
PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate = NULL;
PFNGLBLENDEQUATIONSEPARATEIPROC glad_glBlendEquationSeparatei = NULL;
PFNGLBLENDEQUATIONIPROC glad_glBlendEquationi = NULL;
PFNGLBLENDFUNCPROC glad_glBlendFunc = NULL;
PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate = NULL;
PFNGLBLENDFUNCSEPARATEIPROC glad_glBlendFuncSeparatei = NULL;
PFNGLBLENDFUNCIPROC glad_glBlendFunci = NULL;
PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer = NULL;
PFNGLBLITNAMEDFRAMEBUFFERPROC glad_glBlitNamedFramebuffer = NULL;
PFNGLBUFFERDATAPROC glad_glBufferData = NULL;
PFNGLBUFFERSTORAGEPROC glad_glBufferStorage = NULL;
PFNGLBUFFERSUBDATAPROC glad_glBufferSubData = NULL;
PFNGLCALLLISTPROC glad_glCallList = NULL;
PFNGLCALLLISTSPROC glad_glCallLists = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus = NULL;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glad_glCheckNamedFramebufferStatus = NULL;
PFNGLCLAMPCOLORPROC glad_glClampColor = NULL;
PFNGLCLEARPROC glad_glClear = NULL;
PFNGLCLEARACCUMPROC glad_glClearAccum = NULL;
PFNGLCLEARBUFFERDATAPROC glad_glClearBufferData = NULL;
PFNGLCLEARBUFFERSUBDATAPROC glad_glClearBufferSubData = NULL;
PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi = NULL;
PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv = NULL;
PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv = NULL;
PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv = NULL;
PFNGLCLEARCOLORPROC glad_glClearColor = NULL;
PFNGLCLEARDEPTHPROC glad_glClearDepth = NULL;
PFNGLCLEARDEPTHFPROC glad_glClearDepthf = NULL;
PFNGLCLEARINDEXPROC glad_glClearIndex = NULL;
PFNGLCLEARNAMEDBUFFERDATAPROC glad_glClearNamedBufferData = NULL;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC glad_glClearNamedBufferSubData = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glad_glClearNamedFramebufferfi = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glad_glClearNamedFramebufferfv = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glad_glClearNamedFramebufferiv = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glad_glClearNamedFramebufferuiv = NULL;
PFNGLCLEARSTENCILPROC glad_glClearStencil = NULL;
PFNGLCLEARTEXIMAGEPROC glad_glClearTexImage = NULL;
PFNGLCLEARTEXSUBIMAGEPROC glad_glClearTexSubImage = NULL;
PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture = NULL;
PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync = NULL;
PFNGLCLIPCONTROLPROC glad_glClipControl = NULL;
PFNGLCLIPPLANEPROC glad_glClipPlane = NULL;
PFNGLCOLOR3BPROC glad_glColor3b = NULL;
PFNGLCOLOR3BVPROC glad_glColor3bv = NULL;
PFNGLCOLOR3DPROC glad_glColor3d = NULL;
PFNGLCOLOR3DVPROC glad_glColor3dv = NULL;
PFNGLCOLOR3FPROC glad_glColor3f = NULL;
PFNGLCOLOR3FVPROC glad_glColor3fv = NULL;
PFNGLCOLOR3IPROC glad_glColor3i = NULL;
PFNGLCOLOR3IVPROC glad_glColor3iv = NULL;
PFNGLCOLOR3SPROC glad_glColor3s = NULL;
PFNGLCOLOR3SVPROC glad_glColor3sv = NULL;
PFNGLCOLOR3UBPROC glad_glColor3ub = NULL;
PFNGLCOLOR3UBVPROC glad_glColor3ubv = NULL;
PFNGLCOLOR3UIPROC glad_glColor3ui = NULL;
PFNGLCOLOR3UIVPROC glad_glColor3uiv = NULL;
PFNGLCOLOR3USPROC glad_glColor3us = NULL;
PFNGLCOLOR3USVPROC glad_glColor3usv = NULL;
PFNGLCOLOR4BPROC glad_glColor4b = NULL;
PFNGLCOLOR4BVPROC glad_glColor4bv = NULL;
PFNGLCOLOR4DPROC glad_glColor4d = NULL;
PFNGLCOLOR4DVPROC glad_glColor4dv = NULL;
PFNGLCOLOR4FPROC glad_glColor4f = NULL;
PFNGLCOLOR4FVPROC glad_glColor4fv = NULL;
PFNGLCOLOR4IPROC glad_glColor4i = NULL;
PFNGLCOLOR4IVPROC glad_glColor4iv = NULL;
PFNGLCOLOR4SPROC glad_glColor4s = NULL;
PFNGLCOLOR4SVPROC glad_glColor4sv = NULL;
PFNGLCOLOR4UBPROC glad_glColor4ub = NULL;
PFNGLCOLOR4UBVPROC glad_glColor4ubv = NULL;
PFNGLCOLOR4UIPROC glad_glColor4ui = NULL;
PFNGLCOLOR4UIVPROC glad_glColor4uiv = NULL;
PFNGLCOLOR4USPROC glad_glColor4us = NULL;
PFNGLCOLOR4USVPROC glad_glColor4usv = NULL;
PFNGLCOLORMASKPROC glad_glColorMask = NULL;
PFNGLCOLORMASKIPROC glad_glColorMaski = NULL;
PFNGLCOLORMATERIALPROC glad_glColorMaterial = NULL;
PFNGLCOLORP3UIPROC glad_glColorP3ui = NULL;
PFNGLCOLORP3UIVPROC glad_glColorP3uiv = NULL;
PFNGLCOLORP4UIPROC glad_glColorP4ui = NULL;
PFNGLCOLORP4UIVPROC glad_glColorP4uiv = NULL;
PFNGLCOLORPOINTERPROC glad_glColorPointer = NULL;
PFNGLCOMPILESHADERPROC glad_glCompileShader = NULL;
PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D = NULL;
PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glad_glCompressedTextureSubImage1D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glad_glCompressedTextureSubImage2D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glad_glCompressedTextureSubImage3D = NULL;
PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData = NULL;
PFNGLCOPYIMAGESUBDATAPROC glad_glCopyImageSubData = NULL;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC glad_glCopyNamedBufferSubData = NULL;
PFNGLCOPYPIXELSPROC glad_glCopyPixels = NULL;
PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D = NULL;
PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D = NULL;
PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D = NULL;
PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D = NULL;
PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D = NULL;
PFNGLCOPYTEXTURESUBIMAGE1DPROC glad_glCopyTextureSubImage1D = NULL;
PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D = NULL;
PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D = NULL;
PFNGLCREATEBUFFERSPROC glad_glCreateBuffers = NULL;
PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers = NULL;
PFNGLCREATEPROGRAMPROC glad_glCreateProgram = NULL;
PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines = NULL;
PFNGLCREATEQUERIESPROC glad_glCreateQueries = NULL;
PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers = NULL;
PFNGLCREATESAMPLERSPROC glad_glCreateSamplers = NULL;
PFNGLCREATESHADERPROC glad_glCreateShader = NULL;
PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv = NULL;
PFNGLCREATETEXTURESPROC glad_glCreateTextures = NULL;
PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks = NULL;
PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays = NULL;
PFNGLCULLFACEPROC glad_glCullFace = NULL;
PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback = NULL;
PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl = NULL;
PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert = NULL;
PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers = NULL;
PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers = NULL;
PFNGLDELETELISTSPROC glad_glDeleteLists = NULL;
PFNGLDELETEPROGRAMPROC glad_glDeleteProgram = NULL;
PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines = NULL;
PFNGLDELETEQUERIESPROC glad_glDeleteQueries = NULL;
PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers = NULL;
PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers = NULL;
PFNGLDELETESHADERPROC glad_glDeleteShader = NULL;
PFNGLDELETESYNCPROC glad_glDeleteSync = NULL;
PFNGLDELETETEXTURESPROC glad_glDeleteTextures = NULL;
PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks = NULL;
PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays = NULL;
PFNGLDEPTHFUNCPROC glad_glDepthFunc = NULL;
PFNGLDEPTHMASKPROC glad_glDepthMask = NULL;
PFNGLDEPTHRANGEPROC glad_glDepthRange = NULL;
PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv = NULL;
PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed = NULL;
PFNGLDEPTHRANGEFPROC glad_glDepthRangef = NULL;
PFNGLDETACHSHADERPROC glad_glDetachShader = NULL;
PFNGLDISABLEPROC glad_glDisable = NULL;
PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState = NULL;
PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib = NULL;
PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray = NULL;
PFNGLDISABLEIPROC glad_glDisablei = NULL;
PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute = NULL;
PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect = NULL;
PFNGLDRAWARRAYSPROC glad_glDrawArrays = NULL;
PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect = NULL;
PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced = NULL;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
glad_glDrawArraysInstancedBaseInstance = NULL;
PFNGLDRAWBUFFERPROC glad_glDrawBuffer = NULL;
PFNGLDRAWBUFFERSPROC glad_glDrawBuffers = NULL;
PFNGLDRAWELEMENTSPROC glad_glDrawElements = NULL;
PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex = NULL;
PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect = NULL;
PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
glad_glDrawElementsInstancedBaseInstance = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
glad_glDrawElementsInstancedBaseVertex = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
glad_glDrawElementsInstancedBaseVertexBaseInstance = NULL;
PFNGLDRAWPIXELSPROC glad_glDrawPixels = NULL;
PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex = NULL;
PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback = NULL;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced =
    NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
glad_glDrawTransformFeedbackStreamInstanced = NULL;
PFNGLEDGEFLAGPROC glad_glEdgeFlag = NULL;
PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer = NULL;
PFNGLEDGEFLAGVPROC glad_glEdgeFlagv = NULL;
PFNGLENABLEPROC glad_glEnable = NULL;
PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState = NULL;
PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib = NULL;
PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray = NULL;
PFNGLENABLEIPROC glad_glEnablei = NULL;
PFNGLENDPROC glad_glEnd = NULL;
PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender = NULL;
PFNGLENDLISTPROC glad_glEndList = NULL;
PFNGLENDQUERYPROC glad_glEndQuery = NULL;
PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed = NULL;
PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback = NULL;
PFNGLEVALCOORD1DPROC glad_glEvalCoord1d = NULL;
PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv = NULL;
PFNGLEVALCOORD1FPROC glad_glEvalCoord1f = NULL;
PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv = NULL;
PFNGLEVALCOORD2DPROC glad_glEvalCoord2d = NULL;
PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv = NULL;
PFNGLEVALCOORD2FPROC glad_glEvalCoord2f = NULL;
PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv = NULL;
PFNGLEVALMESH1PROC glad_glEvalMesh1 = NULL;
PFNGLEVALMESH2PROC glad_glEvalMesh2 = NULL;
PFNGLEVALPOINT1PROC glad_glEvalPoint1 = NULL;
PFNGLEVALPOINT2PROC glad_glEvalPoint2 = NULL;
PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer = NULL;
PFNGLFENCESYNCPROC glad_glFenceSync = NULL;
PFNGLFINISHPROC glad_glFinish = NULL;
PFNGLFLUSHPROC glad_glFlush = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange = NULL;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange = NULL;
PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer = NULL;
PFNGLFOGCOORDDPROC glad_glFogCoordd = NULL;
PFNGLFOGCOORDDVPROC glad_glFogCoorddv = NULL;
PFNGLFOGCOORDFPROC glad_glFogCoordf = NULL;
PFNGLFOGCOORDFVPROC glad_glFogCoordfv = NULL;
PFNGLFOGFPROC glad_glFogf = NULL;
PFNGLFOGFVPROC glad_glFogfv = NULL;
PFNGLFOGIPROC glad_glFogi = NULL;
PFNGLFOGIVPROC glad_glFogiv = NULL;
PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri = NULL;
PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer = NULL;
PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture = NULL;
PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D = NULL;
PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D = NULL;
PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D = NULL;
PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer = NULL;
PFNGLFRONTFACEPROC glad_glFrontFace = NULL;
PFNGLFRUSTUMPROC glad_glFrustum = NULL;
PFNGLGENBUFFERSPROC glad_glGenBuffers = NULL;
PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers = NULL;
PFNGLGENLISTSPROC glad_glGenLists = NULL;
PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines = NULL;
PFNGLGENQUERIESPROC glad_glGenQueries = NULL;
PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers = NULL;
PFNGLGENSAMPLERSPROC glad_glGenSamplers = NULL;
PFNGLGENTEXTURESPROC glad_glGenTextures = NULL;
PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks = NULL;
PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays = NULL;
PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap = NULL;
PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap = NULL;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv =
    NULL;
PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib = NULL;
PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName =
    NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv =
    NULL;
PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform = NULL;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName = NULL;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv = NULL;
PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName = NULL;
PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv = NULL;
PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders = NULL;
PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation = NULL;
PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v = NULL;
PFNGLGETBOOLEANVPROC glad_glGetBooleanv = NULL;
PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v = NULL;
PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv = NULL;
PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv = NULL;
PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData = NULL;
PFNGLGETCLIPPLANEPROC glad_glGetClipPlane = NULL;
PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage = NULL;
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage = NULL;
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage =
    NULL;
PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog = NULL;
PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v = NULL;
PFNGLGETDOUBLEVPROC glad_glGetDoublev = NULL;
PFNGLGETERRORPROC glad_glGetError = NULL;
PFNGLGETFLOATI_VPROC glad_glGetFloati_v = NULL;
PFNGLGETFLOATVPROC glad_glGetFloatv = NULL;
PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex = NULL;
PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
glad_glGetFramebufferAttachmentParameteriv = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv = NULL;
PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus = NULL;
PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v = NULL;
PFNGLGETINTEGER64VPROC glad_glGetInteger64v = NULL;
PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v = NULL;
PFNGLGETINTEGERVPROC glad_glGetIntegerv = NULL;
PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v = NULL;
PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ = NULL;
PFNGLGETLIGHTFVPROC glad_glGetLightfv = NULL;
PFNGLGETLIGHTIVPROC glad_glGetLightiv = NULL;
PFNGLGETMAPDVPROC glad_glGetMapdv = NULL;
PFNGLGETMAPFVPROC glad_glGetMapfv = NULL;
PFNGLGETMAPIVPROC glad_glGetMapiv = NULL;
PFNGLGETMATERIALFVPROC glad_glGetMaterialfv = NULL;
PFNGLGETMATERIALIVPROC glad_glGetMaterialiv = NULL;
PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv = NULL;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v = NULL;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv = NULL;
PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv = NULL;
PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData = NULL;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
glad_glGetNamedFramebufferAttachmentParameteriv = NULL;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv =
    NULL;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
glad_glGetNamedRenderbufferParameteriv = NULL;
PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel = NULL;
PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel = NULL;
PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv = NULL;
PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv = NULL;
PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv = NULL;
PFNGLGETPOINTERVPROC glad_glGetPointerv = NULL;
PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple = NULL;
PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary = NULL;
PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog = NULL;
PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv = NULL;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog = NULL;
PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv = NULL;
PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
glad_glGetProgramResourceLocationIndex = NULL;
PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName = NULL;
PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv = NULL;
PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv = NULL;
PFNGLGETPROGRAMIVPROC glad_glGetProgramiv = NULL;
PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v = NULL;
PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv = NULL;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v = NULL;
PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv = NULL;
PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv = NULL;
PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v = NULL;
PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv = NULL;
PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v = NULL;
PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv = NULL;
PFNGLGETQUERYIVPROC glad_glGetQueryiv = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv = NULL;
PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv = NULL;
PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv = NULL;
PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv = NULL;
PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv = NULL;
PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog = NULL;
PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat = NULL;
PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource = NULL;
PFNGLGETSHADERIVPROC glad_glGetShaderiv = NULL;
PFNGLGETSTRINGPROC glad_glGetString = NULL;
PFNGLGETSTRINGIPROC glad_glGetStringi = NULL;
PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex = NULL;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation =
    NULL;
PFNGLGETSYNCIVPROC glad_glGetSynciv = NULL;
PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv = NULL;
PFNGLGETTEXENVIVPROC glad_glGetTexEnviv = NULL;
PFNGLGETTEXGENDVPROC glad_glGetTexGendv = NULL;
PFNGLGETTEXGENFVPROC glad_glGetTexGenfv = NULL;
PFNGLGETTEXGENIVPROC glad_glGetTexGeniv = NULL;
PFNGLGETTEXIMAGEPROC glad_glGetTexImage = NULL;
PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv = NULL;
PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv = NULL;
PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv = NULL;
PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv = NULL;
PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv = NULL;
PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv = NULL;
PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage = NULL;
PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv = NULL;
PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv = NULL;
PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv = NULL;
PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv = NULL;
PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv = NULL;
PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv = NULL;
PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying = NULL;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v = NULL;
PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v = NULL;
PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv = NULL;
PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex = NULL;
PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices = NULL;
PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation = NULL;
PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv = NULL;
PFNGLGETUNIFORMDVPROC glad_glGetUniformdv = NULL;
PFNGLGETUNIFORMFVPROC glad_glGetUniformfv = NULL;
PFNGLGETUNIFORMIVPROC glad_glGetUniformiv = NULL;
PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv = NULL;
PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv = NULL;
PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv = NULL;
PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv = NULL;
PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv = NULL;
PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv = NULL;
PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv = NULL;
PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv = NULL;
PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv = NULL;
PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv = NULL;
PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv = NULL;
PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable = NULL;
PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage = NULL;
PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter = NULL;
PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram = NULL;
PFNGLGETNMAPDVPROC glad_glGetnMapdv = NULL;
PFNGLGETNMAPFVPROC glad_glGetnMapfv = NULL;
PFNGLGETNMAPIVPROC glad_glGetnMapiv = NULL;
PFNGLGETNMINMAXPROC glad_glGetnMinmax = NULL;
PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv = NULL;
PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv = NULL;
PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv = NULL;
PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple = NULL;
PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter = NULL;
PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage = NULL;
PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv = NULL;
PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv = NULL;
PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv = NULL;
PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv = NULL;
PFNGLHINTPROC glad_glHint = NULL;
PFNGLINDEXMASKPROC glad_glIndexMask = NULL;
PFNGLINDEXPOINTERPROC glad_glIndexPointer = NULL;
PFNGLINDEXDPROC glad_glIndexd = NULL;
PFNGLINDEXDVPROC glad_glIndexdv = NULL;
PFNGLINDEXFPROC glad_glIndexf = NULL;
PFNGLINDEXFVPROC glad_glIndexfv = NULL;
PFNGLINDEXIPROC glad_glIndexi = NULL;
PFNGLINDEXIVPROC glad_glIndexiv = NULL;
PFNGLINDEXSPROC glad_glIndexs = NULL;
PFNGLINDEXSVPROC glad_glIndexsv = NULL;
PFNGLINDEXUBPROC glad_glIndexub = NULL;
PFNGLINDEXUBVPROC glad_glIndexubv = NULL;
PFNGLINITNAMESPROC glad_glInitNames = NULL;
PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays = NULL;
PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData = NULL;
PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData = NULL;
PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer = NULL;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData =
    NULL;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
glad_glInvalidateNamedFramebufferSubData = NULL;
PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer = NULL;
PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage = NULL;
PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage = NULL;
PFNGLISBUFFERPROC glad_glIsBuffer = NULL;
PFNGLISENABLEDPROC glad_glIsEnabled = NULL;
PFNGLISENABLEDIPROC glad_glIsEnabledi = NULL;
PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer = NULL;
PFNGLISLISTPROC glad_glIsList = NULL;
PFNGLISPROGRAMPROC glad_glIsProgram = NULL;
PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline = NULL;
PFNGLISQUERYPROC glad_glIsQuery = NULL;
PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer = NULL;
PFNGLISSAMPLERPROC glad_glIsSampler = NULL;
PFNGLISSHADERPROC glad_glIsShader = NULL;
PFNGLISSYNCPROC glad_glIsSync = NULL;
PFNGLISTEXTUREPROC glad_glIsTexture = NULL;
PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback = NULL;
PFNGLISVERTEXARRAYPROC glad_glIsVertexArray = NULL;
PFNGLLIGHTMODELFPROC glad_glLightModelf = NULL;
PFNGLLIGHTMODELFVPROC glad_glLightModelfv = NULL;
PFNGLLIGHTMODELIPROC glad_glLightModeli = NULL;
PFNGLLIGHTMODELIVPROC glad_glLightModeliv = NULL;
PFNGLLIGHTFPROC glad_glLightf = NULL;
PFNGLLIGHTFVPROC glad_glLightfv = NULL;
PFNGLLIGHTIPROC glad_glLighti = NULL;
PFNGLLIGHTIVPROC glad_glLightiv = NULL;
PFNGLLINESTIPPLEPROC glad_glLineStipple = NULL;
PFNGLLINEWIDTHPROC glad_glLineWidth = NULL;
PFNGLLINKPROGRAMPROC glad_glLinkProgram = NULL;
PFNGLLISTBASEPROC glad_glListBase = NULL;
PFNGLLOADIDENTITYPROC glad_glLoadIdentity = NULL;
PFNGLLOADMATRIXDPROC glad_glLoadMatrixd = NULL;
PFNGLLOADMATRIXFPROC glad_glLoadMatrixf = NULL;
PFNGLLOADNAMEPROC glad_glLoadName = NULL;
PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd = NULL;
PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf = NULL;
PFNGLLOGICOPPROC glad_glLogicOp = NULL;
PFNGLMAP1DPROC glad_glMap1d = NULL;
PFNGLMAP1FPROC glad_glMap1f = NULL;
PFNGLMAP2DPROC glad_glMap2d = NULL;
PFNGLMAP2FPROC glad_glMap2f = NULL;
PFNGLMAPBUFFERPROC glad_glMapBuffer = NULL;
PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange = NULL;
PFNGLMAPGRID1DPROC glad_glMapGrid1d = NULL;
PFNGLMAPGRID1FPROC glad_glMapGrid1f = NULL;
PFNGLMAPGRID2DPROC glad_glMapGrid2d = NULL;
PFNGLMAPGRID2FPROC glad_glMapGrid2f = NULL;
PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer = NULL;
PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange = NULL;
PFNGLMATERIALFPROC glad_glMaterialf = NULL;
PFNGLMATERIALFVPROC glad_glMaterialfv = NULL;
PFNGLMATERIALIPROC glad_glMateriali = NULL;
PFNGLMATERIALIVPROC glad_glMaterialiv = NULL;
PFNGLMATRIXMODEPROC glad_glMatrixMode = NULL;
PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier = NULL;
PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion = NULL;
PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading = NULL;
PFNGLMULTMATRIXDPROC glad_glMultMatrixd = NULL;
PFNGLMULTMATRIXFPROC glad_glMultMatrixf = NULL;
PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd = NULL;
PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf = NULL;
PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount =
    NULL;
PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements = NULL;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount =
    NULL;
PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d = NULL;
PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv = NULL;
PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f = NULL;
PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv = NULL;
PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i = NULL;
PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv = NULL;
PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s = NULL;
PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv = NULL;
PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d = NULL;
PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv = NULL;
PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f = NULL;
PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv = NULL;
PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i = NULL;
PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv = NULL;
PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s = NULL;
PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv = NULL;
PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d = NULL;
PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv = NULL;
PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f = NULL;
PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv = NULL;
PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i = NULL;
PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv = NULL;
PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s = NULL;
PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv = NULL;
PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d = NULL;
PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv = NULL;
PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f = NULL;
PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv = NULL;
PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i = NULL;
PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv = NULL;
PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s = NULL;
PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv = NULL;
PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui = NULL;
PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv = NULL;
PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui = NULL;
PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv = NULL;
PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui = NULL;
PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv = NULL;
PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui = NULL;
PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv = NULL;
PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData = NULL;
PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage = NULL;
PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData = NULL;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer = NULL;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers = NULL;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri = NULL;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer = NULL;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer =
    NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer =
    NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
glad_glNamedRenderbufferStorageMultisample = NULL;
PFNGLNEWLISTPROC glad_glNewList = NULL;
PFNGLNORMAL3BPROC glad_glNormal3b = NULL;
PFNGLNORMAL3BVPROC glad_glNormal3bv = NULL;
PFNGLNORMAL3DPROC glad_glNormal3d = NULL;
PFNGLNORMAL3DVPROC glad_glNormal3dv = NULL;
PFNGLNORMAL3FPROC glad_glNormal3f = NULL;
PFNGLNORMAL3FVPROC glad_glNormal3fv = NULL;
PFNGLNORMAL3IPROC glad_glNormal3i = NULL;
PFNGLNORMAL3IVPROC glad_glNormal3iv = NULL;
PFNGLNORMAL3SPROC glad_glNormal3s = NULL;
PFNGLNORMAL3SVPROC glad_glNormal3sv = NULL;
PFNGLNORMALP3UIPROC glad_glNormalP3ui = NULL;
PFNGLNORMALP3UIVPROC glad_glNormalP3uiv = NULL;
PFNGLNORMALPOINTERPROC glad_glNormalPointer = NULL;
PFNGLOBJECTLABELPROC glad_glObjectLabel = NULL;
PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel = NULL;
PFNGLORTHOPROC glad_glOrtho = NULL;
PFNGLPASSTHROUGHPROC glad_glPassThrough = NULL;
PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv = NULL;
PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri = NULL;
PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback = NULL;
PFNGLPIXELMAPFVPROC glad_glPixelMapfv = NULL;
PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv = NULL;
PFNGLPIXELMAPUSVPROC glad_glPixelMapusv = NULL;
PFNGLPIXELSTOREFPROC glad_glPixelStoref = NULL;
PFNGLPIXELSTOREIPROC glad_glPixelStorei = NULL;
PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf = NULL;
PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi = NULL;
PFNGLPIXELZOOMPROC glad_glPixelZoom = NULL;
PFNGLPOINTPARAMETERFPROC glad_glPointParameterf = NULL;
PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv = NULL;
PFNGLPOINTPARAMETERIPROC glad_glPointParameteri = NULL;
PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv = NULL;
PFNGLPOINTSIZEPROC glad_glPointSize = NULL;
PFNGLPOLYGONMODEPROC glad_glPolygonMode = NULL;
PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset = NULL;
PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp = NULL;
PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple = NULL;
PFNGLPOPATTRIBPROC glad_glPopAttrib = NULL;
PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib = NULL;
PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup = NULL;
PFNGLPOPMATRIXPROC glad_glPopMatrix = NULL;
PFNGLPOPNAMEPROC glad_glPopName = NULL;
PFNGLPRIMITIVEBOUNDINGBOXPROC glad_glPrimitiveBoundingBox = NULL;
PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex = NULL;
PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures = NULL;
PFNGLPROGRAMBINARYPROC glad_glProgramBinary = NULL;
PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri = NULL;
PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d = NULL;
PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv = NULL;
PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f = NULL;
PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv = NULL;
PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i = NULL;
PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv = NULL;
PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui = NULL;
PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv = NULL;
PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d = NULL;
PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv = NULL;
PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f = NULL;
PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv = NULL;
PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i = NULL;
PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv = NULL;
PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui = NULL;
PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv = NULL;
PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d = NULL;
PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv = NULL;
PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f = NULL;
PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv = NULL;
PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i = NULL;
PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv = NULL;
PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui = NULL;
PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv = NULL;
PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d = NULL;
PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv = NULL;
PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f = NULL;
PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv = NULL;
PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i = NULL;
PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv = NULL;
PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui = NULL;
PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv = NULL;
PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex = NULL;
PFNGLPUSHATTRIBPROC glad_glPushAttrib = NULL;
PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib = NULL;
PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup = NULL;
PFNGLPUSHMATRIXPROC glad_glPushMatrix = NULL;
PFNGLPUSHNAMEPROC glad_glPushName = NULL;
PFNGLQUERYCOUNTERPROC glad_glQueryCounter = NULL;
PFNGLRASTERPOS2DPROC glad_glRasterPos2d = NULL;
PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv = NULL;
PFNGLRASTERPOS2FPROC glad_glRasterPos2f = NULL;
PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv = NULL;
PFNGLRASTERPOS2IPROC glad_glRasterPos2i = NULL;
PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv = NULL;
PFNGLRASTERPOS2SPROC glad_glRasterPos2s = NULL;
PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv = NULL;
PFNGLRASTERPOS3DPROC glad_glRasterPos3d = NULL;
PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv = NULL;
PFNGLRASTERPOS3FPROC glad_glRasterPos3f = NULL;
PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv = NULL;
PFNGLRASTERPOS3IPROC glad_glRasterPos3i = NULL;
PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv = NULL;
PFNGLRASTERPOS3SPROC glad_glRasterPos3s = NULL;
PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv = NULL;
PFNGLRASTERPOS4DPROC glad_glRasterPos4d = NULL;
PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv = NULL;
PFNGLRASTERPOS4FPROC glad_glRasterPos4f = NULL;
PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv = NULL;
PFNGLRASTERPOS4IPROC glad_glRasterPos4i = NULL;
PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv = NULL;
PFNGLRASTERPOS4SPROC glad_glRasterPos4s = NULL;
PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv = NULL;
PFNGLREADBUFFERPROC glad_glReadBuffer = NULL;
PFNGLREADPIXELSPROC glad_glReadPixels = NULL;
PFNGLREADNPIXELSPROC glad_glReadnPixels = NULL;
PFNGLRECTDPROC glad_glRectd = NULL;
PFNGLRECTDVPROC glad_glRectdv = NULL;
PFNGLRECTFPROC glad_glRectf = NULL;
PFNGLRECTFVPROC glad_glRectfv = NULL;
PFNGLRECTIPROC glad_glRecti = NULL;
PFNGLRECTIVPROC glad_glRectiv = NULL;
PFNGLRECTSPROC glad_glRects = NULL;
PFNGLRECTSVPROC glad_glRectsv = NULL;
PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler = NULL;
PFNGLRENDERMODEPROC glad_glRenderMode = NULL;
PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample =
    NULL;
PFNGLRESUMETRANSFORMFEEDBACKPROC glad_glResumeTransformFeedback = NULL;
PFNGLROTATEDPROC glad_glRotated = NULL;
PFNGLROTATEFPROC glad_glRotatef = NULL;
PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage = NULL;
PFNGLSAMPLEMASKIPROC glad_glSampleMaski = NULL;
PFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv = NULL;
PFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv = NULL;
PFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf = NULL;
PFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv = NULL;
PFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri = NULL;
PFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv = NULL;
PFNGLSCALEDPROC glad_glScaled = NULL;
PFNGLSCALEFPROC glad_glScalef = NULL;
PFNGLSCISSORPROC glad_glScissor = NULL;
PFNGLSCISSORARRAYVPROC glad_glScissorArrayv = NULL;
PFNGLSCISSORINDEXEDPROC glad_glScissorIndexed = NULL;
PFNGLSCISSORINDEXEDVPROC glad_glScissorIndexedv = NULL;
PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b = NULL;
PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv = NULL;
PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d = NULL;
PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv = NULL;
PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f = NULL;
PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv = NULL;
PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i = NULL;
PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv = NULL;
PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s = NULL;
PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv = NULL;
PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub = NULL;
PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv = NULL;
PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui = NULL;
PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv = NULL;
PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us = NULL;
PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv = NULL;
PFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui = NULL;
PFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv = NULL;
PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer = NULL;
PFNGLSELECTBUFFERPROC glad_glSelectBuffer = NULL;
PFNGLSHADEMODELPROC glad_glShadeModel = NULL;
PFNGLSHADERBINARYPROC glad_glShaderBinary = NULL;
PFNGLSHADERSOURCEPROC glad_glShaderSource = NULL;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC glad_glShaderStorageBlockBinding = NULL;
PFNGLSPECIALIZESHADERPROC glad_glSpecializeShader = NULL;
PFNGLSTENCILFUNCPROC glad_glStencilFunc = NULL;
PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate = NULL;
PFNGLSTENCILMASKPROC glad_glStencilMask = NULL;
PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate = NULL;
PFNGLSTENCILOPPROC glad_glStencilOp = NULL;
PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate = NULL;
PFNGLTEXBUFFERPROC glad_glTexBuffer = NULL;
PFNGLTEXBUFFERRANGEPROC glad_glTexBufferRange = NULL;
PFNGLTEXCOORD1DPROC glad_glTexCoord1d = NULL;
PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv = NULL;
PFNGLTEXCOORD1FPROC glad_glTexCoord1f = NULL;
PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv = NULL;
PFNGLTEXCOORD1IPROC glad_glTexCoord1i = NULL;
PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv = NULL;
PFNGLTEXCOORD1SPROC glad_glTexCoord1s = NULL;
PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv = NULL;
PFNGLTEXCOORD2DPROC glad_glTexCoord2d = NULL;
PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv = NULL;
PFNGLTEXCOORD2FPROC glad_glTexCoord2f = NULL;
PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv = NULL;
PFNGLTEXCOORD2IPROC glad_glTexCoord2i = NULL;
PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv = NULL;
PFNGLTEXCOORD2SPROC glad_glTexCoord2s = NULL;
PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv = NULL;
PFNGLTEXCOORD3DPROC glad_glTexCoord3d = NULL;
PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv = NULL;
PFNGLTEXCOORD3FPROC glad_glTexCoord3f = NULL;
PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv = NULL;
PFNGLTEXCOORD3IPROC glad_glTexCoord3i = NULL;
PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv = NULL;
PFNGLTEXCOORD3SPROC glad_glTexCoord3s = NULL;
PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv = NULL;
PFNGLTEXCOORD4DPROC glad_glTexCoord4d = NULL;
PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv = NULL;
PFNGLTEXCOORD4FPROC glad_glTexCoord4f = NULL;
PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv = NULL;
PFNGLTEXCOORD4IPROC glad_glTexCoord4i = NULL;
PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv = NULL;
PFNGLTEXCOORD4SPROC glad_glTexCoord4s = NULL;
PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv = NULL;
PFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui = NULL;
PFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv = NULL;
PFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui = NULL;
PFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv = NULL;
PFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui = NULL;
PFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv = NULL;
PFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui = NULL;
PFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv = NULL;
PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer = NULL;
PFNGLTEXENVFPROC glad_glTexEnvf = NULL;
PFNGLTEXENVFVPROC glad_glTexEnvfv = NULL;
PFNGLTEXENVIPROC glad_glTexEnvi = NULL;
PFNGLTEXENVIVPROC glad_glTexEnviv = NULL;
PFNGLTEXGENDPROC glad_glTexGend = NULL;
PFNGLTEXGENDVPROC glad_glTexGendv = NULL;
PFNGLTEXGENFPROC glad_glTexGenf = NULL;
PFNGLTEXGENFVPROC glad_glTexGenfv = NULL;
PFNGLTEXGENIPROC glad_glTexGeni = NULL;
PFNGLTEXGENIVPROC glad_glTexGeniv = NULL;
PFNGLTEXIMAGE1DPROC glad_glTexImage1D = NULL;
PFNGLTEXIMAGE2DPROC glad_glTexImage2D = NULL;
PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample = NULL;
PFNGLTEXIMAGE3DPROC glad_glTexImage3D = NULL;
PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample = NULL;
PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv = NULL;
PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv = NULL;
PFNGLTEXPARAMETERFPROC glad_glTexParameterf = NULL;
PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv = NULL;
PFNGLTEXPARAMETERIPROC glad_glTexParameteri = NULL;
PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv = NULL;
PFNGLTEXSTORAGE1DPROC glad_glTexStorage1D = NULL;
PFNGLTEXSTORAGE2DPROC glad_glTexStorage2D = NULL;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC glad_glTexStorage2DMultisample = NULL;
PFNGLTEXSTORAGE3DPROC glad_glTexStorage3D = NULL;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC glad_glTexStorage3DMultisample = NULL;
PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D = NULL;
PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D = NULL;
PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D = NULL;
PFNGLTEXTUREBARRIERPROC glad_glTextureBarrier = NULL;
PFNGLTEXTUREBUFFERPROC glad_glTextureBuffer = NULL;
PFNGLTEXTUREBUFFERRANGEPROC glad_glTextureBufferRange = NULL;
PFNGLTEXTUREPARAMETERIIVPROC glad_glTextureParameterIiv = NULL;
PFNGLTEXTUREPARAMETERIUIVPROC glad_glTextureParameterIuiv = NULL;
PFNGLTEXTUREPARAMETERFPROC glad_glTextureParameterf = NULL;
PFNGLTEXTUREPARAMETERFVPROC glad_glTextureParameterfv = NULL;
PFNGLTEXTUREPARAMETERIPROC glad_glTextureParameteri = NULL;
PFNGLTEXTUREPARAMETERIVPROC glad_glTextureParameteriv = NULL;
PFNGLTEXTURESTORAGE1DPROC glad_glTextureStorage1D = NULL;
PFNGLTEXTURESTORAGE2DPROC glad_glTextureStorage2D = NULL;
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glad_glTextureStorage2DMultisample = NULL;
PFNGLTEXTURESTORAGE3DPROC glad_glTextureStorage3D = NULL;
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glad_glTextureStorage3DMultisample = NULL;
PFNGLTEXTURESUBIMAGE1DPROC glad_glTextureSubImage1D = NULL;
PFNGLTEXTURESUBIMAGE2DPROC glad_glTextureSubImage2D = NULL;
PFNGLTEXTURESUBIMAGE3DPROC glad_glTextureSubImage3D = NULL;
PFNGLTEXTUREVIEWPROC glad_glTextureView = NULL;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glad_glTransformFeedbackBufferBase = NULL;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glad_glTransformFeedbackBufferRange =
    NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings = NULL;
PFNGLTRANSLATEDPROC glad_glTranslated = NULL;
PFNGLTRANSLATEFPROC glad_glTranslatef = NULL;
PFNGLUNIFORM1DPROC glad_glUniform1d = NULL;
PFNGLUNIFORM1DVPROC glad_glUniform1dv = NULL;
PFNGLUNIFORM1FPROC glad_glUniform1f = NULL;
PFNGLUNIFORM1FVPROC glad_glUniform1fv = NULL;
PFNGLUNIFORM1IPROC glad_glUniform1i = NULL;
PFNGLUNIFORM1IVPROC glad_glUniform1iv = NULL;
PFNGLUNIFORM1UIPROC glad_glUniform1ui = NULL;
PFNGLUNIFORM1UIVPROC glad_glUniform1uiv = NULL;
PFNGLUNIFORM2DPROC glad_glUniform2d = NULL;
PFNGLUNIFORM2DVPROC glad_glUniform2dv = NULL;
PFNGLUNIFORM2FPROC glad_glUniform2f = NULL;
PFNGLUNIFORM2FVPROC glad_glUniform2fv = NULL;
PFNGLUNIFORM2IPROC glad_glUniform2i = NULL;
PFNGLUNIFORM2IVPROC glad_glUniform2iv = NULL;
PFNGLUNIFORM2UIPROC glad_glUniform2ui = NULL;
PFNGLUNIFORM2UIVPROC glad_glUniform2uiv = NULL;
PFNGLUNIFORM3DPROC glad_glUniform3d = NULL;
PFNGLUNIFORM3DVPROC glad_glUniform3dv = NULL;
PFNGLUNIFORM3FPROC glad_glUniform3f = NULL;
PFNGLUNIFORM3FVPROC glad_glUniform3fv = NULL;
PFNGLUNIFORM3IPROC glad_glUniform3i = NULL;
PFNGLUNIFORM3IVPROC glad_glUniform3iv = NULL;
PFNGLUNIFORM3UIPROC glad_glUniform3ui = NULL;
PFNGLUNIFORM3UIVPROC glad_glUniform3uiv = NULL;
PFNGLUNIFORM4DPROC glad_glUniform4d = NULL;
PFNGLUNIFORM4DVPROC glad_glUniform4dv = NULL;
PFNGLUNIFORM4FPROC glad_glUniform4f = NULL;
PFNGLUNIFORM4FVPROC glad_glUniform4fv = NULL;
PFNGLUNIFORM4IPROC glad_glUniform4i = NULL;
PFNGLUNIFORM4IVPROC glad_glUniform4iv = NULL;
PFNGLUNIFORM4UIPROC glad_glUniform4ui = NULL;
PFNGLUNIFORM4UIVPROC glad_glUniform4uiv = NULL;
PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding = NULL;
PFNGLUNIFORMMATRIX2DVPROC glad_glUniformMatrix2dv = NULL;
PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv = NULL;
PFNGLUNIFORMMATRIX2X3DVPROC glad_glUniformMatrix2x3dv = NULL;
PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv = NULL;
PFNGLUNIFORMMATRIX2X4DVPROC glad_glUniformMatrix2x4dv = NULL;
PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv = NULL;
PFNGLUNIFORMMATRIX3DVPROC glad_glUniformMatrix3dv = NULL;
PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv = NULL;
PFNGLUNIFORMMATRIX3X2DVPROC glad_glUniformMatrix3x2dv = NULL;
PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv = NULL;
PFNGLUNIFORMMATRIX3X4DVPROC glad_glUniformMatrix3x4dv = NULL;
PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv = NULL;
PFNGLUNIFORMMATRIX4DVPROC glad_glUniformMatrix4dv = NULL;
PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv = NULL;
PFNGLUNIFORMMATRIX4X2DVPROC glad_glUniformMatrix4x2dv = NULL;
PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv = NULL;
PFNGLUNIFORMMATRIX4X3DVPROC glad_glUniformMatrix4x3dv = NULL;
PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv = NULL;
PFNGLUNIFORMSUBROUTINESUIVPROC glad_glUniformSubroutinesuiv = NULL;
PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer = NULL;
PFNGLUNMAPNAMEDBUFFERPROC glad_glUnmapNamedBuffer = NULL;
PFNGLUSEPROGRAMPROC glad_glUseProgram = NULL;
PFNGLUSEPROGRAMSTAGESPROC glad_glUseProgramStages = NULL;
PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram = NULL;
PFNGLVALIDATEPROGRAMPIPELINEPROC glad_glValidateProgramPipeline = NULL;
PFNGLVERTEX2DPROC glad_glVertex2d = NULL;
PFNGLVERTEX2DVPROC glad_glVertex2dv = NULL;
PFNGLVERTEX2FPROC glad_glVertex2f = NULL;
PFNGLVERTEX2FVPROC glad_glVertex2fv = NULL;
PFNGLVERTEX2IPROC glad_glVertex2i = NULL;
PFNGLVERTEX2IVPROC glad_glVertex2iv = NULL;
PFNGLVERTEX2SPROC glad_glVertex2s = NULL;
PFNGLVERTEX2SVPROC glad_glVertex2sv = NULL;
PFNGLVERTEX3DPROC glad_glVertex3d = NULL;
PFNGLVERTEX3DVPROC glad_glVertex3dv = NULL;
PFNGLVERTEX3FPROC glad_glVertex3f = NULL;
PFNGLVERTEX3FVPROC glad_glVertex3fv = NULL;
PFNGLVERTEX3IPROC glad_glVertex3i = NULL;
PFNGLVERTEX3IVPROC glad_glVertex3iv = NULL;
PFNGLVERTEX3SPROC glad_glVertex3s = NULL;
PFNGLVERTEX3SVPROC glad_glVertex3sv = NULL;
PFNGLVERTEX4DPROC glad_glVertex4d = NULL;
PFNGLVERTEX4DVPROC glad_glVertex4dv = NULL;
PFNGLVERTEX4FPROC glad_glVertex4f = NULL;
PFNGLVERTEX4FVPROC glad_glVertex4fv = NULL;
PFNGLVERTEX4IPROC glad_glVertex4i = NULL;
PFNGLVERTEX4IVPROC glad_glVertex4iv = NULL;
PFNGLVERTEX4SPROC glad_glVertex4s = NULL;
PFNGLVERTEX4SVPROC glad_glVertex4sv = NULL;
PFNGLVERTEXARRAYATTRIBBINDINGPROC glad_glVertexArrayAttribBinding = NULL;
PFNGLVERTEXARRAYATTRIBFORMATPROC glad_glVertexArrayAttribFormat = NULL;
PFNGLVERTEXARRAYATTRIBIFORMATPROC glad_glVertexArrayAttribIFormat = NULL;
PFNGLVERTEXARRAYATTRIBLFORMATPROC glad_glVertexArrayAttribLFormat = NULL;
PFNGLVERTEXARRAYBINDINGDIVISORPROC glad_glVertexArrayBindingDivisor = NULL;
PFNGLVERTEXARRAYELEMENTBUFFERPROC glad_glVertexArrayElementBuffer = NULL;
PFNGLVERTEXARRAYVERTEXBUFFERPROC glad_glVertexArrayVertexBuffer = NULL;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC glad_glVertexArrayVertexBuffers = NULL;
PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d = NULL;
PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv = NULL;
PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f = NULL;
PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv = NULL;
PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s = NULL;
PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv = NULL;
PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d = NULL;
PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv = NULL;
PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f = NULL;
PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv = NULL;
PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s = NULL;
PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv = NULL;
PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d = NULL;
PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv = NULL;
PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f = NULL;
PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv = NULL;
PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s = NULL;
PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv = NULL;
PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv = NULL;
PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv = NULL;
PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv = NULL;
PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub = NULL;
PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv = NULL;
PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv = NULL;
PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv = NULL;
PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv = NULL;
PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d = NULL;
PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv = NULL;
PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f = NULL;
PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv = NULL;
PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv = NULL;
PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s = NULL;
PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv = NULL;
PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv = NULL;
PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv = NULL;
PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv = NULL;
PFNGLVERTEXATTRIBBINDINGPROC glad_glVertexAttribBinding = NULL;
PFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor = NULL;
PFNGLVERTEXATTRIBFORMATPROC glad_glVertexAttribFormat = NULL;
PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i = NULL;
PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv = NULL;
PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui = NULL;
PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv = NULL;
PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i = NULL;
PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv = NULL;
PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui = NULL;
PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv = NULL;
PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i = NULL;
PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv = NULL;
PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui = NULL;
PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv = NULL;
PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv = NULL;
PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i = NULL;
PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv = NULL;
PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv = NULL;
PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv = NULL;
PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui = NULL;
PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv = NULL;
PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv = NULL;
PFNGLVERTEXATTRIBIFORMATPROC glad_glVertexAttribIFormat = NULL;
PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer = NULL;
PFNGLVERTEXATTRIBL1DPROC glad_glVertexAttribL1d = NULL;
PFNGLVERTEXATTRIBL1DVPROC glad_glVertexAttribL1dv = NULL;
PFNGLVERTEXATTRIBL2DPROC glad_glVertexAttribL2d = NULL;
PFNGLVERTEXATTRIBL2DVPROC glad_glVertexAttribL2dv = NULL;
PFNGLVERTEXATTRIBL3DPROC glad_glVertexAttribL3d = NULL;
PFNGLVERTEXATTRIBL3DVPROC glad_glVertexAttribL3dv = NULL;
PFNGLVERTEXATTRIBL4DPROC glad_glVertexAttribL4d = NULL;
PFNGLVERTEXATTRIBL4DVPROC glad_glVertexAttribL4dv = NULL;
PFNGLVERTEXATTRIBLFORMATPROC glad_glVertexAttribLFormat = NULL;
PFNGLVERTEXATTRIBLPOINTERPROC glad_glVertexAttribLPointer = NULL;
PFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui = NULL;
PFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv = NULL;
PFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui = NULL;
PFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv = NULL;
PFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui = NULL;
PFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv = NULL;
PFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui = NULL;
PFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv = NULL;
PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer = NULL;
PFNGLVERTEXBINDINGDIVISORPROC glad_glVertexBindingDivisor = NULL;
PFNGLVERTEXP2UIPROC glad_glVertexP2ui = NULL;
PFNGLVERTEXP2UIVPROC glad_glVertexP2uiv = NULL;
PFNGLVERTEXP3UIPROC glad_glVertexP3ui = NULL;
PFNGLVERTEXP3UIVPROC glad_glVertexP3uiv = NULL;
PFNGLVERTEXP4UIPROC glad_glVertexP4ui = NULL;
PFNGLVERTEXP4UIVPROC glad_glVertexP4uiv = NULL;
PFNGLVERTEXPOINTERPROC glad_glVertexPointer = NULL;
PFNGLVIEWPORTPROC glad_glViewport = NULL;
PFNGLVIEWPORTARRAYVPROC glad_glViewportArrayv = NULL;
PFNGLVIEWPORTINDEXEDFPROC glad_glViewportIndexedf = NULL;
PFNGLVIEWPORTINDEXEDFVPROC glad_glViewportIndexedfv = NULL;
PFNGLWAITSYNCPROC glad_glWaitSync = NULL;
PFNGLWINDOWPOS2DPROC glad_glWindowPos2d = NULL;
PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv = NULL;
PFNGLWINDOWPOS2FPROC glad_glWindowPos2f = NULL;
PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv = NULL;
PFNGLWINDOWPOS2IPROC glad_glWindowPos2i = NULL;
PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv = NULL;
PFNGLWINDOWPOS2SPROC glad_glWindowPos2s = NULL;
PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv = NULL;
PFNGLWINDOWPOS3DPROC glad_glWindowPos3d = NULL;
PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv = NULL;
PFNGLWINDOWPOS3FPROC glad_glWindowPos3f = NULL;
PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv = NULL;
PFNGLWINDOWPOS3IPROC glad_glWindowPos3i = NULL;
PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv = NULL;
PFNGLWINDOWPOS3SPROC glad_glWindowPos3s = NULL;
PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv = NULL;
int GLAD_GL_EXT_422_pixels = 0;
int GLAD_GL_EXT_EGL_image_array = 0;
int GLAD_GL_EXT_EGL_image_storage = 0;
int GLAD_GL_EXT_EGL_sync = 0;
int GLAD_GL_EXT_YUV_target = 0;
int GLAD_GL_EXT_abgr = 0;
int GLAD_GL_EXT_base_instance = 0;
int GLAD_GL_EXT_bgra = 0;
int GLAD_GL_EXT_bindable_uniform = 0;
int GLAD_GL_EXT_blend_color = 0;
int GLAD_GL_EXT_blend_equation_separate = 0;
int GLAD_GL_EXT_blend_func_extended = 0;
int GLAD_GL_EXT_blend_func_separate = 0;
int GLAD_GL_EXT_blend_logic_op = 0;
int GLAD_GL_EXT_blend_minmax = 0;
int GLAD_GL_EXT_blend_subtract = 0;
int GLAD_GL_EXT_buffer_storage = 0;
int GLAD_GL_EXT_clear_texture = 0;
int GLAD_GL_EXT_clip_control = 0;
int GLAD_GL_EXT_clip_cull_distance = 0;
int GLAD_GL_EXT_clip_volume_hint = 0;
int GLAD_GL_EXT_cmyka = 0;
int GLAD_GL_EXT_color_buffer_float = 0;
int GLAD_GL_EXT_color_buffer_half_float = 0;
int GLAD_GL_EXT_color_subtable = 0;
int GLAD_GL_EXT_compiled_vertex_array = 0;
int GLAD_GL_EXT_conservative_depth = 0;
int GLAD_GL_EXT_convolution = 0;
int GLAD_GL_EXT_coordinate_frame = 0;
int GLAD_GL_EXT_copy_image = 0;
int GLAD_GL_EXT_copy_texture = 0;
int GLAD_GL_EXT_cull_vertex = 0;
int GLAD_GL_EXT_debug_label = 0;
int GLAD_GL_EXT_debug_marker = 0;
int GLAD_GL_EXT_depth_bounds_test = 0;
int GLAD_GL_EXT_depth_clamp = 0;
int GLAD_GL_EXT_direct_state_access = 0;
int GLAD_GL_EXT_discard_framebuffer = 0;
int GLAD_GL_EXT_disjoint_timer_query = 0;
int GLAD_GL_EXT_draw_buffers = 0;
int GLAD_GL_EXT_draw_buffers2 = 0;
int GLAD_GL_EXT_draw_buffers_indexed = 0;
int GLAD_GL_EXT_draw_elements_base_vertex = 0;
int GLAD_GL_EXT_draw_instanced = 0;
int GLAD_GL_EXT_draw_range_elements = 0;
int GLAD_GL_EXT_draw_transform_feedback = 0;
int GLAD_GL_EXT_external_buffer = 0;
int GLAD_GL_EXT_float_blend = 0;
int GLAD_GL_EXT_fog_coord = 0;
int GLAD_GL_EXT_framebuffer_blit = 0;
int GLAD_GL_EXT_framebuffer_multisample = 0;
int GLAD_GL_EXT_framebuffer_multisample_blit_scaled = 0;
int GLAD_GL_EXT_framebuffer_object = 0;
int GLAD_GL_EXT_framebuffer_sRGB = 0;
int GLAD_GL_EXT_geometry_point_size = 0;
int GLAD_GL_EXT_geometry_shader = 0;
int GLAD_GL_EXT_geometry_shader4 = 0;
int GLAD_GL_EXT_gpu_program_parameters = 0;
int GLAD_GL_EXT_gpu_shader4 = 0;
int GLAD_GL_EXT_gpu_shader5 = 0;
int GLAD_GL_EXT_histogram = 0;
int GLAD_GL_EXT_index_array_formats = 0;
int GLAD_GL_EXT_index_func = 0;
int GLAD_GL_EXT_index_material = 0;
int GLAD_GL_EXT_index_texture = 0;
int GLAD_GL_EXT_instanced_arrays = 0;
int GLAD_GL_EXT_light_texture = 0;
int GLAD_GL_EXT_map_buffer_range = 0;
int GLAD_GL_EXT_memory_object = 0;
int GLAD_GL_EXT_memory_object_fd = 0;
int GLAD_GL_EXT_memory_object_win32 = 0;
int GLAD_GL_EXT_misc_attribute = 0;
int GLAD_GL_EXT_multi_draw_arrays = 0;
int GLAD_GL_EXT_multi_draw_indirect = 0;
int GLAD_GL_EXT_multisample = 0;
int GLAD_GL_EXT_multisampled_compatibility = 0;
int GLAD_GL_EXT_multisampled_render_to_texture = 0;
int GLAD_GL_EXT_multiview_draw_buffers = 0;
int GLAD_GL_EXT_multiview_tessellation_geometry_shader = 0;
int GLAD_GL_EXT_multiview_texture_multisample = 0;
int GLAD_GL_EXT_multiview_timer_query = 0;
int GLAD_GL_EXT_occlusion_query_boolean = 0;
int GLAD_GL_EXT_packed_depth_stencil = 0;
int GLAD_GL_EXT_packed_float = 0;
int GLAD_GL_EXT_packed_pixels = 0;
int GLAD_GL_EXT_paletted_texture = 0;
int GLAD_GL_EXT_pixel_buffer_object = 0;
int GLAD_GL_EXT_pixel_transform = 0;
int GLAD_GL_EXT_pixel_transform_color_table = 0;
int GLAD_GL_EXT_point_parameters = 0;
int GLAD_GL_EXT_polygon_offset = 0;
int GLAD_GL_EXT_polygon_offset_clamp = 0;
int GLAD_GL_EXT_post_depth_coverage = 0;
int GLAD_GL_EXT_primitive_bounding_box = 0;
int GLAD_GL_EXT_protected_textures = 0;
int GLAD_GL_EXT_provoking_vertex = 0;
int GLAD_GL_EXT_pvrtc_sRGB = 0;
int GLAD_GL_EXT_raster_multisample = 0;
int GLAD_GL_EXT_read_format_bgra = 0;
int GLAD_GL_EXT_render_snorm = 0;
int GLAD_GL_EXT_rescale_normal = 0;
int GLAD_GL_EXT_robustness = 0;
int GLAD_GL_EXT_sRGB = 0;
int GLAD_GL_EXT_sRGB_write_control = 0;
int GLAD_GL_EXT_secondary_color = 0;
int GLAD_GL_EXT_semaphore = 0;
int GLAD_GL_EXT_semaphore_fd = 0;
int GLAD_GL_EXT_semaphore_win32 = 0;
int GLAD_GL_EXT_separate_shader_objects = 0;
int GLAD_GL_EXT_separate_specular_color = 0;
int GLAD_GL_EXT_shader_framebuffer_fetch = 0;
int GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent = 0;
int GLAD_GL_EXT_shader_group_vote = 0;
int GLAD_GL_EXT_shader_image_load_formatted = 0;
int GLAD_GL_EXT_shader_image_load_store = 0;
int GLAD_GL_EXT_shader_implicit_conversions = 0;
int GLAD_GL_EXT_shader_integer_mix = 0;
int GLAD_GL_EXT_shader_io_blocks = 0;
int GLAD_GL_EXT_shader_non_constant_global_initializers = 0;
int GLAD_GL_EXT_shader_pixel_local_storage = 0;
int GLAD_GL_EXT_shader_pixel_local_storage2 = 0;
int GLAD_GL_EXT_shader_texture_lod = 0;
int GLAD_GL_EXT_shadow_funcs = 0;
int GLAD_GL_EXT_shadow_samplers = 0;
int GLAD_GL_EXT_shared_texture_palette = 0;
int GLAD_GL_EXT_sparse_texture = 0;
int GLAD_GL_EXT_sparse_texture2 = 0;
int GLAD_GL_EXT_stencil_clear_tag = 0;
int GLAD_GL_EXT_stencil_two_side = 0;
int GLAD_GL_EXT_stencil_wrap = 0;
int GLAD_GL_EXT_subtexture = 0;
int GLAD_GL_EXT_tessellation_point_size = 0;
int GLAD_GL_EXT_tessellation_shader = 0;
int GLAD_GL_EXT_texture = 0;
int GLAD_GL_EXT_texture3D = 0;
int GLAD_GL_EXT_texture_array = 0;
int GLAD_GL_EXT_texture_border_clamp = 0;
int GLAD_GL_EXT_texture_buffer = 0;
int GLAD_GL_EXT_texture_buffer_object = 0;
int GLAD_GL_EXT_texture_compression_astc_decode_mode = 0;
int GLAD_GL_EXT_texture_compression_bptc = 0;
int GLAD_GL_EXT_texture_compression_dxt1 = 0;
int GLAD_GL_EXT_texture_compression_latc = 0;
int GLAD_GL_EXT_texture_compression_rgtc = 0;
int GLAD_GL_EXT_texture_compression_s3tc = 0;
int GLAD_GL_EXT_texture_compression_s3tc_srgb = 0;
int GLAD_GL_EXT_texture_cube_map = 0;
int GLAD_GL_EXT_texture_cube_map_array = 0;
int GLAD_GL_EXT_texture_env_add = 0;
int GLAD_GL_EXT_texture_env_combine = 0;
int GLAD_GL_EXT_texture_env_dot3 = 0;
int GLAD_GL_EXT_texture_filter_anisotropic = 0;
int GLAD_GL_EXT_texture_filter_minmax = 0;
int GLAD_GL_EXT_texture_format_BGRA8888 = 0;
int GLAD_GL_EXT_texture_format_sRGB_override = 0;
int GLAD_GL_EXT_texture_integer = 0;
int GLAD_GL_EXT_texture_lod_bias = 0;
int GLAD_GL_EXT_texture_mirror_clamp = 0;
int GLAD_GL_EXT_texture_mirror_clamp_to_edge = 0;
int GLAD_GL_EXT_texture_norm16 = 0;
int GLAD_GL_EXT_texture_object = 0;
int GLAD_GL_EXT_texture_perturb_normal = 0;
int GLAD_GL_EXT_texture_query_lod = 0;
int GLAD_GL_EXT_texture_rg = 0;
int GLAD_GL_EXT_texture_sRGB = 0;
int GLAD_GL_EXT_texture_sRGB_R8 = 0;
int GLAD_GL_EXT_texture_sRGB_RG8 = 0;
int GLAD_GL_EXT_texture_sRGB_decode = 0;
int GLAD_GL_EXT_texture_shadow_lod = 0;
int GLAD_GL_EXT_texture_shared_exponent = 0;
int GLAD_GL_EXT_texture_snorm = 0;
int GLAD_GL_EXT_texture_storage = 0;
int GLAD_GL_EXT_texture_swizzle = 0;
int GLAD_GL_EXT_texture_type_2_10_10_10_REV = 0;
int GLAD_GL_EXT_texture_view = 0;
int GLAD_GL_EXT_timer_query = 0;
int GLAD_GL_EXT_transform_feedback = 0;
int GLAD_GL_EXT_unpack_subimage = 0;
int GLAD_GL_EXT_vertex_array = 0;
int GLAD_GL_EXT_vertex_array_bgra = 0;
int GLAD_GL_EXT_vertex_attrib_64bit = 0;
int GLAD_GL_EXT_vertex_shader = 0;
int GLAD_GL_EXT_vertex_weighting = 0;
int GLAD_GL_EXT_win32_keyed_mutex = 0;
int GLAD_GL_EXT_window_rectangles = 0;
int GLAD_GL_EXT_x11_sync_object = 0;
int GLAD_GL_KHR_blend_equation_advanced = 0;
int GLAD_GL_KHR_blend_equation_advanced_coherent = 0;
int GLAD_GL_KHR_context_flush_control = 0;
int GLAD_GL_KHR_debug = 0;
int GLAD_GL_KHR_no_error = 0;
int GLAD_GL_KHR_parallel_shader_compile = 0;
int GLAD_GL_KHR_robust_buffer_access_behavior = 0;
int GLAD_GL_KHR_robustness = 0;
int GLAD_GL_KHR_shader_subgroup = 0;
int GLAD_GL_KHR_texture_compression_astc_hdr = 0;
int GLAD_GL_KHR_texture_compression_astc_ldr = 0;
int GLAD_GL_KHR_texture_compression_astc_sliced_3d = 0;
int GLAD_GL_OES_EGL_image = 0;
int GLAD_GL_OES_EGL_image_external = 0;
int GLAD_GL_OES_EGL_image_external_essl3 = 0;
int GLAD_GL_OES_byte_coordinates = 0;
int GLAD_GL_OES_compressed_ETC1_RGB8_sub_texture = 0;
int GLAD_GL_OES_compressed_ETC1_RGB8_texture = 0;
int GLAD_GL_OES_compressed_paletted_texture = 0;
int GLAD_GL_OES_copy_image = 0;
int GLAD_GL_OES_depth24 = 0;
int GLAD_GL_OES_depth32 = 0;
int GLAD_GL_OES_depth_texture = 0;
int GLAD_GL_OES_draw_buffers_indexed = 0;
int GLAD_GL_OES_draw_elements_base_vertex = 0;
int GLAD_GL_OES_element_index_uint = 0;
int GLAD_GL_OES_fbo_render_mipmap = 0;
int GLAD_GL_OES_fixed_point = 0;
int GLAD_GL_OES_fragment_precision_high = 0;
int GLAD_GL_OES_geometry_point_size = 0;
int GLAD_GL_OES_geometry_shader = 0;
int GLAD_GL_OES_get_program_binary = 0;
int GLAD_GL_OES_gpu_shader5 = 0;
int GLAD_GL_OES_mapbuffer = 0;
int GLAD_GL_OES_packed_depth_stencil = 0;
int GLAD_GL_OES_primitive_bounding_box = 0;
int GLAD_GL_OES_query_matrix = 0;
int GLAD_GL_OES_read_format = 0;
int GLAD_GL_OES_required_internalformat = 0;
int GLAD_GL_OES_rgb8_rgba8 = 0;
int GLAD_GL_OES_sample_shading = 0;
int GLAD_GL_OES_sample_variables = 0;
int GLAD_GL_OES_shader_image_atomic = 0;
int GLAD_GL_OES_shader_io_blocks = 0;
int GLAD_GL_OES_shader_multisample_interpolation = 0;
int GLAD_GL_OES_single_precision = 0;
int GLAD_GL_OES_standard_derivatives = 0;
int GLAD_GL_OES_stencil1 = 0;
int GLAD_GL_OES_stencil4 = 0;
int GLAD_GL_OES_surfaceless_context = 0;
int GLAD_GL_OES_tessellation_point_size = 0;
int GLAD_GL_OES_tessellation_shader = 0;
int GLAD_GL_OES_texture_3D = 0;
int GLAD_GL_OES_texture_border_clamp = 0;
int GLAD_GL_OES_texture_buffer = 0;
int GLAD_GL_OES_texture_compression_astc = 0;
int GLAD_GL_OES_texture_cube_map_array = 0;
int GLAD_GL_OES_texture_float = 0;
int GLAD_GL_OES_texture_float_linear = 0;
int GLAD_GL_OES_texture_half_float = 0;
int GLAD_GL_OES_texture_half_float_linear = 0;
int GLAD_GL_OES_texture_npot = 0;
int GLAD_GL_OES_texture_stencil8 = 0;
int GLAD_GL_OES_texture_storage_multisample_2d_array = 0;
int GLAD_GL_OES_texture_view = 0;
int GLAD_GL_OES_vertex_array_object = 0;
int GLAD_GL_OES_vertex_half_float = 0;
int GLAD_GL_OES_vertex_type_10_10_10_2 = 0;
int GLAD_GL_OES_viewport_array = 0;
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC glad_glEGLImageTargetTexStorageEXT = NULL;
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC
glad_glEGLImageTargetTextureStorageEXT = NULL;
PFNGLUNIFORMBUFFEREXTPROC glad_glUniformBufferEXT = NULL;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC glad_glGetUniformBufferSizeEXT = NULL;
PFNGLGETUNIFORMOFFSETEXTPROC glad_glGetUniformOffsetEXT = NULL;
PFNGLBLENDCOLOREXTPROC glad_glBlendColorEXT = NULL;
PFNGLBLENDEQUATIONSEPARATEEXTPROC glad_glBlendEquationSeparateEXT = NULL;
PFNGLBLENDFUNCSEPARATEEXTPROC glad_glBlendFuncSeparateEXT = NULL;
PFNGLBLENDEQUATIONEXTPROC glad_glBlendEquationEXT = NULL;
PFNGLCOLORSUBTABLEEXTPROC glad_glColorSubTableEXT = NULL;
PFNGLCOPYCOLORSUBTABLEEXTPROC glad_glCopyColorSubTableEXT = NULL;
PFNGLLOCKARRAYSEXTPROC glad_glLockArraysEXT = NULL;
PFNGLUNLOCKARRAYSEXTPROC glad_glUnlockArraysEXT = NULL;
PFNGLCONVOLUTIONFILTER1DEXTPROC glad_glConvolutionFilter1DEXT = NULL;
PFNGLCONVOLUTIONFILTER2DEXTPROC glad_glConvolutionFilter2DEXT = NULL;
PFNGLCONVOLUTIONPARAMETERFEXTPROC glad_glConvolutionParameterfEXT = NULL;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC glad_glConvolutionParameterfvEXT = NULL;
PFNGLCONVOLUTIONPARAMETERIEXTPROC glad_glConvolutionParameteriEXT = NULL;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC glad_glConvolutionParameterivEXT = NULL;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glad_glCopyConvolutionFilter1DEXT = NULL;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glad_glCopyConvolutionFilter2DEXT = NULL;
PFNGLGETCONVOLUTIONFILTEREXTPROC glad_glGetConvolutionFilterEXT = NULL;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glad_glGetConvolutionParameterfvEXT =
    NULL;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glad_glGetConvolutionParameterivEXT =
    NULL;
PFNGLGETSEPARABLEFILTEREXTPROC glad_glGetSeparableFilterEXT = NULL;
PFNGLSEPARABLEFILTER2DEXTPROC glad_glSeparableFilter2DEXT = NULL;
PFNGLTANGENT3BEXTPROC glad_glTangent3bEXT = NULL;
PFNGLTANGENT3BVEXTPROC glad_glTangent3bvEXT = NULL;
PFNGLTANGENT3DEXTPROC glad_glTangent3dEXT = NULL;
PFNGLTANGENT3DVEXTPROC glad_glTangent3dvEXT = NULL;
PFNGLTANGENT3FEXTPROC glad_glTangent3fEXT = NULL;
PFNGLTANGENT3FVEXTPROC glad_glTangent3fvEXT = NULL;
PFNGLTANGENT3IEXTPROC glad_glTangent3iEXT = NULL;
PFNGLTANGENT3IVEXTPROC glad_glTangent3ivEXT = NULL;
PFNGLTANGENT3SEXTPROC glad_glTangent3sEXT = NULL;
PFNGLTANGENT3SVEXTPROC glad_glTangent3svEXT = NULL;
PFNGLBINORMAL3BEXTPROC glad_glBinormal3bEXT = NULL;
PFNGLBINORMAL3BVEXTPROC glad_glBinormal3bvEXT = NULL;
PFNGLBINORMAL3DEXTPROC glad_glBinormal3dEXT = NULL;
PFNGLBINORMAL3DVEXTPROC glad_glBinormal3dvEXT = NULL;
PFNGLBINORMAL3FEXTPROC glad_glBinormal3fEXT = NULL;
PFNGLBINORMAL3FVEXTPROC glad_glBinormal3fvEXT = NULL;
PFNGLBINORMAL3IEXTPROC glad_glBinormal3iEXT = NULL;
PFNGLBINORMAL3IVEXTPROC glad_glBinormal3ivEXT = NULL;
PFNGLBINORMAL3SEXTPROC glad_glBinormal3sEXT = NULL;
PFNGLBINORMAL3SVEXTPROC glad_glBinormal3svEXT = NULL;
PFNGLTANGENTPOINTEREXTPROC glad_glTangentPointerEXT = NULL;
PFNGLBINORMALPOINTEREXTPROC glad_glBinormalPointerEXT = NULL;
PFNGLCOPYTEXIMAGE1DEXTPROC glad_glCopyTexImage1DEXT = NULL;
PFNGLCOPYTEXIMAGE2DEXTPROC glad_glCopyTexImage2DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC glad_glCopyTexSubImage1DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC glad_glCopyTexSubImage2DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC glad_glCopyTexSubImage3DEXT = NULL;
PFNGLCULLPARAMETERDVEXTPROC glad_glCullParameterdvEXT = NULL;
PFNGLCULLPARAMETERFVEXTPROC glad_glCullParameterfvEXT = NULL;
PFNGLLABELOBJECTEXTPROC glad_glLabelObjectEXT = NULL;
PFNGLGETOBJECTLABELEXTPROC glad_glGetObjectLabelEXT = NULL;
PFNGLINSERTEVENTMARKEREXTPROC glad_glInsertEventMarkerEXT = NULL;
PFNGLPUSHGROUPMARKEREXTPROC glad_glPushGroupMarkerEXT = NULL;
PFNGLPOPGROUPMARKEREXTPROC glad_glPopGroupMarkerEXT = NULL;
PFNGLDEPTHBOUNDSEXTPROC glad_glDepthBoundsEXT = NULL;
PFNGLMATRIXLOADFEXTPROC glad_glMatrixLoadfEXT = NULL;
PFNGLMATRIXLOADDEXTPROC glad_glMatrixLoaddEXT = NULL;
PFNGLMATRIXMULTFEXTPROC glad_glMatrixMultfEXT = NULL;
PFNGLMATRIXMULTDEXTPROC glad_glMatrixMultdEXT = NULL;
PFNGLMATRIXLOADIDENTITYEXTPROC glad_glMatrixLoadIdentityEXT = NULL;
PFNGLMATRIXROTATEFEXTPROC glad_glMatrixRotatefEXT = NULL;
PFNGLMATRIXROTATEDEXTPROC glad_glMatrixRotatedEXT = NULL;
PFNGLMATRIXSCALEFEXTPROC glad_glMatrixScalefEXT = NULL;
PFNGLMATRIXSCALEDEXTPROC glad_glMatrixScaledEXT = NULL;
PFNGLMATRIXTRANSLATEFEXTPROC glad_glMatrixTranslatefEXT = NULL;
PFNGLMATRIXTRANSLATEDEXTPROC glad_glMatrixTranslatedEXT = NULL;
PFNGLMATRIXFRUSTUMEXTPROC glad_glMatrixFrustumEXT = NULL;
PFNGLMATRIXORTHOEXTPROC glad_glMatrixOrthoEXT = NULL;
PFNGLMATRIXPOPEXTPROC glad_glMatrixPopEXT = NULL;
PFNGLMATRIXPUSHEXTPROC glad_glMatrixPushEXT = NULL;
PFNGLCLIENTATTRIBDEFAULTEXTPROC glad_glClientAttribDefaultEXT = NULL;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_glPushClientAttribDefaultEXT = NULL;
PFNGLTEXTUREPARAMETERFEXTPROC glad_glTextureParameterfEXT = NULL;
PFNGLTEXTUREPARAMETERFVEXTPROC glad_glTextureParameterfvEXT = NULL;
PFNGLTEXTUREPARAMETERIEXTPROC glad_glTextureParameteriEXT = NULL;
PFNGLTEXTUREPARAMETERIVEXTPROC glad_glTextureParameterivEXT = NULL;
PFNGLTEXTUREIMAGE1DEXTPROC glad_glTextureImage1DEXT = NULL;
PFNGLTEXTUREIMAGE2DEXTPROC glad_glTextureImage2DEXT = NULL;
PFNGLTEXTURESUBIMAGE1DEXTPROC glad_glTextureSubImage1DEXT = NULL;
PFNGLTEXTURESUBIMAGE2DEXTPROC glad_glTextureSubImage2DEXT = NULL;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC glad_glCopyTextureImage1DEXT = NULL;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC glad_glCopyTextureImage2DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glad_glCopyTextureSubImage1DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_glCopyTextureSubImage2DEXT = NULL;
PFNGLGETTEXTUREIMAGEEXTPROC glad_glGetTextureImageEXT = NULL;
PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_glGetTextureParameterfvEXT = NULL;
PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_glGetTextureParameterivEXT = NULL;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_glGetTextureLevelParameterfvEXT =
    NULL;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_glGetTextureLevelParameterivEXT =
    NULL;
PFNGLTEXTUREIMAGE3DEXTPROC glad_glTextureImage3DEXT = NULL;
PFNGLTEXTURESUBIMAGE3DEXTPROC glad_glTextureSubImage3DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_glCopyTextureSubImage3DEXT = NULL;
PFNGLBINDMULTITEXTUREEXTPROC glad_glBindMultiTextureEXT = NULL;
PFNGLMULTITEXCOORDPOINTEREXTPROC glad_glMultiTexCoordPointerEXT = NULL;
PFNGLMULTITEXENVFEXTPROC glad_glMultiTexEnvfEXT = NULL;
PFNGLMULTITEXENVFVEXTPROC glad_glMultiTexEnvfvEXT = NULL;
PFNGLMULTITEXENVIEXTPROC glad_glMultiTexEnviEXT = NULL;
PFNGLMULTITEXENVIVEXTPROC glad_glMultiTexEnvivEXT = NULL;
PFNGLMULTITEXGENDEXTPROC glad_glMultiTexGendEXT = NULL;
PFNGLMULTITEXGENDVEXTPROC glad_glMultiTexGendvEXT = NULL;
PFNGLMULTITEXGENFEXTPROC glad_glMultiTexGenfEXT = NULL;
PFNGLMULTITEXGENFVEXTPROC glad_glMultiTexGenfvEXT = NULL;
PFNGLMULTITEXGENIEXTPROC glad_glMultiTexGeniEXT = NULL;
PFNGLMULTITEXGENIVEXTPROC glad_glMultiTexGenivEXT = NULL;
PFNGLGETMULTITEXENVFVEXTPROC glad_glGetMultiTexEnvfvEXT = NULL;
PFNGLGETMULTITEXENVIVEXTPROC glad_glGetMultiTexEnvivEXT = NULL;
PFNGLGETMULTITEXGENDVEXTPROC glad_glGetMultiTexGendvEXT = NULL;
PFNGLGETMULTITEXGENFVEXTPROC glad_glGetMultiTexGenfvEXT = NULL;
PFNGLGETMULTITEXGENIVEXTPROC glad_glGetMultiTexGenivEXT = NULL;
PFNGLMULTITEXPARAMETERIEXTPROC glad_glMultiTexParameteriEXT = NULL;
PFNGLMULTITEXPARAMETERIVEXTPROC glad_glMultiTexParameterivEXT = NULL;
PFNGLMULTITEXPARAMETERFEXTPROC glad_glMultiTexParameterfEXT = NULL;
PFNGLMULTITEXPARAMETERFVEXTPROC glad_glMultiTexParameterfvEXT = NULL;
PFNGLMULTITEXIMAGE1DEXTPROC glad_glMultiTexImage1DEXT = NULL;
PFNGLMULTITEXIMAGE2DEXTPROC glad_glMultiTexImage2DEXT = NULL;
PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_glMultiTexSubImage1DEXT = NULL;
PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_glMultiTexSubImage2DEXT = NULL;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC glad_glCopyMultiTexImage1DEXT = NULL;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC glad_glCopyMultiTexImage2DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC glad_glCopyMultiTexSubImage1DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC glad_glCopyMultiTexSubImage2DEXT = NULL;
PFNGLGETMULTITEXIMAGEEXTPROC glad_glGetMultiTexImageEXT = NULL;
PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_glGetMultiTexParameterfvEXT = NULL;
PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_glGetMultiTexParameterivEXT = NULL;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_glGetMultiTexLevelParameterfvEXT =
    NULL;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_glGetMultiTexLevelParameterivEXT =
    NULL;
PFNGLMULTITEXIMAGE3DEXTPROC glad_glMultiTexImage3DEXT = NULL;
PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_glMultiTexSubImage3DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC glad_glCopyMultiTexSubImage3DEXT = NULL;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_glEnableClientStateIndexedEXT = NULL;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_glDisableClientStateIndexedEXT =
    NULL;
PFNGLGETFLOATINDEXEDVEXTPROC glad_glGetFloatIndexedvEXT = NULL;
PFNGLGETDOUBLEINDEXEDVEXTPROC glad_glGetDoubleIndexedvEXT = NULL;
PFNGLGETPOINTERINDEXEDVEXTPROC glad_glGetPointerIndexedvEXT = NULL;
PFNGLENABLEINDEXEDEXTPROC glad_glEnableIndexedEXT = NULL;
PFNGLDISABLEINDEXEDEXTPROC glad_glDisableIndexedEXT = NULL;
PFNGLISENABLEDINDEXEDEXTPROC glad_glIsEnabledIndexedEXT = NULL;
PFNGLGETINTEGERINDEXEDVEXTPROC glad_glGetIntegerIndexedvEXT = NULL;
PFNGLGETBOOLEANINDEXEDVEXTPROC glad_glGetBooleanIndexedvEXT = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC glad_glCompressedTextureImage3DEXT = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC glad_glCompressedTextureImage2DEXT = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC glad_glCompressedTextureImage1DEXT = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC glad_glCompressedTextureSubImage3DEXT =
    NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC glad_glCompressedTextureSubImage2DEXT =
    NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC glad_glCompressedTextureSubImage1DEXT =
    NULL;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_glGetCompressedTextureImageEXT =
    NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC glad_glCompressedMultiTexImage3DEXT =
    NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC glad_glCompressedMultiTexImage2DEXT =
    NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC glad_glCompressedMultiTexImage1DEXT =
    NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
glad_glCompressedMultiTexSubImage3DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
glad_glCompressedMultiTexSubImage2DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
glad_glCompressedMultiTexSubImage1DEXT = NULL;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_glGetCompressedMultiTexImageEXT =
    NULL;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_glMatrixLoadTransposefEXT = NULL;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_glMatrixLoadTransposedEXT = NULL;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_glMatrixMultTransposefEXT = NULL;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_glMatrixMultTransposedEXT = NULL;
PFNGLNAMEDBUFFERDATAEXTPROC glad_glNamedBufferDataEXT = NULL;
PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_glNamedBufferSubDataEXT = NULL;
PFNGLMAPNAMEDBUFFEREXTPROC glad_glMapNamedBufferEXT = NULL;
PFNGLUNMAPNAMEDBUFFEREXTPROC glad_glUnmapNamedBufferEXT = NULL;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_glGetNamedBufferParameterivEXT =
    NULL;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_glGetNamedBufferPointervEXT = NULL;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_glGetNamedBufferSubDataEXT = NULL;
PFNGLPROGRAMUNIFORM1FEXTPROC glad_glProgramUniform1fEXT = NULL;
PFNGLPROGRAMUNIFORM2FEXTPROC glad_glProgramUniform2fEXT = NULL;
PFNGLPROGRAMUNIFORM3FEXTPROC glad_glProgramUniform3fEXT = NULL;
PFNGLPROGRAMUNIFORM4FEXTPROC glad_glProgramUniform4fEXT = NULL;
PFNGLPROGRAMUNIFORM1IEXTPROC glad_glProgramUniform1iEXT = NULL;
PFNGLPROGRAMUNIFORM2IEXTPROC glad_glProgramUniform2iEXT = NULL;
PFNGLPROGRAMUNIFORM3IEXTPROC glad_glProgramUniform3iEXT = NULL;
PFNGLPROGRAMUNIFORM4IEXTPROC glad_glProgramUniform4iEXT = NULL;
PFNGLPROGRAMUNIFORM1FVEXTPROC glad_glProgramUniform1fvEXT = NULL;
PFNGLPROGRAMUNIFORM2FVEXTPROC glad_glProgramUniform2fvEXT = NULL;
PFNGLPROGRAMUNIFORM3FVEXTPROC glad_glProgramUniform3fvEXT = NULL;
PFNGLPROGRAMUNIFORM4FVEXTPROC glad_glProgramUniform4fvEXT = NULL;
PFNGLPROGRAMUNIFORM1IVEXTPROC glad_glProgramUniform1ivEXT = NULL;
PFNGLPROGRAMUNIFORM2IVEXTPROC glad_glProgramUniform2ivEXT = NULL;
PFNGLPROGRAMUNIFORM3IVEXTPROC glad_glProgramUniform3ivEXT = NULL;
PFNGLPROGRAMUNIFORM4IVEXTPROC glad_glProgramUniform4ivEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_glProgramUniformMatrix2fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_glProgramUniformMatrix3fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_glProgramUniformMatrix4fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_glProgramUniformMatrix2x3fvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_glProgramUniformMatrix3x2fvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_glProgramUniformMatrix2x4fvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_glProgramUniformMatrix4x2fvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_glProgramUniformMatrix3x4fvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_glProgramUniformMatrix4x3fvEXT =
    NULL;
PFNGLTEXTUREBUFFEREXTPROC glad_glTextureBufferEXT = NULL;
PFNGLMULTITEXBUFFEREXTPROC glad_glMultiTexBufferEXT = NULL;
PFNGLTEXTUREPARAMETERIIVEXTPROC glad_glTextureParameterIivEXT = NULL;
PFNGLTEXTUREPARAMETERIUIVEXTPROC glad_glTextureParameterIuivEXT = NULL;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_glGetTextureParameterIivEXT = NULL;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_glGetTextureParameterIuivEXT = NULL;
PFNGLMULTITEXPARAMETERIIVEXTPROC glad_glMultiTexParameterIivEXT = NULL;
PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_glMultiTexParameterIuivEXT = NULL;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_glGetMultiTexParameterIivEXT = NULL;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_glGetMultiTexParameterIuivEXT = NULL;
PFNGLPROGRAMUNIFORM1UIEXTPROC glad_glProgramUniform1uiEXT = NULL;
PFNGLPROGRAMUNIFORM2UIEXTPROC glad_glProgramUniform2uiEXT = NULL;
PFNGLPROGRAMUNIFORM3UIEXTPROC glad_glProgramUniform3uiEXT = NULL;
PFNGLPROGRAMUNIFORM4UIEXTPROC glad_glProgramUniform4uiEXT = NULL;
PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_glProgramUniform1uivEXT = NULL;
PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_glProgramUniform2uivEXT = NULL;
PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_glProgramUniform3uivEXT = NULL;
PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_glProgramUniform4uivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
glad_glNamedProgramLocalParameters4fvEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
glad_glNamedProgramLocalParameterI4iEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
glad_glNamedProgramLocalParameterI4ivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
glad_glNamedProgramLocalParametersI4ivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
glad_glNamedProgramLocalParameterI4uiEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
glad_glNamedProgramLocalParameterI4uivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
glad_glNamedProgramLocalParametersI4uivEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
glad_glGetNamedProgramLocalParameterIivEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
glad_glGetNamedProgramLocalParameterIuivEXT = NULL;
PFNGLENABLECLIENTSTATEIEXTPROC glad_glEnableClientStateiEXT = NULL;
PFNGLDISABLECLIENTSTATEIEXTPROC glad_glDisableClientStateiEXT = NULL;
PFNGLGETFLOATI_VEXTPROC glad_glGetFloati_vEXT = NULL;
PFNGLGETDOUBLEI_VEXTPROC glad_glGetDoublei_vEXT = NULL;
PFNGLGETPOINTERI_VEXTPROC glad_glGetPointeri_vEXT = NULL;
PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_glNamedProgramStringEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
glad_glNamedProgramLocalParameter4dEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
glad_glNamedProgramLocalParameter4dvEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
glad_glNamedProgramLocalParameter4fEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
glad_glNamedProgramLocalParameter4fvEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
glad_glGetNamedProgramLocalParameterdvEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
glad_glGetNamedProgramLocalParameterfvEXT = NULL;
PFNGLGETNAMEDPROGRAMIVEXTPROC glad_glGetNamedProgramivEXT = NULL;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_glGetNamedProgramStringEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_glNamedRenderbufferStorageEXT = NULL;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
glad_glGetNamedRenderbufferParameterivEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
glad_glNamedRenderbufferStorageMultisampleEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
glad_glNamedRenderbufferStorageMultisampleCoverageEXT = NULL;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC glad_glCheckNamedFramebufferStatusEXT =
    NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_glNamedFramebufferTexture1DEXT =
    NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_glNamedFramebufferTexture2DEXT =
    NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_glNamedFramebufferTexture3DEXT =
    NULL;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
glad_glNamedFramebufferRenderbufferEXT = NULL;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
glad_glGetNamedFramebufferAttachmentParameterivEXT = NULL;
PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_glGenerateTextureMipmapEXT = NULL;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_glGenerateMultiTexMipmapEXT = NULL;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_glFramebufferDrawBufferEXT = NULL;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_glFramebufferDrawBuffersEXT = NULL;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_glFramebufferReadBufferEXT = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetFramebufferParameterivEXT =
    NULL;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_glNamedCopyBufferSubDataEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_glNamedFramebufferTextureEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
glad_glNamedFramebufferTextureLayerEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_glNamedFramebufferTextureFaceEXT =
    NULL;
PFNGLTEXTURERENDERBUFFEREXTPROC glad_glTextureRenderbufferEXT = NULL;
PFNGLMULTITEXRENDERBUFFEREXTPROC glad_glMultiTexRenderbufferEXT = NULL;
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC glad_glVertexArrayVertexOffsetEXT = NULL;
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC glad_glVertexArrayColorOffsetEXT = NULL;
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC glad_glVertexArrayEdgeFlagOffsetEXT =
    NULL;
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC glad_glVertexArrayIndexOffsetEXT = NULL;
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC glad_glVertexArrayNormalOffsetEXT = NULL;
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC glad_glVertexArrayTexCoordOffsetEXT =
    NULL;
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
glad_glVertexArrayMultiTexCoordOffsetEXT = NULL;
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC glad_glVertexArrayFogCoordOffsetEXT =
    NULL;
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
glad_glVertexArraySecondaryColorOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
glad_glVertexArrayVertexAttribOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
glad_glVertexArrayVertexAttribIOffsetEXT = NULL;
PFNGLENABLEVERTEXARRAYEXTPROC glad_glEnableVertexArrayEXT = NULL;
PFNGLDISABLEVERTEXARRAYEXTPROC glad_glDisableVertexArrayEXT = NULL;
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_glEnableVertexArrayAttribEXT = NULL;
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_glDisableVertexArrayAttribEXT = NULL;
PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_glGetVertexArrayIntegervEXT = NULL;
PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_glGetVertexArrayPointervEXT = NULL;
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_glGetVertexArrayIntegeri_vEXT = NULL;
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_glGetVertexArrayPointeri_vEXT = NULL;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_glMapNamedBufferRangeEXT = NULL;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_glFlushMappedNamedBufferRangeEXT =
    NULL;
PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_glNamedBufferStorageEXT = NULL;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC glad_glClearNamedBufferDataEXT = NULL;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC glad_glClearNamedBufferSubDataEXT = NULL;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_glNamedFramebufferParameteriEXT =
    NULL;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
glad_glGetNamedFramebufferParameterivEXT = NULL;
PFNGLPROGRAMUNIFORM1DEXTPROC glad_glProgramUniform1dEXT = NULL;
PFNGLPROGRAMUNIFORM2DEXTPROC glad_glProgramUniform2dEXT = NULL;
PFNGLPROGRAMUNIFORM3DEXTPROC glad_glProgramUniform3dEXT = NULL;
PFNGLPROGRAMUNIFORM4DEXTPROC glad_glProgramUniform4dEXT = NULL;
PFNGLPROGRAMUNIFORM1DVEXTPROC glad_glProgramUniform1dvEXT = NULL;
PFNGLPROGRAMUNIFORM2DVEXTPROC glad_glProgramUniform2dvEXT = NULL;
PFNGLPROGRAMUNIFORM3DVEXTPROC glad_glProgramUniform3dvEXT = NULL;
PFNGLPROGRAMUNIFORM4DVEXTPROC glad_glProgramUniform4dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_glProgramUniformMatrix2dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_glProgramUniformMatrix3dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_glProgramUniformMatrix4dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_glProgramUniformMatrix2x3dvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_glProgramUniformMatrix2x4dvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_glProgramUniformMatrix3x2dvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_glProgramUniformMatrix3x4dvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_glProgramUniformMatrix4x2dvEXT =
    NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_glProgramUniformMatrix4x3dvEXT =
    NULL;
PFNGLTEXTUREBUFFERRANGEEXTPROC glad_glTextureBufferRangeEXT = NULL;
PFNGLTEXTURESTORAGE1DEXTPROC glad_glTextureStorage1DEXT = NULL;
PFNGLTEXTURESTORAGE2DEXTPROC glad_glTextureStorage2DEXT = NULL;
PFNGLTEXTURESTORAGE3DEXTPROC glad_glTextureStorage3DEXT = NULL;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC glad_glTextureStorage2DMultisampleEXT =
    NULL;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC glad_glTextureStorage3DMultisampleEXT =
    NULL;
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC glad_glVertexArrayBindVertexBufferEXT =
    NULL;
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
glad_glVertexArrayVertexAttribFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
glad_glVertexArrayVertexAttribIFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
glad_glVertexArrayVertexAttribLFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
glad_glVertexArrayVertexAttribBindingEXT = NULL;
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
glad_glVertexArrayVertexBindingDivisorEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
glad_glVertexArrayVertexAttribLOffsetEXT = NULL;
PFNGLTEXTUREPAGECOMMITMENTEXTPROC glad_glTexturePageCommitmentEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
glad_glVertexArrayVertexAttribDivisorEXT = NULL;
PFNGLCOLORMASKINDEXEDEXTPROC glad_glColorMaskIndexedEXT = NULL;
PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_glDrawArraysInstancedEXT = NULL;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_glDrawElementsInstancedEXT = NULL;
PFNGLDRAWRANGEELEMENTSEXTPROC glad_glDrawRangeElementsEXT = NULL;
PFNGLBUFFERSTORAGEEXTERNALEXTPROC glad_glBufferStorageExternalEXT = NULL;
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC glad_glNamedBufferStorageExternalEXT =
    NULL;
PFNGLFOGCOORDFEXTPROC glad_glFogCoordfEXT = NULL;
PFNGLFOGCOORDFVEXTPROC glad_glFogCoordfvEXT = NULL;
PFNGLFOGCOORDDEXTPROC glad_glFogCoorddEXT = NULL;
PFNGLFOGCOORDDVEXTPROC glad_glFogCoorddvEXT = NULL;
PFNGLFOGCOORDPOINTEREXTPROC glad_glFogCoordPointerEXT = NULL;
PFNGLBLITFRAMEBUFFEREXTPROC glad_glBlitFramebufferEXT = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
glad_glRenderbufferStorageMultisampleEXT = NULL;
PFNGLISRENDERBUFFEREXTPROC glad_glIsRenderbufferEXT = NULL;
PFNGLBINDRENDERBUFFEREXTPROC glad_glBindRenderbufferEXT = NULL;
PFNGLDELETERENDERBUFFERSEXTPROC glad_glDeleteRenderbuffersEXT = NULL;
PFNGLGENRENDERBUFFERSEXTPROC glad_glGenRenderbuffersEXT = NULL;
PFNGLRENDERBUFFERSTORAGEEXTPROC glad_glRenderbufferStorageEXT = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_glGetRenderbufferParameterivEXT =
    NULL;
PFNGLISFRAMEBUFFEREXTPROC glad_glIsFramebufferEXT = NULL;
PFNGLBINDFRAMEBUFFEREXTPROC glad_glBindFramebufferEXT = NULL;
PFNGLDELETEFRAMEBUFFERSEXTPROC glad_glDeleteFramebuffersEXT = NULL;
PFNGLGENFRAMEBUFFERSEXTPROC glad_glGenFramebuffersEXT = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glad_glCheckFramebufferStatusEXT = NULL;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_glFramebufferTexture1DEXT = NULL;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_glFramebufferTexture2DEXT = NULL;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_glFramebufferTexture3DEXT = NULL;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_glFramebufferRenderbufferEXT = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
glad_glGetFramebufferAttachmentParameterivEXT = NULL;
PFNGLGENERATEMIPMAPEXTPROC glad_glGenerateMipmapEXT = NULL;
PFNGLPROGRAMPARAMETERIEXTPROC glad_glProgramParameteriEXT = NULL;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC glad_glProgramEnvParameters4fvEXT = NULL;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC glad_glProgramLocalParameters4fvEXT =
    NULL;
PFNGLGETUNIFORMUIVEXTPROC glad_glGetUniformuivEXT = NULL;
PFNGLBINDFRAGDATALOCATIONEXTPROC glad_glBindFragDataLocationEXT = NULL;
PFNGLGETFRAGDATALOCATIONEXTPROC glad_glGetFragDataLocationEXT = NULL;
PFNGLUNIFORM1UIEXTPROC glad_glUniform1uiEXT = NULL;
PFNGLUNIFORM2UIEXTPROC glad_glUniform2uiEXT = NULL;
PFNGLUNIFORM3UIEXTPROC glad_glUniform3uiEXT = NULL;
PFNGLUNIFORM4UIEXTPROC glad_glUniform4uiEXT = NULL;
PFNGLUNIFORM1UIVEXTPROC glad_glUniform1uivEXT = NULL;
PFNGLUNIFORM2UIVEXTPROC glad_glUniform2uivEXT = NULL;
PFNGLUNIFORM3UIVEXTPROC glad_glUniform3uivEXT = NULL;
PFNGLUNIFORM4UIVEXTPROC glad_glUniform4uivEXT = NULL;
PFNGLGETHISTOGRAMEXTPROC glad_glGetHistogramEXT = NULL;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glad_glGetHistogramParameterfvEXT = NULL;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glad_glGetHistogramParameterivEXT = NULL;
PFNGLGETMINMAXEXTPROC glad_glGetMinmaxEXT = NULL;
PFNGLGETMINMAXPARAMETERFVEXTPROC glad_glGetMinmaxParameterfvEXT = NULL;
PFNGLGETMINMAXPARAMETERIVEXTPROC glad_glGetMinmaxParameterivEXT = NULL;
PFNGLHISTOGRAMEXTPROC glad_glHistogramEXT = NULL;
PFNGLMINMAXEXTPROC glad_glMinmaxEXT = NULL;
PFNGLRESETHISTOGRAMEXTPROC glad_glResetHistogramEXT = NULL;
PFNGLRESETMINMAXEXTPROC glad_glResetMinmaxEXT = NULL;
PFNGLINDEXFUNCEXTPROC glad_glIndexFuncEXT = NULL;
PFNGLINDEXMATERIALEXTPROC glad_glIndexMaterialEXT = NULL;
PFNGLAPPLYTEXTUREEXTPROC glad_glApplyTextureEXT = NULL;
PFNGLTEXTURELIGHTEXTPROC glad_glTextureLightEXT = NULL;
PFNGLTEXTUREMATERIALEXTPROC glad_glTextureMaterialEXT = NULL;
PFNGLGETUNSIGNEDBYTEVEXTPROC glad_glGetUnsignedBytevEXT = NULL;
PFNGLGETUNSIGNEDBYTEI_VEXTPROC glad_glGetUnsignedBytei_vEXT = NULL;
PFNGLDELETEMEMORYOBJECTSEXTPROC glad_glDeleteMemoryObjectsEXT = NULL;
PFNGLISMEMORYOBJECTEXTPROC glad_glIsMemoryObjectEXT = NULL;
PFNGLCREATEMEMORYOBJECTSEXTPROC glad_glCreateMemoryObjectsEXT = NULL;
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC glad_glMemoryObjectParameterivEXT = NULL;
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC glad_glGetMemoryObjectParameterivEXT =
    NULL;
PFNGLTEXSTORAGEMEM2DEXTPROC glad_glTexStorageMem2DEXT = NULL;
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC glad_glTexStorageMem2DMultisampleEXT =
    NULL;
PFNGLTEXSTORAGEMEM3DEXTPROC glad_glTexStorageMem3DEXT = NULL;
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC glad_glTexStorageMem3DMultisampleEXT =
    NULL;
PFNGLBUFFERSTORAGEMEMEXTPROC glad_glBufferStorageMemEXT = NULL;
PFNGLTEXTURESTORAGEMEM2DEXTPROC glad_glTextureStorageMem2DEXT = NULL;
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC
glad_glTextureStorageMem2DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGEMEM3DEXTPROC glad_glTextureStorageMem3DEXT = NULL;
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC
glad_glTextureStorageMem3DMultisampleEXT = NULL;
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC glad_glNamedBufferStorageMemEXT = NULL;
PFNGLTEXSTORAGEMEM1DEXTPROC glad_glTexStorageMem1DEXT = NULL;
PFNGLTEXTURESTORAGEMEM1DEXTPROC glad_glTextureStorageMem1DEXT = NULL;
PFNGLIMPORTMEMORYFDEXTPROC glad_glImportMemoryFdEXT = NULL;
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC glad_glImportMemoryWin32HandleEXT = NULL;
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC glad_glImportMemoryWin32NameEXT = NULL;
PFNGLMULTIDRAWARRAYSEXTPROC glad_glMultiDrawArraysEXT = NULL;
PFNGLMULTIDRAWELEMENTSEXTPROC glad_glMultiDrawElementsEXT = NULL;
PFNGLSAMPLEMASKEXTPROC glad_glSampleMaskEXT = NULL;
PFNGLSAMPLEPATTERNEXTPROC glad_glSamplePatternEXT = NULL;
PFNGLCOLORTABLEEXTPROC glad_glColorTableEXT = NULL;
PFNGLGETCOLORTABLEEXTPROC glad_glGetColorTableEXT = NULL;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glad_glGetColorTableParameterivEXT = NULL;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glad_glGetColorTableParameterfvEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glad_glPixelTransformParameteriEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glad_glPixelTransformParameterfEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glad_glPixelTransformParameterivEXT =
    NULL;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glad_glPixelTransformParameterfvEXT =
    NULL;
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
glad_glGetPixelTransformParameterivEXT = NULL;
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
glad_glGetPixelTransformParameterfvEXT = NULL;
PFNGLPOINTPARAMETERFEXTPROC glad_glPointParameterfEXT = NULL;
PFNGLPOINTPARAMETERFVEXTPROC glad_glPointParameterfvEXT = NULL;
PFNGLPOLYGONOFFSETEXTPROC glad_glPolygonOffsetEXT = NULL;
PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_glPolygonOffsetClampEXT = NULL;
PFNGLPROVOKINGVERTEXEXTPROC glad_glProvokingVertexEXT = NULL;
PFNGLRASTERSAMPLESEXTPROC glad_glRasterSamplesEXT = NULL;
PFNGLSECONDARYCOLOR3BEXTPROC glad_glSecondaryColor3bEXT = NULL;
PFNGLSECONDARYCOLOR3BVEXTPROC glad_glSecondaryColor3bvEXT = NULL;
PFNGLSECONDARYCOLOR3DEXTPROC glad_glSecondaryColor3dEXT = NULL;
PFNGLSECONDARYCOLOR3DVEXTPROC glad_glSecondaryColor3dvEXT = NULL;
PFNGLSECONDARYCOLOR3FEXTPROC glad_glSecondaryColor3fEXT = NULL;
PFNGLSECONDARYCOLOR3FVEXTPROC glad_glSecondaryColor3fvEXT = NULL;
PFNGLSECONDARYCOLOR3IEXTPROC glad_glSecondaryColor3iEXT = NULL;
PFNGLSECONDARYCOLOR3IVEXTPROC glad_glSecondaryColor3ivEXT = NULL;
PFNGLSECONDARYCOLOR3SEXTPROC glad_glSecondaryColor3sEXT = NULL;
PFNGLSECONDARYCOLOR3SVEXTPROC glad_glSecondaryColor3svEXT = NULL;
PFNGLSECONDARYCOLOR3UBEXTPROC glad_glSecondaryColor3ubEXT = NULL;
PFNGLSECONDARYCOLOR3UBVEXTPROC glad_glSecondaryColor3ubvEXT = NULL;
PFNGLSECONDARYCOLOR3UIEXTPROC glad_glSecondaryColor3uiEXT = NULL;
PFNGLSECONDARYCOLOR3UIVEXTPROC glad_glSecondaryColor3uivEXT = NULL;
PFNGLSECONDARYCOLOR3USEXTPROC glad_glSecondaryColor3usEXT = NULL;
PFNGLSECONDARYCOLOR3USVEXTPROC glad_glSecondaryColor3usvEXT = NULL;
PFNGLSECONDARYCOLORPOINTEREXTPROC glad_glSecondaryColorPointerEXT = NULL;
PFNGLGENSEMAPHORESEXTPROC glad_glGenSemaphoresEXT = NULL;
PFNGLDELETESEMAPHORESEXTPROC glad_glDeleteSemaphoresEXT = NULL;
PFNGLISSEMAPHOREEXTPROC glad_glIsSemaphoreEXT = NULL;
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC glad_glSemaphoreParameterui64vEXT = NULL;
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC glad_glGetSemaphoreParameterui64vEXT =
    NULL;
PFNGLWAITSEMAPHOREEXTPROC glad_glWaitSemaphoreEXT = NULL;
PFNGLSIGNALSEMAPHOREEXTPROC glad_glSignalSemaphoreEXT = NULL;
PFNGLIMPORTSEMAPHOREFDEXTPROC glad_glImportSemaphoreFdEXT = NULL;
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC glad_glImportSemaphoreWin32HandleEXT =
    NULL;
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC glad_glImportSemaphoreWin32NameEXT = NULL;
PFNGLUSESHADERPROGRAMEXTPROC glad_glUseShaderProgramEXT = NULL;
PFNGLACTIVEPROGRAMEXTPROC glad_glActiveProgramEXT = NULL;
PFNGLCREATESHADERPROGRAMEXTPROC glad_glCreateShaderProgramEXT = NULL;
PFNGLACTIVESHADERPROGRAMEXTPROC glad_glActiveShaderProgramEXT = NULL;
PFNGLBINDPROGRAMPIPELINEEXTPROC glad_glBindProgramPipelineEXT = NULL;
PFNGLCREATESHADERPROGRAMVEXTPROC glad_glCreateShaderProgramvEXT = NULL;
PFNGLDELETEPROGRAMPIPELINESEXTPROC glad_glDeleteProgramPipelinesEXT = NULL;
PFNGLGENPROGRAMPIPELINESEXTPROC glad_glGenProgramPipelinesEXT = NULL;
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC glad_glGetProgramPipelineInfoLogEXT =
    NULL;
PFNGLGETPROGRAMPIPELINEIVEXTPROC glad_glGetProgramPipelineivEXT = NULL;
PFNGLISPROGRAMPIPELINEEXTPROC glad_glIsProgramPipelineEXT = NULL;
PFNGLUSEPROGRAMSTAGESEXTPROC glad_glUseProgramStagesEXT = NULL;
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC glad_glValidateProgramPipelineEXT = NULL;
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC glad_glFramebufferFetchBarrierEXT = NULL;
PFNGLBINDIMAGETEXTUREEXTPROC glad_glBindImageTextureEXT = NULL;
PFNGLMEMORYBARRIEREXTPROC glad_glMemoryBarrierEXT = NULL;
PFNGLSTENCILCLEARTAGEXTPROC glad_glStencilClearTagEXT = NULL;
PFNGLACTIVESTENCILFACEEXTPROC glad_glActiveStencilFaceEXT = NULL;
PFNGLTEXSUBIMAGE1DEXTPROC glad_glTexSubImage1DEXT = NULL;
PFNGLTEXSUBIMAGE2DEXTPROC glad_glTexSubImage2DEXT = NULL;
PFNGLTEXIMAGE3DEXTPROC glad_glTexImage3DEXT = NULL;
PFNGLTEXSUBIMAGE3DEXTPROC glad_glTexSubImage3DEXT = NULL;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_glFramebufferTextureLayerEXT = NULL;
PFNGLTEXBUFFEREXTPROC glad_glTexBufferEXT = NULL;
PFNGLTEXPARAMETERIIVEXTPROC glad_glTexParameterIivEXT = NULL;
PFNGLTEXPARAMETERIUIVEXTPROC glad_glTexParameterIuivEXT = NULL;
PFNGLGETTEXPARAMETERIIVEXTPROC glad_glGetTexParameterIivEXT = NULL;
PFNGLGETTEXPARAMETERIUIVEXTPROC glad_glGetTexParameterIuivEXT = NULL;
PFNGLCLEARCOLORIIEXTPROC glad_glClearColorIiEXT = NULL;
PFNGLCLEARCOLORIUIEXTPROC glad_glClearColorIuiEXT = NULL;
PFNGLARETEXTURESRESIDENTEXTPROC glad_glAreTexturesResidentEXT = NULL;
PFNGLBINDTEXTUREEXTPROC glad_glBindTextureEXT = NULL;
PFNGLDELETETEXTURESEXTPROC glad_glDeleteTexturesEXT = NULL;
PFNGLGENTEXTURESEXTPROC glad_glGenTexturesEXT = NULL;
PFNGLISTEXTUREEXTPROC glad_glIsTextureEXT = NULL;
PFNGLPRIORITIZETEXTURESEXTPROC glad_glPrioritizeTexturesEXT = NULL;
PFNGLTEXTURENORMALEXTPROC glad_glTextureNormalEXT = NULL;
PFNGLGETQUERYOBJECTI64VEXTPROC glad_glGetQueryObjecti64vEXT = NULL;
PFNGLGETQUERYOBJECTUI64VEXTPROC glad_glGetQueryObjectui64vEXT = NULL;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC glad_glBeginTransformFeedbackEXT = NULL;
PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_glEndTransformFeedbackEXT = NULL;
PFNGLBINDBUFFERRANGEEXTPROC glad_glBindBufferRangeEXT = NULL;
PFNGLBINDBUFFEROFFSETEXTPROC glad_glBindBufferOffsetEXT = NULL;
PFNGLBINDBUFFERBASEEXTPROC glad_glBindBufferBaseEXT = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC glad_glTransformFeedbackVaryingsEXT =
    NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_glGetTransformFeedbackVaryingEXT =
    NULL;
PFNGLARRAYELEMENTEXTPROC glad_glArrayElementEXT = NULL;
PFNGLCOLORPOINTEREXTPROC glad_glColorPointerEXT = NULL;
PFNGLDRAWARRAYSEXTPROC glad_glDrawArraysEXT = NULL;
PFNGLEDGEFLAGPOINTEREXTPROC glad_glEdgeFlagPointerEXT = NULL;
PFNGLGETPOINTERVEXTPROC glad_glGetPointervEXT = NULL;
PFNGLINDEXPOINTEREXTPROC glad_glIndexPointerEXT = NULL;
PFNGLNORMALPOINTEREXTPROC glad_glNormalPointerEXT = NULL;
PFNGLTEXCOORDPOINTEREXTPROC glad_glTexCoordPointerEXT = NULL;
PFNGLVERTEXPOINTEREXTPROC glad_glVertexPointerEXT = NULL;
PFNGLVERTEXATTRIBL1DEXTPROC glad_glVertexAttribL1dEXT = NULL;
PFNGLVERTEXATTRIBL2DEXTPROC glad_glVertexAttribL2dEXT = NULL;
PFNGLVERTEXATTRIBL3DEXTPROC glad_glVertexAttribL3dEXT = NULL;
PFNGLVERTEXATTRIBL4DEXTPROC glad_glVertexAttribL4dEXT = NULL;
PFNGLVERTEXATTRIBL1DVEXTPROC glad_glVertexAttribL1dvEXT = NULL;
PFNGLVERTEXATTRIBL2DVEXTPROC glad_glVertexAttribL2dvEXT = NULL;
PFNGLVERTEXATTRIBL3DVEXTPROC glad_glVertexAttribL3dvEXT = NULL;
PFNGLVERTEXATTRIBL4DVEXTPROC glad_glVertexAttribL4dvEXT = NULL;
PFNGLVERTEXATTRIBLPOINTEREXTPROC glad_glVertexAttribLPointerEXT = NULL;
PFNGLGETVERTEXATTRIBLDVEXTPROC glad_glGetVertexAttribLdvEXT = NULL;
PFNGLBEGINVERTEXSHADEREXTPROC glad_glBeginVertexShaderEXT = NULL;
PFNGLENDVERTEXSHADEREXTPROC glad_glEndVertexShaderEXT = NULL;
PFNGLBINDVERTEXSHADEREXTPROC glad_glBindVertexShaderEXT = NULL;
PFNGLGENVERTEXSHADERSEXTPROC glad_glGenVertexShadersEXT = NULL;
PFNGLDELETEVERTEXSHADEREXTPROC glad_glDeleteVertexShaderEXT = NULL;
PFNGLSHADEROP1EXTPROC glad_glShaderOp1EXT = NULL;
PFNGLSHADEROP2EXTPROC glad_glShaderOp2EXT = NULL;
PFNGLSHADEROP3EXTPROC glad_glShaderOp3EXT = NULL;
PFNGLSWIZZLEEXTPROC glad_glSwizzleEXT = NULL;
PFNGLWRITEMASKEXTPROC glad_glWriteMaskEXT = NULL;
PFNGLINSERTCOMPONENTEXTPROC glad_glInsertComponentEXT = NULL;
PFNGLEXTRACTCOMPONENTEXTPROC glad_glExtractComponentEXT = NULL;
PFNGLGENSYMBOLSEXTPROC glad_glGenSymbolsEXT = NULL;
PFNGLSETINVARIANTEXTPROC glad_glSetInvariantEXT = NULL;
PFNGLSETLOCALCONSTANTEXTPROC glad_glSetLocalConstantEXT = NULL;
PFNGLVARIANTBVEXTPROC glad_glVariantbvEXT = NULL;
PFNGLVARIANTSVEXTPROC glad_glVariantsvEXT = NULL;
PFNGLVARIANTIVEXTPROC glad_glVariantivEXT = NULL;
PFNGLVARIANTFVEXTPROC glad_glVariantfvEXT = NULL;
PFNGLVARIANTDVEXTPROC glad_glVariantdvEXT = NULL;
PFNGLVARIANTUBVEXTPROC glad_glVariantubvEXT = NULL;
PFNGLVARIANTUSVEXTPROC glad_glVariantusvEXT = NULL;
PFNGLVARIANTUIVEXTPROC glad_glVariantuivEXT = NULL;
PFNGLVARIANTPOINTEREXTPROC glad_glVariantPointerEXT = NULL;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glad_glEnableVariantClientStateEXT = NULL;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glad_glDisableVariantClientStateEXT =
    NULL;
PFNGLBINDLIGHTPARAMETEREXTPROC glad_glBindLightParameterEXT = NULL;
PFNGLBINDMATERIALPARAMETEREXTPROC glad_glBindMaterialParameterEXT = NULL;
PFNGLBINDTEXGENPARAMETEREXTPROC glad_glBindTexGenParameterEXT = NULL;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glad_glBindTextureUnitParameterEXT = NULL;
PFNGLBINDPARAMETEREXTPROC glad_glBindParameterEXT = NULL;
PFNGLISVARIANTENABLEDEXTPROC glad_glIsVariantEnabledEXT = NULL;
PFNGLGETVARIANTBOOLEANVEXTPROC glad_glGetVariantBooleanvEXT = NULL;
PFNGLGETVARIANTINTEGERVEXTPROC glad_glGetVariantIntegervEXT = NULL;
PFNGLGETVARIANTFLOATVEXTPROC glad_glGetVariantFloatvEXT = NULL;
PFNGLGETVARIANTPOINTERVEXTPROC glad_glGetVariantPointervEXT = NULL;
PFNGLGETINVARIANTBOOLEANVEXTPROC glad_glGetInvariantBooleanvEXT = NULL;
PFNGLGETINVARIANTINTEGERVEXTPROC glad_glGetInvariantIntegervEXT = NULL;
PFNGLGETINVARIANTFLOATVEXTPROC glad_glGetInvariantFloatvEXT = NULL;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glad_glGetLocalConstantBooleanvEXT = NULL;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glad_glGetLocalConstantIntegervEXT = NULL;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC glad_glGetLocalConstantFloatvEXT = NULL;
PFNGLVERTEXWEIGHTFEXTPROC glad_glVertexWeightfEXT = NULL;
PFNGLVERTEXWEIGHTFVEXTPROC glad_glVertexWeightfvEXT = NULL;
PFNGLVERTEXWEIGHTPOINTEREXTPROC glad_glVertexWeightPointerEXT = NULL;
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC glad_glAcquireKeyedMutexWin32EXT = NULL;
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC glad_glReleaseKeyedMutexWin32EXT = NULL;
PFNGLWINDOWRECTANGLESEXTPROC glad_glWindowRectanglesEXT = NULL;
PFNGLIMPORTSYNCEXTPROC glad_glImportSyncEXT = NULL;
PFNGLBLENDBARRIERKHRPROC glad_glBlendBarrierKHR = NULL;
PFNGLDEBUGMESSAGECONTROLKHRPROC glad_glDebugMessageControlKHR = NULL;
PFNGLDEBUGMESSAGEINSERTKHRPROC glad_glDebugMessageInsertKHR = NULL;
PFNGLDEBUGMESSAGECALLBACKKHRPROC glad_glDebugMessageCallbackKHR = NULL;
PFNGLGETDEBUGMESSAGELOGKHRPROC glad_glGetDebugMessageLogKHR = NULL;
PFNGLPUSHDEBUGGROUPKHRPROC glad_glPushDebugGroupKHR = NULL;
PFNGLPOPDEBUGGROUPKHRPROC glad_glPopDebugGroupKHR = NULL;
PFNGLOBJECTLABELKHRPROC glad_glObjectLabelKHR = NULL;
PFNGLGETOBJECTLABELKHRPROC glad_glGetObjectLabelKHR = NULL;
PFNGLOBJECTPTRLABELKHRPROC glad_glObjectPtrLabelKHR = NULL;
PFNGLGETOBJECTPTRLABELKHRPROC glad_glGetObjectPtrLabelKHR = NULL;
PFNGLGETPOINTERVKHRPROC glad_glGetPointervKHR = NULL;
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC glad_glMaxShaderCompilerThreadsKHR = NULL;
PFNGLGETGRAPHICSRESETSTATUSKHRPROC glad_glGetGraphicsResetStatusKHR = NULL;
PFNGLREADNPIXELSKHRPROC glad_glReadnPixelsKHR = NULL;
PFNGLGETNUNIFORMFVKHRPROC glad_glGetnUniformfvKHR = NULL;
PFNGLGETNUNIFORMIVKHRPROC glad_glGetnUniformivKHR = NULL;
PFNGLGETNUNIFORMUIVKHRPROC glad_glGetnUniformuivKHR = NULL;
PFNGLMULTITEXCOORD1BOESPROC glad_glMultiTexCoord1bOES = NULL;
PFNGLMULTITEXCOORD1BVOESPROC glad_glMultiTexCoord1bvOES = NULL;
PFNGLMULTITEXCOORD2BOESPROC glad_glMultiTexCoord2bOES = NULL;
PFNGLMULTITEXCOORD2BVOESPROC glad_glMultiTexCoord2bvOES = NULL;
PFNGLMULTITEXCOORD3BOESPROC glad_glMultiTexCoord3bOES = NULL;
PFNGLMULTITEXCOORD3BVOESPROC glad_glMultiTexCoord3bvOES = NULL;
PFNGLMULTITEXCOORD4BOESPROC glad_glMultiTexCoord4bOES = NULL;
PFNGLMULTITEXCOORD4BVOESPROC glad_glMultiTexCoord4bvOES = NULL;
PFNGLTEXCOORD1BOESPROC glad_glTexCoord1bOES = NULL;
PFNGLTEXCOORD1BVOESPROC glad_glTexCoord1bvOES = NULL;
PFNGLTEXCOORD2BOESPROC glad_glTexCoord2bOES = NULL;
PFNGLTEXCOORD2BVOESPROC glad_glTexCoord2bvOES = NULL;
PFNGLTEXCOORD3BOESPROC glad_glTexCoord3bOES = NULL;
PFNGLTEXCOORD3BVOESPROC glad_glTexCoord3bvOES = NULL;
PFNGLTEXCOORD4BOESPROC glad_glTexCoord4bOES = NULL;
PFNGLTEXCOORD4BVOESPROC glad_glTexCoord4bvOES = NULL;
PFNGLVERTEX2BOESPROC glad_glVertex2bOES = NULL;
PFNGLVERTEX2BVOESPROC glad_glVertex2bvOES = NULL;
PFNGLVERTEX3BOESPROC glad_glVertex3bOES = NULL;
PFNGLVERTEX3BVOESPROC glad_glVertex3bvOES = NULL;
PFNGLVERTEX4BOESPROC glad_glVertex4bOES = NULL;
PFNGLVERTEX4BVOESPROC glad_glVertex4bvOES = NULL;
PFNGLALPHAFUNCXOESPROC glad_glAlphaFuncxOES = NULL;
PFNGLCLEARCOLORXOESPROC glad_glClearColorxOES = NULL;
PFNGLCLEARDEPTHXOESPROC glad_glClearDepthxOES = NULL;
PFNGLCLIPPLANEXOESPROC glad_glClipPlanexOES = NULL;
PFNGLCOLOR4XOESPROC glad_glColor4xOES = NULL;
PFNGLDEPTHRANGEXOESPROC glad_glDepthRangexOES = NULL;
PFNGLFOGXOESPROC glad_glFogxOES = NULL;
PFNGLFOGXVOESPROC glad_glFogxvOES = NULL;
PFNGLFRUSTUMXOESPROC glad_glFrustumxOES = NULL;
PFNGLGETCLIPPLANEXOESPROC glad_glGetClipPlanexOES = NULL;
PFNGLGETFIXEDVOESPROC glad_glGetFixedvOES = NULL;
PFNGLGETTEXENVXVOESPROC glad_glGetTexEnvxvOES = NULL;
PFNGLGETTEXPARAMETERXVOESPROC glad_glGetTexParameterxvOES = NULL;
PFNGLLIGHTMODELXOESPROC glad_glLightModelxOES = NULL;
PFNGLLIGHTMODELXVOESPROC glad_glLightModelxvOES = NULL;
PFNGLLIGHTXOESPROC glad_glLightxOES = NULL;
PFNGLLIGHTXVOESPROC glad_glLightxvOES = NULL;
PFNGLLINEWIDTHXOESPROC glad_glLineWidthxOES = NULL;
PFNGLLOADMATRIXXOESPROC glad_glLoadMatrixxOES = NULL;
PFNGLMATERIALXOESPROC glad_glMaterialxOES = NULL;
PFNGLMATERIALXVOESPROC glad_glMaterialxvOES = NULL;
PFNGLMULTMATRIXXOESPROC glad_glMultMatrixxOES = NULL;
PFNGLMULTITEXCOORD4XOESPROC glad_glMultiTexCoord4xOES = NULL;
PFNGLNORMAL3XOESPROC glad_glNormal3xOES = NULL;
PFNGLORTHOXOESPROC glad_glOrthoxOES = NULL;
PFNGLPOINTPARAMETERXVOESPROC glad_glPointParameterxvOES = NULL;
PFNGLPOINTSIZEXOESPROC glad_glPointSizexOES = NULL;
PFNGLPOLYGONOFFSETXOESPROC glad_glPolygonOffsetxOES = NULL;
PFNGLROTATEXOESPROC glad_glRotatexOES = NULL;
PFNGLSCALEXOESPROC glad_glScalexOES = NULL;
PFNGLTEXENVXOESPROC glad_glTexEnvxOES = NULL;
PFNGLTEXENVXVOESPROC glad_glTexEnvxvOES = NULL;
PFNGLTEXPARAMETERXOESPROC glad_glTexParameterxOES = NULL;
PFNGLTEXPARAMETERXVOESPROC glad_glTexParameterxvOES = NULL;
PFNGLTRANSLATEXOESPROC glad_glTranslatexOES = NULL;
PFNGLGETLIGHTXVOESPROC glad_glGetLightxvOES = NULL;
PFNGLGETMATERIALXVOESPROC glad_glGetMaterialxvOES = NULL;
PFNGLPOINTPARAMETERXOESPROC glad_glPointParameterxOES = NULL;
PFNGLSAMPLECOVERAGEXOESPROC glad_glSampleCoveragexOES = NULL;
PFNGLACCUMXOESPROC glad_glAccumxOES = NULL;
PFNGLBITMAPXOESPROC glad_glBitmapxOES = NULL;
PFNGLBLENDCOLORXOESPROC glad_glBlendColorxOES = NULL;
PFNGLCLEARACCUMXOESPROC glad_glClearAccumxOES = NULL;
PFNGLCOLOR3XOESPROC glad_glColor3xOES = NULL;
PFNGLCOLOR3XVOESPROC glad_glColor3xvOES = NULL;
PFNGLCOLOR4XVOESPROC glad_glColor4xvOES = NULL;
PFNGLCONVOLUTIONPARAMETERXOESPROC glad_glConvolutionParameterxOES = NULL;
PFNGLCONVOLUTIONPARAMETERXVOESPROC glad_glConvolutionParameterxvOES = NULL;
PFNGLEVALCOORD1XOESPROC glad_glEvalCoord1xOES = NULL;
PFNGLEVALCOORD1XVOESPROC glad_glEvalCoord1xvOES = NULL;
PFNGLEVALCOORD2XOESPROC glad_glEvalCoord2xOES = NULL;
PFNGLEVALCOORD2XVOESPROC glad_glEvalCoord2xvOES = NULL;
PFNGLFEEDBACKBUFFERXOESPROC glad_glFeedbackBufferxOES = NULL;
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC glad_glGetConvolutionParameterxvOES =
    NULL;
PFNGLGETHISTOGRAMPARAMETERXVOESPROC glad_glGetHistogramParameterxvOES = NULL;
PFNGLGETLIGHTXOESPROC glad_glGetLightxOES = NULL;
PFNGLGETMAPXVOESPROC glad_glGetMapxvOES = NULL;
PFNGLGETMATERIALXOESPROC glad_glGetMaterialxOES = NULL;
PFNGLGETPIXELMAPXVPROC glad_glGetPixelMapxv = NULL;
PFNGLGETTEXGENXVOESPROC glad_glGetTexGenxvOES = NULL;
PFNGLGETTEXLEVELPARAMETERXVOESPROC glad_glGetTexLevelParameterxvOES = NULL;
PFNGLINDEXXOESPROC glad_glIndexxOES = NULL;
PFNGLINDEXXVOESPROC glad_glIndexxvOES = NULL;
PFNGLLOADTRANSPOSEMATRIXXOESPROC glad_glLoadTransposeMatrixxOES = NULL;
PFNGLMAP1XOESPROC glad_glMap1xOES = NULL;
PFNGLMAP2XOESPROC glad_glMap2xOES = NULL;
PFNGLMAPGRID1XOESPROC glad_glMapGrid1xOES = NULL;
PFNGLMAPGRID2XOESPROC glad_glMapGrid2xOES = NULL;
PFNGLMULTTRANSPOSEMATRIXXOESPROC glad_glMultTransposeMatrixxOES = NULL;
PFNGLMULTITEXCOORD1XOESPROC glad_glMultiTexCoord1xOES = NULL;
PFNGLMULTITEXCOORD1XVOESPROC glad_glMultiTexCoord1xvOES = NULL;
PFNGLMULTITEXCOORD2XOESPROC glad_glMultiTexCoord2xOES = NULL;
PFNGLMULTITEXCOORD2XVOESPROC glad_glMultiTexCoord2xvOES = NULL;
PFNGLMULTITEXCOORD3XOESPROC glad_glMultiTexCoord3xOES = NULL;
PFNGLMULTITEXCOORD3XVOESPROC glad_glMultiTexCoord3xvOES = NULL;
PFNGLMULTITEXCOORD4XVOESPROC glad_glMultiTexCoord4xvOES = NULL;
PFNGLNORMAL3XVOESPROC glad_glNormal3xvOES = NULL;
PFNGLPASSTHROUGHXOESPROC glad_glPassThroughxOES = NULL;
PFNGLPIXELMAPXPROC glad_glPixelMapx = NULL;
PFNGLPIXELSTOREXPROC glad_glPixelStorex = NULL;
PFNGLPIXELTRANSFERXOESPROC glad_glPixelTransferxOES = NULL;
PFNGLPIXELZOOMXOESPROC glad_glPixelZoomxOES = NULL;
PFNGLPRIORITIZETEXTURESXOESPROC glad_glPrioritizeTexturesxOES = NULL;
PFNGLRASTERPOS2XOESPROC glad_glRasterPos2xOES = NULL;
PFNGLRASTERPOS2XVOESPROC glad_glRasterPos2xvOES = NULL;
PFNGLRASTERPOS3XOESPROC glad_glRasterPos3xOES = NULL;
PFNGLRASTERPOS3XVOESPROC glad_glRasterPos3xvOES = NULL;
PFNGLRASTERPOS4XOESPROC glad_glRasterPos4xOES = NULL;
PFNGLRASTERPOS4XVOESPROC glad_glRasterPos4xvOES = NULL;
PFNGLRECTXOESPROC glad_glRectxOES = NULL;
PFNGLRECTXVOESPROC glad_glRectxvOES = NULL;
PFNGLTEXCOORD1XOESPROC glad_glTexCoord1xOES = NULL;
PFNGLTEXCOORD1XVOESPROC glad_glTexCoord1xvOES = NULL;
PFNGLTEXCOORD2XOESPROC glad_glTexCoord2xOES = NULL;
PFNGLTEXCOORD2XVOESPROC glad_glTexCoord2xvOES = NULL;
PFNGLTEXCOORD3XOESPROC glad_glTexCoord3xOES = NULL;
PFNGLTEXCOORD3XVOESPROC glad_glTexCoord3xvOES = NULL;
PFNGLTEXCOORD4XOESPROC glad_glTexCoord4xOES = NULL;
PFNGLTEXCOORD4XVOESPROC glad_glTexCoord4xvOES = NULL;
PFNGLTEXGENXOESPROC glad_glTexGenxOES = NULL;
PFNGLTEXGENXVOESPROC glad_glTexGenxvOES = NULL;
PFNGLVERTEX2XOESPROC glad_glVertex2xOES = NULL;
PFNGLVERTEX2XVOESPROC glad_glVertex2xvOES = NULL;
PFNGLVERTEX3XOESPROC glad_glVertex3xOES = NULL;
PFNGLVERTEX3XVOESPROC glad_glVertex3xvOES = NULL;
PFNGLVERTEX4XOESPROC glad_glVertex4xOES = NULL;
PFNGLVERTEX4XVOESPROC glad_glVertex4xvOES = NULL;
PFNGLQUERYMATRIXXOESPROC glad_glQueryMatrixxOES = NULL;
PFNGLCLEARDEPTHFOESPROC glad_glClearDepthfOES = NULL;
PFNGLCLIPPLANEFOESPROC glad_glClipPlanefOES = NULL;
PFNGLDEPTHRANGEFOESPROC glad_glDepthRangefOES = NULL;
PFNGLFRUSTUMFOESPROC glad_glFrustumfOES = NULL;
PFNGLGETCLIPPLANEFOESPROC glad_glGetClipPlanefOES = NULL;
PFNGLORTHOFOESPROC glad_glOrthofOES = NULL;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
glad_glDrawArraysInstancedBaseInstanceEXT = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
glad_glDrawElementsInstancedBaseInstanceEXT = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
glad_glDrawElementsInstancedBaseVertexBaseInstanceEXT = NULL;
PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC glad_glBindFragDataLocationIndexedEXT =
    NULL;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC
glad_glGetProgramResourceLocationIndexEXT = NULL;
PFNGLGETFRAGDATAINDEXEXTPROC glad_glGetFragDataIndexEXT = NULL;
PFNGLBUFFERSTORAGEEXTPROC glad_glBufferStorageEXT = NULL;
PFNGLCLEARTEXIMAGEEXTPROC glad_glClearTexImageEXT = NULL;
PFNGLCLEARTEXSUBIMAGEEXTPROC glad_glClearTexSubImageEXT = NULL;
PFNGLCLIPCONTROLEXTPROC glad_glClipControlEXT = NULL;
PFNGLCOPYIMAGESUBDATAEXTPROC glad_glCopyImageSubDataEXT = NULL;
PFNGLDISCARDFRAMEBUFFEREXTPROC glad_glDiscardFramebufferEXT = NULL;
PFNGLGENQUERIESEXTPROC glad_glGenQueriesEXT = NULL;
PFNGLDELETEQUERIESEXTPROC glad_glDeleteQueriesEXT = NULL;
PFNGLISQUERYEXTPROC glad_glIsQueryEXT = NULL;
PFNGLBEGINQUERYEXTPROC glad_glBeginQueryEXT = NULL;
PFNGLENDQUERYEXTPROC glad_glEndQueryEXT = NULL;
PFNGLQUERYCOUNTEREXTPROC glad_glQueryCounterEXT = NULL;
PFNGLGETQUERYIVEXTPROC glad_glGetQueryivEXT = NULL;
PFNGLGETQUERYOBJECTIVEXTPROC glad_glGetQueryObjectivEXT = NULL;
PFNGLGETQUERYOBJECTUIVEXTPROC glad_glGetQueryObjectuivEXT = NULL;
PFNGLGETINTEGER64VEXTPROC glad_glGetInteger64vEXT = NULL;
PFNGLDRAWBUFFERSEXTPROC glad_glDrawBuffersEXT = NULL;
PFNGLENABLEIEXTPROC glad_glEnableiEXT = NULL;
PFNGLDISABLEIEXTPROC glad_glDisableiEXT = NULL;
PFNGLBLENDEQUATIONIEXTPROC glad_glBlendEquationiEXT = NULL;
PFNGLBLENDEQUATIONSEPARATEIEXTPROC glad_glBlendEquationSeparateiEXT = NULL;
PFNGLBLENDFUNCIEXTPROC glad_glBlendFunciEXT = NULL;
PFNGLBLENDFUNCSEPARATEIEXTPROC glad_glBlendFuncSeparateiEXT = NULL;
PFNGLCOLORMASKIEXTPROC glad_glColorMaskiEXT = NULL;
PFNGLISENABLEDIEXTPROC glad_glIsEnablediEXT = NULL;
PFNGLDRAWELEMENTSBASEVERTEXEXTPROC glad_glDrawElementsBaseVertexEXT = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC glad_glDrawRangeElementsBaseVertexEXT =
    NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
glad_glDrawElementsInstancedBaseVertexEXT = NULL;
PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC glad_glMultiDrawElementsBaseVertexEXT =
    NULL;
PFNGLDRAWTRANSFORMFEEDBACKEXTPROC glad_glDrawTransformFeedbackEXT = NULL;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC
glad_glDrawTransformFeedbackInstancedEXT = NULL;
PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_glFramebufferTextureEXT = NULL;
PFNGLVERTEXATTRIBDIVISOREXTPROC glad_glVertexAttribDivisorEXT = NULL;
PFNGLMAPBUFFERRANGEEXTPROC glad_glMapBufferRangeEXT = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC glad_glFlushMappedBufferRangeEXT = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC glad_glMultiDrawArraysIndirectEXT = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC glad_glMultiDrawElementsIndirectEXT =
    NULL;
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
glad_glFramebufferTexture2DMultisampleEXT = NULL;
PFNGLREADBUFFERINDEXEDEXTPROC glad_glReadBufferIndexedEXT = NULL;
PFNGLDRAWBUFFERSINDEXEDEXTPROC glad_glDrawBuffersIndexedEXT = NULL;
PFNGLGETINTEGERI_VEXTPROC glad_glGetIntegeri_vEXT = NULL;
PFNGLPRIMITIVEBOUNDINGBOXEXTPROC glad_glPrimitiveBoundingBoxEXT = NULL;
PFNGLGETGRAPHICSRESETSTATUSEXTPROC glad_glGetGraphicsResetStatusEXT = NULL;
PFNGLREADNPIXELSEXTPROC glad_glReadnPixelsEXT = NULL;
PFNGLGETNUNIFORMFVEXTPROC glad_glGetnUniformfvEXT = NULL;
PFNGLGETNUNIFORMIVEXTPROC glad_glGetnUniformivEXT = NULL;
PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
glad_glFramebufferPixelLocalStorageSizeEXT = NULL;
PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
glad_glGetFramebufferPixelLocalStorageSizeEXT = NULL;
PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC glad_glClearPixelLocalStorageuiEXT = NULL;
PFNGLTEXPAGECOMMITMENTEXTPROC glad_glTexPageCommitmentEXT = NULL;
PFNGLPATCHPARAMETERIEXTPROC glad_glPatchParameteriEXT = NULL;
PFNGLSAMPLERPARAMETERIIVEXTPROC glad_glSamplerParameterIivEXT = NULL;
PFNGLSAMPLERPARAMETERIUIVEXTPROC glad_glSamplerParameterIuivEXT = NULL;
PFNGLGETSAMPLERPARAMETERIIVEXTPROC glad_glGetSamplerParameterIivEXT = NULL;
PFNGLGETSAMPLERPARAMETERIUIVEXTPROC glad_glGetSamplerParameterIuivEXT = NULL;
PFNGLTEXBUFFERRANGEEXTPROC glad_glTexBufferRangeEXT = NULL;
PFNGLTEXSTORAGE1DEXTPROC glad_glTexStorage1DEXT = NULL;
PFNGLTEXSTORAGE2DEXTPROC glad_glTexStorage2DEXT = NULL;
PFNGLTEXSTORAGE3DEXTPROC glad_glTexStorage3DEXT = NULL;
PFNGLTEXTUREVIEWEXTPROC glad_glTextureViewEXT = NULL;
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC glad_glEGLImageTargetTexture2DOES = NULL;
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
glad_glEGLImageTargetRenderbufferStorageOES = NULL;
PFNGLCOPYIMAGESUBDATAOESPROC glad_glCopyImageSubDataOES = NULL;
PFNGLENABLEIOESPROC glad_glEnableiOES = NULL;
PFNGLDISABLEIOESPROC glad_glDisableiOES = NULL;
PFNGLBLENDEQUATIONIOESPROC glad_glBlendEquationiOES = NULL;
PFNGLBLENDEQUATIONSEPARATEIOESPROC glad_glBlendEquationSeparateiOES = NULL;
PFNGLBLENDFUNCIOESPROC glad_glBlendFunciOES = NULL;
PFNGLBLENDFUNCSEPARATEIOESPROC glad_glBlendFuncSeparateiOES = NULL;
PFNGLCOLORMASKIOESPROC glad_glColorMaskiOES = NULL;
PFNGLISENABLEDIOESPROC glad_glIsEnablediOES = NULL;
PFNGLDRAWELEMENTSBASEVERTEXOESPROC glad_glDrawElementsBaseVertexOES = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC glad_glDrawRangeElementsBaseVertexOES =
    NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC
glad_glDrawElementsInstancedBaseVertexOES = NULL;
PFNGLFRAMEBUFFERTEXTUREOESPROC glad_glFramebufferTextureOES = NULL;
PFNGLGETPROGRAMBINARYOESPROC glad_glGetProgramBinaryOES = NULL;
PFNGLPROGRAMBINARYOESPROC glad_glProgramBinaryOES = NULL;
PFNGLMAPBUFFEROESPROC glad_glMapBufferOES = NULL;
PFNGLUNMAPBUFFEROESPROC glad_glUnmapBufferOES = NULL;
PFNGLGETBUFFERPOINTERVOESPROC glad_glGetBufferPointervOES = NULL;
PFNGLPRIMITIVEBOUNDINGBOXOESPROC glad_glPrimitiveBoundingBoxOES = NULL;
PFNGLMINSAMPLESHADINGOESPROC glad_glMinSampleShadingOES = NULL;
PFNGLPATCHPARAMETERIOESPROC glad_glPatchParameteriOES = NULL;
PFNGLTEXIMAGE3DOESPROC glad_glTexImage3DOES = NULL;
PFNGLTEXSUBIMAGE3DOESPROC glad_glTexSubImage3DOES = NULL;
PFNGLCOPYTEXSUBIMAGE3DOESPROC glad_glCopyTexSubImage3DOES = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC glad_glCompressedTexImage3DOES = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC glad_glCompressedTexSubImage3DOES = NULL;
PFNGLFRAMEBUFFERTEXTURE3DOESPROC glad_glFramebufferTexture3DOES = NULL;
PFNGLTEXPARAMETERIIVOESPROC glad_glTexParameterIivOES = NULL;
PFNGLTEXPARAMETERIUIVOESPROC glad_glTexParameterIuivOES = NULL;
PFNGLGETTEXPARAMETERIIVOESPROC glad_glGetTexParameterIivOES = NULL;
PFNGLGETTEXPARAMETERIUIVOESPROC glad_glGetTexParameterIuivOES = NULL;
PFNGLSAMPLERPARAMETERIIVOESPROC glad_glSamplerParameterIivOES = NULL;
PFNGLSAMPLERPARAMETERIUIVOESPROC glad_glSamplerParameterIuivOES = NULL;
PFNGLGETSAMPLERPARAMETERIIVOESPROC glad_glGetSamplerParameterIivOES = NULL;
PFNGLGETSAMPLERPARAMETERIUIVOESPROC glad_glGetSamplerParameterIuivOES = NULL;
PFNGLTEXBUFFEROESPROC glad_glTexBufferOES = NULL;
PFNGLTEXBUFFERRANGEOESPROC glad_glTexBufferRangeOES = NULL;
PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC glad_glTexStorage3DMultisampleOES = NULL;
PFNGLTEXTUREVIEWOESPROC glad_glTextureViewOES = NULL;
PFNGLBINDVERTEXARRAYOESPROC glad_glBindVertexArrayOES = NULL;
PFNGLDELETEVERTEXARRAYSOESPROC glad_glDeleteVertexArraysOES = NULL;
PFNGLGENVERTEXARRAYSOESPROC glad_glGenVertexArraysOES = NULL;
PFNGLISVERTEXARRAYOESPROC glad_glIsVertexArrayOES = NULL;
PFNGLVIEWPORTARRAYVOESPROC glad_glViewportArrayvOES = NULL;
PFNGLVIEWPORTINDEXEDFOESPROC glad_glViewportIndexedfOES = NULL;
PFNGLVIEWPORTINDEXEDFVOESPROC glad_glViewportIndexedfvOES = NULL;
PFNGLSCISSORARRAYVOESPROC glad_glScissorArrayvOES = NULL;
PFNGLSCISSORINDEXEDOESPROC glad_glScissorIndexedOES = NULL;
PFNGLSCISSORINDEXEDVOESPROC glad_glScissorIndexedvOES = NULL;
PFNGLDEPTHRANGEARRAYFVOESPROC glad_glDepthRangeArrayfvOES = NULL;
PFNGLDEPTHRANGEINDEXEDFOESPROC glad_glDepthRangeIndexedfOES = NULL;
PFNGLGETFLOATI_VOESPROC glad_glGetFloati_vOES = NULL;
static void load_GL_VERSION_1_0(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_0) return;
  glad_glCullFace = (PFNGLCULLFACEPROC)load("glCullFace");
  glad_glFrontFace = (PFNGLFRONTFACEPROC)load("glFrontFace");
  glad_glHint = (PFNGLHINTPROC)load("glHint");
  glad_glLineWidth = (PFNGLLINEWIDTHPROC)load("glLineWidth");
  glad_glPointSize = (PFNGLPOINTSIZEPROC)load("glPointSize");
  glad_glPolygonMode = (PFNGLPOLYGONMODEPROC)load("glPolygonMode");
  glad_glScissor = (PFNGLSCISSORPROC)load("glScissor");
  glad_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load("glTexParameterf");
  glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load("glTexParameterfv");
  glad_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load("glTexParameteri");
  glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load("glTexParameteriv");
  glad_glTexImage1D = (PFNGLTEXIMAGE1DPROC)load("glTexImage1D");
  glad_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load("glTexImage2D");
  glad_glDrawBuffer = (PFNGLDRAWBUFFERPROC)load("glDrawBuffer");
  glad_glClear = (PFNGLCLEARPROC)load("glClear");
  glad_glClearColor = (PFNGLCLEARCOLORPROC)load("glClearColor");
  glad_glClearStencil = (PFNGLCLEARSTENCILPROC)load("glClearStencil");
  glad_glClearDepth = (PFNGLCLEARDEPTHPROC)load("glClearDepth");
  glad_glStencilMask = (PFNGLSTENCILMASKPROC)load("glStencilMask");
  glad_glColorMask = (PFNGLCOLORMASKPROC)load("glColorMask");
  glad_glDepthMask = (PFNGLDEPTHMASKPROC)load("glDepthMask");
  glad_glDisable = (PFNGLDISABLEPROC)load("glDisable");
  glad_glEnable = (PFNGLENABLEPROC)load("glEnable");
  glad_glFinish = (PFNGLFINISHPROC)load("glFinish");
  glad_glFlush = (PFNGLFLUSHPROC)load("glFlush");
  glad_glBlendFunc = (PFNGLBLENDFUNCPROC)load("glBlendFunc");
  glad_glLogicOp = (PFNGLLOGICOPPROC)load("glLogicOp");
  glad_glStencilFunc = (PFNGLSTENCILFUNCPROC)load("glStencilFunc");
  glad_glStencilOp = (PFNGLSTENCILOPPROC)load("glStencilOp");
  glad_glDepthFunc = (PFNGLDEPTHFUNCPROC)load("glDepthFunc");
  glad_glPixelStoref = (PFNGLPIXELSTOREFPROC)load("glPixelStoref");
  glad_glPixelStorei = (PFNGLPIXELSTOREIPROC)load("glPixelStorei");
  glad_glReadBuffer = (PFNGLREADBUFFERPROC)load("glReadBuffer");
  glad_glReadPixels = (PFNGLREADPIXELSPROC)load("glReadPixels");
  glad_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load("glGetBooleanv");
  glad_glGetDoublev = (PFNGLGETDOUBLEVPROC)load("glGetDoublev");
  glad_glGetError = (PFNGLGETERRORPROC)load("glGetError");
  glad_glGetFloatv = (PFNGLGETFLOATVPROC)load("glGetFloatv");
  glad_glGetIntegerv = (PFNGLGETINTEGERVPROC)load("glGetIntegerv");
  glad_glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
  glad_glGetTexImage = (PFNGLGETTEXIMAGEPROC)load("glGetTexImage");
  glad_glGetTexParameterfv =
      (PFNGLGETTEXPARAMETERFVPROC)load("glGetTexParameterfv");
  glad_glGetTexParameteriv =
      (PFNGLGETTEXPARAMETERIVPROC)load("glGetTexParameteriv");
  glad_glGetTexLevelParameterfv =
      (PFNGLGETTEXLEVELPARAMETERFVPROC)load("glGetTexLevelParameterfv");
  glad_glGetTexLevelParameteriv =
      (PFNGLGETTEXLEVELPARAMETERIVPROC)load("glGetTexLevelParameteriv");
  glad_glIsEnabled = (PFNGLISENABLEDPROC)load("glIsEnabled");
  glad_glDepthRange = (PFNGLDEPTHRANGEPROC)load("glDepthRange");
  glad_glViewport = (PFNGLVIEWPORTPROC)load("glViewport");
  glad_glNewList = (PFNGLNEWLISTPROC)load("glNewList");
  glad_glEndList = (PFNGLENDLISTPROC)load("glEndList");
  glad_glCallList = (PFNGLCALLLISTPROC)load("glCallList");
  glad_glCallLists = (PFNGLCALLLISTSPROC)load("glCallLists");
  glad_glDeleteLists = (PFNGLDELETELISTSPROC)load("glDeleteLists");
  glad_glGenLists = (PFNGLGENLISTSPROC)load("glGenLists");
  glad_glListBase = (PFNGLLISTBASEPROC)load("glListBase");
  glad_glBegin = (PFNGLBEGINPROC)load("glBegin");
  glad_glBitmap = (PFNGLBITMAPPROC)load("glBitmap");
  glad_glColor3b = (PFNGLCOLOR3BPROC)load("glColor3b");
  glad_glColor3bv = (PFNGLCOLOR3BVPROC)load("glColor3bv");
  glad_glColor3d = (PFNGLCOLOR3DPROC)load("glColor3d");
  glad_glColor3dv = (PFNGLCOLOR3DVPROC)load("glColor3dv");
  glad_glColor3f = (PFNGLCOLOR3FPROC)load("glColor3f");
  glad_glColor3fv = (PFNGLCOLOR3FVPROC)load("glColor3fv");
  glad_glColor3i = (PFNGLCOLOR3IPROC)load("glColor3i");
  glad_glColor3iv = (PFNGLCOLOR3IVPROC)load("glColor3iv");
  glad_glColor3s = (PFNGLCOLOR3SPROC)load("glColor3s");
  glad_glColor3sv = (PFNGLCOLOR3SVPROC)load("glColor3sv");
  glad_glColor3ub = (PFNGLCOLOR3UBPROC)load("glColor3ub");
  glad_glColor3ubv = (PFNGLCOLOR3UBVPROC)load("glColor3ubv");
  glad_glColor3ui = (PFNGLCOLOR3UIPROC)load("glColor3ui");
  glad_glColor3uiv = (PFNGLCOLOR3UIVPROC)load("glColor3uiv");
  glad_glColor3us = (PFNGLCOLOR3USPROC)load("glColor3us");
  glad_glColor3usv = (PFNGLCOLOR3USVPROC)load("glColor3usv");
  glad_glColor4b = (PFNGLCOLOR4BPROC)load("glColor4b");
  glad_glColor4bv = (PFNGLCOLOR4BVPROC)load("glColor4bv");
  glad_glColor4d = (PFNGLCOLOR4DPROC)load("glColor4d");
  glad_glColor4dv = (PFNGLCOLOR4DVPROC)load("glColor4dv");
  glad_glColor4f = (PFNGLCOLOR4FPROC)load("glColor4f");
  glad_glColor4fv = (PFNGLCOLOR4FVPROC)load("glColor4fv");
  glad_glColor4i = (PFNGLCOLOR4IPROC)load("glColor4i");
  glad_glColor4iv = (PFNGLCOLOR4IVPROC)load("glColor4iv");
  glad_glColor4s = (PFNGLCOLOR4SPROC)load("glColor4s");
  glad_glColor4sv = (PFNGLCOLOR4SVPROC)load("glColor4sv");
  glad_glColor4ub = (PFNGLCOLOR4UBPROC)load("glColor4ub");
  glad_glColor4ubv = (PFNGLCOLOR4UBVPROC)load("glColor4ubv");
  glad_glColor4ui = (PFNGLCOLOR4UIPROC)load("glColor4ui");
  glad_glColor4uiv = (PFNGLCOLOR4UIVPROC)load("glColor4uiv");
  glad_glColor4us = (PFNGLCOLOR4USPROC)load("glColor4us");
  glad_glColor4usv = (PFNGLCOLOR4USVPROC)load("glColor4usv");
  glad_glEdgeFlag = (PFNGLEDGEFLAGPROC)load("glEdgeFlag");
  glad_glEdgeFlagv = (PFNGLEDGEFLAGVPROC)load("glEdgeFlagv");
  glad_glEnd = (PFNGLENDPROC)load("glEnd");
  glad_glIndexd = (PFNGLINDEXDPROC)load("glIndexd");
  glad_glIndexdv = (PFNGLINDEXDVPROC)load("glIndexdv");
  glad_glIndexf = (PFNGLINDEXFPROC)load("glIndexf");
  glad_glIndexfv = (PFNGLINDEXFVPROC)load("glIndexfv");
  glad_glIndexi = (PFNGLINDEXIPROC)load("glIndexi");
  glad_glIndexiv = (PFNGLINDEXIVPROC)load("glIndexiv");
  glad_glIndexs = (PFNGLINDEXSPROC)load("glIndexs");
  glad_glIndexsv = (PFNGLINDEXSVPROC)load("glIndexsv");
  glad_glNormal3b = (PFNGLNORMAL3BPROC)load("glNormal3b");
  glad_glNormal3bv = (PFNGLNORMAL3BVPROC)load("glNormal3bv");
  glad_glNormal3d = (PFNGLNORMAL3DPROC)load("glNormal3d");
  glad_glNormal3dv = (PFNGLNORMAL3DVPROC)load("glNormal3dv");
  glad_glNormal3f = (PFNGLNORMAL3FPROC)load("glNormal3f");
  glad_glNormal3fv = (PFNGLNORMAL3FVPROC)load("glNormal3fv");
  glad_glNormal3i = (PFNGLNORMAL3IPROC)load("glNormal3i");
  glad_glNormal3iv = (PFNGLNORMAL3IVPROC)load("glNormal3iv");
  glad_glNormal3s = (PFNGLNORMAL3SPROC)load("glNormal3s");
  glad_glNormal3sv = (PFNGLNORMAL3SVPROC)load("glNormal3sv");
  glad_glRasterPos2d = (PFNGLRASTERPOS2DPROC)load("glRasterPos2d");
  glad_glRasterPos2dv = (PFNGLRASTERPOS2DVPROC)load("glRasterPos2dv");
  glad_glRasterPos2f = (PFNGLRASTERPOS2FPROC)load("glRasterPos2f");
  glad_glRasterPos2fv = (PFNGLRASTERPOS2FVPROC)load("glRasterPos2fv");
  glad_glRasterPos2i = (PFNGLRASTERPOS2IPROC)load("glRasterPos2i");
  glad_glRasterPos2iv = (PFNGLRASTERPOS2IVPROC)load("glRasterPos2iv");
  glad_glRasterPos2s = (PFNGLRASTERPOS2SPROC)load("glRasterPos2s");
  glad_glRasterPos2sv = (PFNGLRASTERPOS2SVPROC)load("glRasterPos2sv");
  glad_glRasterPos3d = (PFNGLRASTERPOS3DPROC)load("glRasterPos3d");
  glad_glRasterPos3dv = (PFNGLRASTERPOS3DVPROC)load("glRasterPos3dv");
  glad_glRasterPos3f = (PFNGLRASTERPOS3FPROC)load("glRasterPos3f");
  glad_glRasterPos3fv = (PFNGLRASTERPOS3FVPROC)load("glRasterPos3fv");
  glad_glRasterPos3i = (PFNGLRASTERPOS3IPROC)load("glRasterPos3i");
  glad_glRasterPos3iv = (PFNGLRASTERPOS3IVPROC)load("glRasterPos3iv");
  glad_glRasterPos3s = (PFNGLRASTERPOS3SPROC)load("glRasterPos3s");
  glad_glRasterPos3sv = (PFNGLRASTERPOS3SVPROC)load("glRasterPos3sv");
  glad_glRasterPos4d = (PFNGLRASTERPOS4DPROC)load("glRasterPos4d");
  glad_glRasterPos4dv = (PFNGLRASTERPOS4DVPROC)load("glRasterPos4dv");
  glad_glRasterPos4f = (PFNGLRASTERPOS4FPROC)load("glRasterPos4f");
  glad_glRasterPos4fv = (PFNGLRASTERPOS4FVPROC)load("glRasterPos4fv");
  glad_glRasterPos4i = (PFNGLRASTERPOS4IPROC)load("glRasterPos4i");
  glad_glRasterPos4iv = (PFNGLRASTERPOS4IVPROC)load("glRasterPos4iv");
  glad_glRasterPos4s = (PFNGLRASTERPOS4SPROC)load("glRasterPos4s");
  glad_glRasterPos4sv = (PFNGLRASTERPOS4SVPROC)load("glRasterPos4sv");
  glad_glRectd = (PFNGLRECTDPROC)load("glRectd");
  glad_glRectdv = (PFNGLRECTDVPROC)load("glRectdv");
  glad_glRectf = (PFNGLRECTFPROC)load("glRectf");
  glad_glRectfv = (PFNGLRECTFVPROC)load("glRectfv");
  glad_glRecti = (PFNGLRECTIPROC)load("glRecti");
  glad_glRectiv = (PFNGLRECTIVPROC)load("glRectiv");
  glad_glRects = (PFNGLRECTSPROC)load("glRects");
  glad_glRectsv = (PFNGLRECTSVPROC)load("glRectsv");
  glad_glTexCoord1d = (PFNGLTEXCOORD1DPROC)load("glTexCoord1d");
  glad_glTexCoord1dv = (PFNGLTEXCOORD1DVPROC)load("glTexCoord1dv");
  glad_glTexCoord1f = (PFNGLTEXCOORD1FPROC)load("glTexCoord1f");
  glad_glTexCoord1fv = (PFNGLTEXCOORD1FVPROC)load("glTexCoord1fv");
  glad_glTexCoord1i = (PFNGLTEXCOORD1IPROC)load("glTexCoord1i");
  glad_glTexCoord1iv = (PFNGLTEXCOORD1IVPROC)load("glTexCoord1iv");
  glad_glTexCoord1s = (PFNGLTEXCOORD1SPROC)load("glTexCoord1s");
  glad_glTexCoord1sv = (PFNGLTEXCOORD1SVPROC)load("glTexCoord1sv");
  glad_glTexCoord2d = (PFNGLTEXCOORD2DPROC)load("glTexCoord2d");
  glad_glTexCoord2dv = (PFNGLTEXCOORD2DVPROC)load("glTexCoord2dv");
  glad_glTexCoord2f = (PFNGLTEXCOORD2FPROC)load("glTexCoord2f");
  glad_glTexCoord2fv = (PFNGLTEXCOORD2FVPROC)load("glTexCoord2fv");
  glad_glTexCoord2i = (PFNGLTEXCOORD2IPROC)load("glTexCoord2i");
  glad_glTexCoord2iv = (PFNGLTEXCOORD2IVPROC)load("glTexCoord2iv");
  glad_glTexCoord2s = (PFNGLTEXCOORD2SPROC)load("glTexCoord2s");
  glad_glTexCoord2sv = (PFNGLTEXCOORD2SVPROC)load("glTexCoord2sv");
  glad_glTexCoord3d = (PFNGLTEXCOORD3DPROC)load("glTexCoord3d");
  glad_glTexCoord3dv = (PFNGLTEXCOORD3DVPROC)load("glTexCoord3dv");
  glad_glTexCoord3f = (PFNGLTEXCOORD3FPROC)load("glTexCoord3f");
  glad_glTexCoord3fv = (PFNGLTEXCOORD3FVPROC)load("glTexCoord3fv");
  glad_glTexCoord3i = (PFNGLTEXCOORD3IPROC)load("glTexCoord3i");
  glad_glTexCoord3iv = (PFNGLTEXCOORD3IVPROC)load("glTexCoord3iv");
  glad_glTexCoord3s = (PFNGLTEXCOORD3SPROC)load("glTexCoord3s");
  glad_glTexCoord3sv = (PFNGLTEXCOORD3SVPROC)load("glTexCoord3sv");
  glad_glTexCoord4d = (PFNGLTEXCOORD4DPROC)load("glTexCoord4d");
  glad_glTexCoord4dv = (PFNGLTEXCOORD4DVPROC)load("glTexCoord4dv");
  glad_glTexCoord4f = (PFNGLTEXCOORD4FPROC)load("glTexCoord4f");
  glad_glTexCoord4fv = (PFNGLTEXCOORD4FVPROC)load("glTexCoord4fv");
  glad_glTexCoord4i = (PFNGLTEXCOORD4IPROC)load("glTexCoord4i");
  glad_glTexCoord4iv = (PFNGLTEXCOORD4IVPROC)load("glTexCoord4iv");
  glad_glTexCoord4s = (PFNGLTEXCOORD4SPROC)load("glTexCoord4s");
  glad_glTexCoord4sv = (PFNGLTEXCOORD4SVPROC)load("glTexCoord4sv");
  glad_glVertex2d = (PFNGLVERTEX2DPROC)load("glVertex2d");
  glad_glVertex2dv = (PFNGLVERTEX2DVPROC)load("glVertex2dv");
  glad_glVertex2f = (PFNGLVERTEX2FPROC)load("glVertex2f");
  glad_glVertex2fv = (PFNGLVERTEX2FVPROC)load("glVertex2fv");
  glad_glVertex2i = (PFNGLVERTEX2IPROC)load("glVertex2i");
  glad_glVertex2iv = (PFNGLVERTEX2IVPROC)load("glVertex2iv");
  glad_glVertex2s = (PFNGLVERTEX2SPROC)load("glVertex2s");
  glad_glVertex2sv = (PFNGLVERTEX2SVPROC)load("glVertex2sv");
  glad_glVertex3d = (PFNGLVERTEX3DPROC)load("glVertex3d");
  glad_glVertex3dv = (PFNGLVERTEX3DVPROC)load("glVertex3dv");
  glad_glVertex3f = (PFNGLVERTEX3FPROC)load("glVertex3f");
  glad_glVertex3fv = (PFNGLVERTEX3FVPROC)load("glVertex3fv");
  glad_glVertex3i = (PFNGLVERTEX3IPROC)load("glVertex3i");
  glad_glVertex3iv = (PFNGLVERTEX3IVPROC)load("glVertex3iv");
  glad_glVertex3s = (PFNGLVERTEX3SPROC)load("glVertex3s");
  glad_glVertex3sv = (PFNGLVERTEX3SVPROC)load("glVertex3sv");
  glad_glVertex4d = (PFNGLVERTEX4DPROC)load("glVertex4d");
  glad_glVertex4dv = (PFNGLVERTEX4DVPROC)load("glVertex4dv");
  glad_glVertex4f = (PFNGLVERTEX4FPROC)load("glVertex4f");
  glad_glVertex4fv = (PFNGLVERTEX4FVPROC)load("glVertex4fv");
  glad_glVertex4i = (PFNGLVERTEX4IPROC)load("glVertex4i");
  glad_glVertex4iv = (PFNGLVERTEX4IVPROC)load("glVertex4iv");
  glad_glVertex4s = (PFNGLVERTEX4SPROC)load("glVertex4s");
  glad_glVertex4sv = (PFNGLVERTEX4SVPROC)load("glVertex4sv");
  glad_glClipPlane = (PFNGLCLIPPLANEPROC)load("glClipPlane");
  glad_glColorMaterial = (PFNGLCOLORMATERIALPROC)load("glColorMaterial");
  glad_glFogf = (PFNGLFOGFPROC)load("glFogf");
  glad_glFogfv = (PFNGLFOGFVPROC)load("glFogfv");
  glad_glFogi = (PFNGLFOGIPROC)load("glFogi");
  glad_glFogiv = (PFNGLFOGIVPROC)load("glFogiv");
  glad_glLightf = (PFNGLLIGHTFPROC)load("glLightf");
  glad_glLightfv = (PFNGLLIGHTFVPROC)load("glLightfv");
  glad_glLighti = (PFNGLLIGHTIPROC)load("glLighti");
  glad_glLightiv = (PFNGLLIGHTIVPROC)load("glLightiv");
  glad_glLightModelf = (PFNGLLIGHTMODELFPROC)load("glLightModelf");
  glad_glLightModelfv = (PFNGLLIGHTMODELFVPROC)load("glLightModelfv");
  glad_glLightModeli = (PFNGLLIGHTMODELIPROC)load("glLightModeli");
  glad_glLightModeliv = (PFNGLLIGHTMODELIVPROC)load("glLightModeliv");
  glad_glLineStipple = (PFNGLLINESTIPPLEPROC)load("glLineStipple");
  glad_glMaterialf = (PFNGLMATERIALFPROC)load("glMaterialf");
  glad_glMaterialfv = (PFNGLMATERIALFVPROC)load("glMaterialfv");
  glad_glMateriali = (PFNGLMATERIALIPROC)load("glMateriali");
  glad_glMaterialiv = (PFNGLMATERIALIVPROC)load("glMaterialiv");
  glad_glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC)load("glPolygonStipple");
  glad_glShadeModel = (PFNGLSHADEMODELPROC)load("glShadeModel");
  glad_glTexEnvf = (PFNGLTEXENVFPROC)load("glTexEnvf");
  glad_glTexEnvfv = (PFNGLTEXENVFVPROC)load("glTexEnvfv");
  glad_glTexEnvi = (PFNGLTEXENVIPROC)load("glTexEnvi");
  glad_glTexEnviv = (PFNGLTEXENVIVPROC)load("glTexEnviv");
  glad_glTexGend = (PFNGLTEXGENDPROC)load("glTexGend");
  glad_glTexGendv = (PFNGLTEXGENDVPROC)load("glTexGendv");
  glad_glTexGenf = (PFNGLTEXGENFPROC)load("glTexGenf");
  glad_glTexGenfv = (PFNGLTEXGENFVPROC)load("glTexGenfv");
  glad_glTexGeni = (PFNGLTEXGENIPROC)load("glTexGeni");
  glad_glTexGeniv = (PFNGLTEXGENIVPROC)load("glTexGeniv");
  glad_glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC)load("glFeedbackBuffer");
  glad_glSelectBuffer = (PFNGLSELECTBUFFERPROC)load("glSelectBuffer");
  glad_glRenderMode = (PFNGLRENDERMODEPROC)load("glRenderMode");
  glad_glInitNames = (PFNGLINITNAMESPROC)load("glInitNames");
  glad_glLoadName = (PFNGLLOADNAMEPROC)load("glLoadName");
  glad_glPassThrough = (PFNGLPASSTHROUGHPROC)load("glPassThrough");
  glad_glPopName = (PFNGLPOPNAMEPROC)load("glPopName");
  glad_glPushName = (PFNGLPUSHNAMEPROC)load("glPushName");
  glad_glClearAccum = (PFNGLCLEARACCUMPROC)load("glClearAccum");
  glad_glClearIndex = (PFNGLCLEARINDEXPROC)load("glClearIndex");
  glad_glIndexMask = (PFNGLINDEXMASKPROC)load("glIndexMask");
  glad_glAccum = (PFNGLACCUMPROC)load("glAccum");
  glad_glPopAttrib = (PFNGLPOPATTRIBPROC)load("glPopAttrib");
  glad_glPushAttrib = (PFNGLPUSHATTRIBPROC)load("glPushAttrib");
  glad_glMap1d = (PFNGLMAP1DPROC)load("glMap1d");
  glad_glMap1f = (PFNGLMAP1FPROC)load("glMap1f");
  glad_glMap2d = (PFNGLMAP2DPROC)load("glMap2d");
  glad_glMap2f = (PFNGLMAP2FPROC)load("glMap2f");
  glad_glMapGrid1d = (PFNGLMAPGRID1DPROC)load("glMapGrid1d");
  glad_glMapGrid1f = (PFNGLMAPGRID1FPROC)load("glMapGrid1f");
  glad_glMapGrid2d = (PFNGLMAPGRID2DPROC)load("glMapGrid2d");
  glad_glMapGrid2f = (PFNGLMAPGRID2FPROC)load("glMapGrid2f");
  glad_glEvalCoord1d = (PFNGLEVALCOORD1DPROC)load("glEvalCoord1d");
  glad_glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC)load("glEvalCoord1dv");
  glad_glEvalCoord1f = (PFNGLEVALCOORD1FPROC)load("glEvalCoord1f");
  glad_glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC)load("glEvalCoord1fv");
  glad_glEvalCoord2d = (PFNGLEVALCOORD2DPROC)load("glEvalCoord2d");
  glad_glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC)load("glEvalCoord2dv");
  glad_glEvalCoord2f = (PFNGLEVALCOORD2FPROC)load("glEvalCoord2f");
  glad_glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC)load("glEvalCoord2fv");
  glad_glEvalMesh1 = (PFNGLEVALMESH1PROC)load("glEvalMesh1");
  glad_glEvalPoint1 = (PFNGLEVALPOINT1PROC)load("glEvalPoint1");
  glad_glEvalMesh2 = (PFNGLEVALMESH2PROC)load("glEvalMesh2");
  glad_glEvalPoint2 = (PFNGLEVALPOINT2PROC)load("glEvalPoint2");
  glad_glAlphaFunc = (PFNGLALPHAFUNCPROC)load("glAlphaFunc");
  glad_glPixelZoom = (PFNGLPIXELZOOMPROC)load("glPixelZoom");
  glad_glPixelTransferf = (PFNGLPIXELTRANSFERFPROC)load("glPixelTransferf");
  glad_glPixelTransferi = (PFNGLPIXELTRANSFERIPROC)load("glPixelTransferi");
  glad_glPixelMapfv = (PFNGLPIXELMAPFVPROC)load("glPixelMapfv");
  glad_glPixelMapuiv = (PFNGLPIXELMAPUIVPROC)load("glPixelMapuiv");
  glad_glPixelMapusv = (PFNGLPIXELMAPUSVPROC)load("glPixelMapusv");
  glad_glCopyPixels = (PFNGLCOPYPIXELSPROC)load("glCopyPixels");
  glad_glDrawPixels = (PFNGLDRAWPIXELSPROC)load("glDrawPixels");
  glad_glGetClipPlane = (PFNGLGETCLIPPLANEPROC)load("glGetClipPlane");
  glad_glGetLightfv = (PFNGLGETLIGHTFVPROC)load("glGetLightfv");
  glad_glGetLightiv = (PFNGLGETLIGHTIVPROC)load("glGetLightiv");
  glad_glGetMapdv = (PFNGLGETMAPDVPROC)load("glGetMapdv");
  glad_glGetMapfv = (PFNGLGETMAPFVPROC)load("glGetMapfv");
  glad_glGetMapiv = (PFNGLGETMAPIVPROC)load("glGetMapiv");
  glad_glGetMaterialfv = (PFNGLGETMATERIALFVPROC)load("glGetMaterialfv");
  glad_glGetMaterialiv = (PFNGLGETMATERIALIVPROC)load("glGetMaterialiv");
  glad_glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC)load("glGetPixelMapfv");
  glad_glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC)load("glGetPixelMapuiv");
  glad_glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC)load("glGetPixelMapusv");
  glad_glGetPolygonStipple =
      (PFNGLGETPOLYGONSTIPPLEPROC)load("glGetPolygonStipple");
  glad_glGetTexEnvfv = (PFNGLGETTEXENVFVPROC)load("glGetTexEnvfv");
  glad_glGetTexEnviv = (PFNGLGETTEXENVIVPROC)load("glGetTexEnviv");
  glad_glGetTexGendv = (PFNGLGETTEXGENDVPROC)load("glGetTexGendv");
  glad_glGetTexGenfv = (PFNGLGETTEXGENFVPROC)load("glGetTexGenfv");
  glad_glGetTexGeniv = (PFNGLGETTEXGENIVPROC)load("glGetTexGeniv");
  glad_glIsList = (PFNGLISLISTPROC)load("glIsList");
  glad_glFrustum = (PFNGLFRUSTUMPROC)load("glFrustum");
  glad_glLoadIdentity = (PFNGLLOADIDENTITYPROC)load("glLoadIdentity");
  glad_glLoadMatrixf = (PFNGLLOADMATRIXFPROC)load("glLoadMatrixf");
  glad_glLoadMatrixd = (PFNGLLOADMATRIXDPROC)load("glLoadMatrixd");
  glad_glMatrixMode = (PFNGLMATRIXMODEPROC)load("glMatrixMode");
  glad_glMultMatrixf = (PFNGLMULTMATRIXFPROC)load("glMultMatrixf");
  glad_glMultMatrixd = (PFNGLMULTMATRIXDPROC)load("glMultMatrixd");
  glad_glOrtho = (PFNGLORTHOPROC)load("glOrtho");
  glad_glPopMatrix = (PFNGLPOPMATRIXPROC)load("glPopMatrix");
  glad_glPushMatrix = (PFNGLPUSHMATRIXPROC)load("glPushMatrix");
  glad_glRotated = (PFNGLROTATEDPROC)load("glRotated");
  glad_glRotatef = (PFNGLROTATEFPROC)load("glRotatef");
  glad_glScaled = (PFNGLSCALEDPROC)load("glScaled");
  glad_glScalef = (PFNGLSCALEFPROC)load("glScalef");
  glad_glTranslated = (PFNGLTRANSLATEDPROC)load("glTranslated");
  glad_glTranslatef = (PFNGLTRANSLATEFPROC)load("glTranslatef");
}
static void load_GL_VERSION_1_1(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_1) return;
  glad_glDrawArrays = (PFNGLDRAWARRAYSPROC)load("glDrawArrays");
  glad_glDrawElements = (PFNGLDRAWELEMENTSPROC)load("glDrawElements");
  glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
  glad_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load("glPolygonOffset");
  glad_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load("glCopyTexImage1D");
  glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load("glCopyTexImage2D");
  glad_glCopyTexSubImage1D =
      (PFNGLCOPYTEXSUBIMAGE1DPROC)load("glCopyTexSubImage1D");
  glad_glCopyTexSubImage2D =
      (PFNGLCOPYTEXSUBIMAGE2DPROC)load("glCopyTexSubImage2D");
  glad_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)load("glTexSubImage1D");
  glad_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load("glTexSubImage2D");
  glad_glBindTexture = (PFNGLBINDTEXTUREPROC)load("glBindTexture");
  glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load("glDeleteTextures");
  glad_glGenTextures = (PFNGLGENTEXTURESPROC)load("glGenTextures");
  glad_glIsTexture = (PFNGLISTEXTUREPROC)load("glIsTexture");
  glad_glArrayElement = (PFNGLARRAYELEMENTPROC)load("glArrayElement");
  glad_glColorPointer = (PFNGLCOLORPOINTERPROC)load("glColorPointer");
  glad_glDisableClientState =
      (PFNGLDISABLECLIENTSTATEPROC)load("glDisableClientState");
  glad_glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC)load("glEdgeFlagPointer");
  glad_glEnableClientState =
      (PFNGLENABLECLIENTSTATEPROC)load("glEnableClientState");
  glad_glIndexPointer = (PFNGLINDEXPOINTERPROC)load("glIndexPointer");
  glad_glInterleavedArrays =
      (PFNGLINTERLEAVEDARRAYSPROC)load("glInterleavedArrays");
  glad_glNormalPointer = (PFNGLNORMALPOINTERPROC)load("glNormalPointer");
  glad_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC)load("glTexCoordPointer");
  glad_glVertexPointer = (PFNGLVERTEXPOINTERPROC)load("glVertexPointer");
  glad_glAreTexturesResident =
      (PFNGLARETEXTURESRESIDENTPROC)load("glAreTexturesResident");
  glad_glPrioritizeTextures =
      (PFNGLPRIORITIZETEXTURESPROC)load("glPrioritizeTextures");
  glad_glIndexub = (PFNGLINDEXUBPROC)load("glIndexub");
  glad_glIndexubv = (PFNGLINDEXUBVPROC)load("glIndexubv");
  glad_glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC)load("glPopClientAttrib");
  glad_glPushClientAttrib =
      (PFNGLPUSHCLIENTATTRIBPROC)load("glPushClientAttrib");
}
static void load_GL_VERSION_1_2(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_2) return;
  glad_glDrawRangeElements =
      (PFNGLDRAWRANGEELEMENTSPROC)load("glDrawRangeElements");
  glad_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load("glTexImage3D");
  glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load("glTexSubImage3D");
  glad_glCopyTexSubImage3D =
      (PFNGLCOPYTEXSUBIMAGE3DPROC)load("glCopyTexSubImage3D");
}
static void load_GL_VERSION_1_3(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_3) return;
  glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load("glActiveTexture");
  glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load("glSampleCoverage");
  glad_glCompressedTexImage3D =
      (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load("glCompressedTexImage3D");
  glad_glCompressedTexImage2D =
      (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load("glCompressedTexImage2D");
  glad_glCompressedTexImage1D =
      (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load("glCompressedTexImage1D");
  glad_glCompressedTexSubImage3D =
      (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load("glCompressedTexSubImage3D");
  glad_glCompressedTexSubImage2D =
      (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load("glCompressedTexSubImage2D");
  glad_glCompressedTexSubImage1D =
      (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load("glCompressedTexSubImage1D");
  glad_glGetCompressedTexImage =
      (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load("glGetCompressedTexImage");
  glad_glClientActiveTexture =
      (PFNGLCLIENTACTIVETEXTUREPROC)load("glClientActiveTexture");
  glad_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)load("glMultiTexCoord1d");
  glad_glMultiTexCoord1dv =
      (PFNGLMULTITEXCOORD1DVPROC)load("glMultiTexCoord1dv");
  glad_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)load("glMultiTexCoord1f");
  glad_glMultiTexCoord1fv =
      (PFNGLMULTITEXCOORD1FVPROC)load("glMultiTexCoord1fv");
  glad_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)load("glMultiTexCoord1i");
  glad_glMultiTexCoord1iv =
      (PFNGLMULTITEXCOORD1IVPROC)load("glMultiTexCoord1iv");
  glad_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)load("glMultiTexCoord1s");
  glad_glMultiTexCoord1sv =
      (PFNGLMULTITEXCOORD1SVPROC)load("glMultiTexCoord1sv");
  glad_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)load("glMultiTexCoord2d");
  glad_glMultiTexCoord2dv =
      (PFNGLMULTITEXCOORD2DVPROC)load("glMultiTexCoord2dv");
  glad_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)load("glMultiTexCoord2f");
  glad_glMultiTexCoord2fv =
      (PFNGLMULTITEXCOORD2FVPROC)load("glMultiTexCoord2fv");
  glad_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)load("glMultiTexCoord2i");
  glad_glMultiTexCoord2iv =
      (PFNGLMULTITEXCOORD2IVPROC)load("glMultiTexCoord2iv");
  glad_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)load("glMultiTexCoord2s");
  glad_glMultiTexCoord2sv =
      (PFNGLMULTITEXCOORD2SVPROC)load("glMultiTexCoord2sv");
  glad_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)load("glMultiTexCoord3d");
  glad_glMultiTexCoord3dv =
      (PFNGLMULTITEXCOORD3DVPROC)load("glMultiTexCoord3dv");
  glad_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)load("glMultiTexCoord3f");
  glad_glMultiTexCoord3fv =
      (PFNGLMULTITEXCOORD3FVPROC)load("glMultiTexCoord3fv");
  glad_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)load("glMultiTexCoord3i");
  glad_glMultiTexCoord3iv =
      (PFNGLMULTITEXCOORD3IVPROC)load("glMultiTexCoord3iv");
  glad_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)load("glMultiTexCoord3s");
  glad_glMultiTexCoord3sv =
      (PFNGLMULTITEXCOORD3SVPROC)load("glMultiTexCoord3sv");
  glad_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)load("glMultiTexCoord4d");
  glad_glMultiTexCoord4dv =
      (PFNGLMULTITEXCOORD4DVPROC)load("glMultiTexCoord4dv");
  glad_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)load("glMultiTexCoord4f");
  glad_glMultiTexCoord4fv =
      (PFNGLMULTITEXCOORD4FVPROC)load("glMultiTexCoord4fv");
  glad_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)load("glMultiTexCoord4i");
  glad_glMultiTexCoord4iv =
      (PFNGLMULTITEXCOORD4IVPROC)load("glMultiTexCoord4iv");
  glad_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)load("glMultiTexCoord4s");
  glad_glMultiTexCoord4sv =
      (PFNGLMULTITEXCOORD4SVPROC)load("glMultiTexCoord4sv");
  glad_glLoadTransposeMatrixf =
      (PFNGLLOADTRANSPOSEMATRIXFPROC)load("glLoadTransposeMatrixf");
  glad_glLoadTransposeMatrixd =
      (PFNGLLOADTRANSPOSEMATRIXDPROC)load("glLoadTransposeMatrixd");
  glad_glMultTransposeMatrixf =
      (PFNGLMULTTRANSPOSEMATRIXFPROC)load("glMultTransposeMatrixf");
  glad_glMultTransposeMatrixd =
      (PFNGLMULTTRANSPOSEMATRIXDPROC)load("glMultTransposeMatrixd");
}
static void load_GL_VERSION_1_4(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_4) return;
  glad_glBlendFuncSeparate =
      (PFNGLBLENDFUNCSEPARATEPROC)load("glBlendFuncSeparate");
  glad_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load("glMultiDrawArrays");
  glad_glMultiDrawElements =
      (PFNGLMULTIDRAWELEMENTSPROC)load("glMultiDrawElements");
  glad_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load("glPointParameterf");
  glad_glPointParameterfv =
      (PFNGLPOINTPARAMETERFVPROC)load("glPointParameterfv");
  glad_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load("glPointParameteri");
  glad_glPointParameteriv =
      (PFNGLPOINTPARAMETERIVPROC)load("glPointParameteriv");
  glad_glFogCoordf = (PFNGLFOGCOORDFPROC)load("glFogCoordf");
  glad_glFogCoordfv = (PFNGLFOGCOORDFVPROC)load("glFogCoordfv");
  glad_glFogCoordd = (PFNGLFOGCOORDDPROC)load("glFogCoordd");
  glad_glFogCoorddv = (PFNGLFOGCOORDDVPROC)load("glFogCoorddv");
  glad_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)load("glFogCoordPointer");
  glad_glSecondaryColor3b =
      (PFNGLSECONDARYCOLOR3BPROC)load("glSecondaryColor3b");
  glad_glSecondaryColor3bv =
      (PFNGLSECONDARYCOLOR3BVPROC)load("glSecondaryColor3bv");
  glad_glSecondaryColor3d =
      (PFNGLSECONDARYCOLOR3DPROC)load("glSecondaryColor3d");
  glad_glSecondaryColor3dv =
      (PFNGLSECONDARYCOLOR3DVPROC)load("glSecondaryColor3dv");
  glad_glSecondaryColor3f =
      (PFNGLSECONDARYCOLOR3FPROC)load("glSecondaryColor3f");
  glad_glSecondaryColor3fv =
      (PFNGLSECONDARYCOLOR3FVPROC)load("glSecondaryColor3fv");
  glad_glSecondaryColor3i =
      (PFNGLSECONDARYCOLOR3IPROC)load("glSecondaryColor3i");
  glad_glSecondaryColor3iv =
      (PFNGLSECONDARYCOLOR3IVPROC)load("glSecondaryColor3iv");
  glad_glSecondaryColor3s =
      (PFNGLSECONDARYCOLOR3SPROC)load("glSecondaryColor3s");
  glad_glSecondaryColor3sv =
      (PFNGLSECONDARYCOLOR3SVPROC)load("glSecondaryColor3sv");
  glad_glSecondaryColor3ub =
      (PFNGLSECONDARYCOLOR3UBPROC)load("glSecondaryColor3ub");
  glad_glSecondaryColor3ubv =
      (PFNGLSECONDARYCOLOR3UBVPROC)load("glSecondaryColor3ubv");
  glad_glSecondaryColor3ui =
      (PFNGLSECONDARYCOLOR3UIPROC)load("glSecondaryColor3ui");
  glad_glSecondaryColor3uiv =
      (PFNGLSECONDARYCOLOR3UIVPROC)load("glSecondaryColor3uiv");
  glad_glSecondaryColor3us =
      (PFNGLSECONDARYCOLOR3USPROC)load("glSecondaryColor3us");
  glad_glSecondaryColor3usv =
      (PFNGLSECONDARYCOLOR3USVPROC)load("glSecondaryColor3usv");
  glad_glSecondaryColorPointer =
      (PFNGLSECONDARYCOLORPOINTERPROC)load("glSecondaryColorPointer");
  glad_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)load("glWindowPos2d");
  glad_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)load("glWindowPos2dv");
  glad_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)load("glWindowPos2f");
  glad_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)load("glWindowPos2fv");
  glad_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)load("glWindowPos2i");
  glad_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)load("glWindowPos2iv");
  glad_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)load("glWindowPos2s");
  glad_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)load("glWindowPos2sv");
  glad_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)load("glWindowPos3d");
  glad_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)load("glWindowPos3dv");
  glad_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)load("glWindowPos3f");
  glad_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)load("glWindowPos3fv");
  glad_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)load("glWindowPos3i");
  glad_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)load("glWindowPos3iv");
  glad_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)load("glWindowPos3s");
  glad_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)load("glWindowPos3sv");
  glad_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");
  glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");
}
static void load_GL_VERSION_1_5(GLADloadproc load) {
  if (!GLAD_GL_VERSION_1_5) return;
  glad_glGenQueries = (PFNGLGENQUERIESPROC)load("glGenQueries");
  glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load("glDeleteQueries");
  glad_glIsQuery = (PFNGLISQUERYPROC)load("glIsQuery");
  glad_glBeginQuery = (PFNGLBEGINQUERYPROC)load("glBeginQuery");
  glad_glEndQuery = (PFNGLENDQUERYPROC)load("glEndQuery");
  glad_glGetQueryiv = (PFNGLGETQUERYIVPROC)load("glGetQueryiv");
  glad_glGetQueryObjectiv =
      (PFNGLGETQUERYOBJECTIVPROC)load("glGetQueryObjectiv");
  glad_glGetQueryObjectuiv =
      (PFNGLGETQUERYOBJECTUIVPROC)load("glGetQueryObjectuiv");
  glad_glBindBuffer = (PFNGLBINDBUFFERPROC)load("glBindBuffer");
  glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load("glDeleteBuffers");
  glad_glGenBuffers = (PFNGLGENBUFFERSPROC)load("glGenBuffers");
  glad_glIsBuffer = (PFNGLISBUFFERPROC)load("glIsBuffer");
  glad_glBufferData = (PFNGLBUFFERDATAPROC)load("glBufferData");
  glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load("glBufferSubData");
  glad_glGetBufferSubData =
      (PFNGLGETBUFFERSUBDATAPROC)load("glGetBufferSubData");
  glad_glMapBuffer = (PFNGLMAPBUFFERPROC)load("glMapBuffer");
  glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load("glUnmapBuffer");
  glad_glGetBufferParameteriv =
      (PFNGLGETBUFFERPARAMETERIVPROC)load("glGetBufferParameteriv");
  glad_glGetBufferPointerv =
      (PFNGLGETBUFFERPOINTERVPROC)load("glGetBufferPointerv");
}
static void load_GL_VERSION_2_0(GLADloadproc load) {
  if (!GLAD_GL_VERSION_2_0) return;
  glad_glBlendEquationSeparate =
      (PFNGLBLENDEQUATIONSEPARATEPROC)load("glBlendEquationSeparate");
  glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load("glDrawBuffers");
  glad_glStencilOpSeparate =
      (PFNGLSTENCILOPSEPARATEPROC)load("glStencilOpSeparate");
  glad_glStencilFuncSeparate =
      (PFNGLSTENCILFUNCSEPARATEPROC)load("glStencilFuncSeparate");
  glad_glStencilMaskSeparate =
      (PFNGLSTENCILMASKSEPARATEPROC)load("glStencilMaskSeparate");
  glad_glAttachShader = (PFNGLATTACHSHADERPROC)load("glAttachShader");
  glad_glBindAttribLocation =
      (PFNGLBINDATTRIBLOCATIONPROC)load("glBindAttribLocation");
  glad_glCompileShader = (PFNGLCOMPILESHADERPROC)load("glCompileShader");
  glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load("glCreateProgram");
  glad_glCreateShader = (PFNGLCREATESHADERPROC)load("glCreateShader");
  glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load("glDeleteProgram");
  glad_glDeleteShader = (PFNGLDELETESHADERPROC)load("glDeleteShader");
  glad_glDetachShader = (PFNGLDETACHSHADERPROC)load("glDetachShader");
  glad_glDisableVertexAttribArray =
      (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load("glDisableVertexAttribArray");
  glad_glEnableVertexAttribArray =
      (PFNGLENABLEVERTEXATTRIBARRAYPROC)load("glEnableVertexAttribArray");
  glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load("glGetActiveAttrib");
  glad_glGetActiveUniform =
      (PFNGLGETACTIVEUNIFORMPROC)load("glGetActiveUniform");
  glad_glGetAttachedShaders =
      (PFNGLGETATTACHEDSHADERSPROC)load("glGetAttachedShaders");
  glad_glGetAttribLocation =
      (PFNGLGETATTRIBLOCATIONPROC)load("glGetAttribLocation");
  glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load("glGetProgramiv");
  glad_glGetProgramInfoLog =
      (PFNGLGETPROGRAMINFOLOGPROC)load("glGetProgramInfoLog");
  glad_glGetShaderiv = (PFNGLGETSHADERIVPROC)load("glGetShaderiv");
  glad_glGetShaderInfoLog =
      (PFNGLGETSHADERINFOLOGPROC)load("glGetShaderInfoLog");
  glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load("glGetShaderSource");
  glad_glGetUniformLocation =
      (PFNGLGETUNIFORMLOCATIONPROC)load("glGetUniformLocation");
  glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load("glGetUniformfv");
  glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load("glGetUniformiv");
  glad_glGetVertexAttribdv =
      (PFNGLGETVERTEXATTRIBDVPROC)load("glGetVertexAttribdv");
  glad_glGetVertexAttribfv =
      (PFNGLGETVERTEXATTRIBFVPROC)load("glGetVertexAttribfv");
  glad_glGetVertexAttribiv =
      (PFNGLGETVERTEXATTRIBIVPROC)load("glGetVertexAttribiv");
  glad_glGetVertexAttribPointerv =
      (PFNGLGETVERTEXATTRIBPOINTERVPROC)load("glGetVertexAttribPointerv");
  glad_glIsProgram = (PFNGLISPROGRAMPROC)load("glIsProgram");
  glad_glIsShader = (PFNGLISSHADERPROC)load("glIsShader");
  glad_glLinkProgram = (PFNGLLINKPROGRAMPROC)load("glLinkProgram");
  glad_glShaderSource = (PFNGLSHADERSOURCEPROC)load("glShaderSource");
  glad_glUseProgram = (PFNGLUSEPROGRAMPROC)load("glUseProgram");
  glad_glUniform1f = (PFNGLUNIFORM1FPROC)load("glUniform1f");
  glad_glUniform2f = (PFNGLUNIFORM2FPROC)load("glUniform2f");
  glad_glUniform3f = (PFNGLUNIFORM3FPROC)load("glUniform3f");
  glad_glUniform4f = (PFNGLUNIFORM4FPROC)load("glUniform4f");
  glad_glUniform1i = (PFNGLUNIFORM1IPROC)load("glUniform1i");
  glad_glUniform2i = (PFNGLUNIFORM2IPROC)load("glUniform2i");
  glad_glUniform3i = (PFNGLUNIFORM3IPROC)load("glUniform3i");
  glad_glUniform4i = (PFNGLUNIFORM4IPROC)load("glUniform4i");
  glad_glUniform1fv = (PFNGLUNIFORM1FVPROC)load("glUniform1fv");
  glad_glUniform2fv = (PFNGLUNIFORM2FVPROC)load("glUniform2fv");
  glad_glUniform3fv = (PFNGLUNIFORM3FVPROC)load("glUniform3fv");
  glad_glUniform4fv = (PFNGLUNIFORM4FVPROC)load("glUniform4fv");
  glad_glUniform1iv = (PFNGLUNIFORM1IVPROC)load("glUniform1iv");
  glad_glUniform2iv = (PFNGLUNIFORM2IVPROC)load("glUniform2iv");
  glad_glUniform3iv = (PFNGLUNIFORM3IVPROC)load("glUniform3iv");
  glad_glUniform4iv = (PFNGLUNIFORM4IVPROC)load("glUniform4iv");
  glad_glUniformMatrix2fv =
      (PFNGLUNIFORMMATRIX2FVPROC)load("glUniformMatrix2fv");
  glad_glUniformMatrix3fv =
      (PFNGLUNIFORMMATRIX3FVPROC)load("glUniformMatrix3fv");
  glad_glUniformMatrix4fv =
      (PFNGLUNIFORMMATRIX4FVPROC)load("glUniformMatrix4fv");
  glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load("glValidateProgram");
  glad_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)load("glVertexAttrib1d");
  glad_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load("glVertexAttrib1dv");
  glad_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load("glVertexAttrib1f");
  glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load("glVertexAttrib1fv");
  glad_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)load("glVertexAttrib1s");
  glad_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load("glVertexAttrib1sv");
  glad_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)load("glVertexAttrib2d");
  glad_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load("glVertexAttrib2dv");
  glad_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load("glVertexAttrib2f");
  glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load("glVertexAttrib2fv");
  glad_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)load("glVertexAttrib2s");
  glad_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load("glVertexAttrib2sv");
  glad_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)load("glVertexAttrib3d");
  glad_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load("glVertexAttrib3dv");
  glad_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load("glVertexAttrib3f");
  glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load("glVertexAttrib3fv");
  glad_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)load("glVertexAttrib3s");
  glad_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load("glVertexAttrib3sv");
  glad_glVertexAttrib4Nbv =
      (PFNGLVERTEXATTRIB4NBVPROC)load("glVertexAttrib4Nbv");
  glad_glVertexAttrib4Niv =
      (PFNGLVERTEXATTRIB4NIVPROC)load("glVertexAttrib4Niv");
  glad_glVertexAttrib4Nsv =
      (PFNGLVERTEXATTRIB4NSVPROC)load("glVertexAttrib4Nsv");
  glad_glVertexAttrib4Nub =
      (PFNGLVERTEXATTRIB4NUBPROC)load("glVertexAttrib4Nub");
  glad_glVertexAttrib4Nubv =
      (PFNGLVERTEXATTRIB4NUBVPROC)load("glVertexAttrib4Nubv");
  glad_glVertexAttrib4Nuiv =
      (PFNGLVERTEXATTRIB4NUIVPROC)load("glVertexAttrib4Nuiv");
  glad_glVertexAttrib4Nusv =
      (PFNGLVERTEXATTRIB4NUSVPROC)load("glVertexAttrib4Nusv");
  glad_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load("glVertexAttrib4bv");
  glad_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)load("glVertexAttrib4d");
  glad_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load("glVertexAttrib4dv");
  glad_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load("glVertexAttrib4f");
  glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load("glVertexAttrib4fv");
  glad_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load("glVertexAttrib4iv");
  glad_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)load("glVertexAttrib4s");
  glad_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load("glVertexAttrib4sv");
  glad_glVertexAttrib4ubv =
      (PFNGLVERTEXATTRIB4UBVPROC)load("glVertexAttrib4ubv");
  glad_glVertexAttrib4uiv =
      (PFNGLVERTEXATTRIB4UIVPROC)load("glVertexAttrib4uiv");
  glad_glVertexAttrib4usv =
      (PFNGLVERTEXATTRIB4USVPROC)load("glVertexAttrib4usv");
  glad_glVertexAttribPointer =
      (PFNGLVERTEXATTRIBPOINTERPROC)load("glVertexAttribPointer");
}
static void load_GL_VERSION_2_1(GLADloadproc load) {
  if (!GLAD_GL_VERSION_2_1) return;
  glad_glUniformMatrix2x3fv =
      (PFNGLUNIFORMMATRIX2X3FVPROC)load("glUniformMatrix2x3fv");
  glad_glUniformMatrix3x2fv =
      (PFNGLUNIFORMMATRIX3X2FVPROC)load("glUniformMatrix3x2fv");
  glad_glUniformMatrix2x4fv =
      (PFNGLUNIFORMMATRIX2X4FVPROC)load("glUniformMatrix2x4fv");
  glad_glUniformMatrix4x2fv =
      (PFNGLUNIFORMMATRIX4X2FVPROC)load("glUniformMatrix4x2fv");
  glad_glUniformMatrix3x4fv =
      (PFNGLUNIFORMMATRIX3X4FVPROC)load("glUniformMatrix3x4fv");
  glad_glUniformMatrix4x3fv =
      (PFNGLUNIFORMMATRIX4X3FVPROC)load("glUniformMatrix4x3fv");
}
static void load_GL_VERSION_3_0(GLADloadproc load) {
  if (!GLAD_GL_VERSION_3_0) return;
  glad_glColorMaski = (PFNGLCOLORMASKIPROC)load("glColorMaski");
  glad_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load("glGetBooleani_v");
  glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
  glad_glEnablei = (PFNGLENABLEIPROC)load("glEnablei");
  glad_glDisablei = (PFNGLDISABLEIPROC)load("glDisablei");
  glad_glIsEnabledi = (PFNGLISENABLEDIPROC)load("glIsEnabledi");
  glad_glBeginTransformFeedback =
      (PFNGLBEGINTRANSFORMFEEDBACKPROC)load("glBeginTransformFeedback");
  glad_glEndTransformFeedback =
      (PFNGLENDTRANSFORMFEEDBACKPROC)load("glEndTransformFeedback");
  glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
  glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
  glad_glTransformFeedbackVaryings =
      (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load("glTransformFeedbackVaryings");
  glad_glGetTransformFeedbackVarying =
      (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load(
          "glGetTransformFeedbackVarying");
  glad_glClampColor = (PFNGLCLAMPCOLORPROC)load("glClampColor");
  glad_glBeginConditionalRender =
      (PFNGLBEGINCONDITIONALRENDERPROC)load("glBeginConditionalRender");
  glad_glEndConditionalRender =
      (PFNGLENDCONDITIONALRENDERPROC)load("glEndConditionalRender");
  glad_glVertexAttribIPointer =
      (PFNGLVERTEXATTRIBIPOINTERPROC)load("glVertexAttribIPointer");
  glad_glGetVertexAttribIiv =
      (PFNGLGETVERTEXATTRIBIIVPROC)load("glGetVertexAttribIiv");
  glad_glGetVertexAttribIuiv =
      (PFNGLGETVERTEXATTRIBIUIVPROC)load("glGetVertexAttribIuiv");
  glad_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load("glVertexAttribI1i");
  glad_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load("glVertexAttribI2i");
  glad_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load("glVertexAttribI3i");
  glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load("glVertexAttribI4i");
  glad_glVertexAttribI1ui =
      (PFNGLVERTEXATTRIBI1UIPROC)load("glVertexAttribI1ui");
  glad_glVertexAttribI2ui =
      (PFNGLVERTEXATTRIBI2UIPROC)load("glVertexAttribI2ui");
  glad_glVertexAttribI3ui =
      (PFNGLVERTEXATTRIBI3UIPROC)load("glVertexAttribI3ui");
  glad_glVertexAttribI4ui =
      (PFNGLVERTEXATTRIBI4UIPROC)load("glVertexAttribI4ui");
  glad_glVertexAttribI1iv =
      (PFNGLVERTEXATTRIBI1IVPROC)load("glVertexAttribI1iv");
  glad_glVertexAttribI2iv =
      (PFNGLVERTEXATTRIBI2IVPROC)load("glVertexAttribI2iv");
  glad_glVertexAttribI3iv =
      (PFNGLVERTEXATTRIBI3IVPROC)load("glVertexAttribI3iv");
  glad_glVertexAttribI4iv =
      (PFNGLVERTEXATTRIBI4IVPROC)load("glVertexAttribI4iv");
  glad_glVertexAttribI1uiv =
      (PFNGLVERTEXATTRIBI1UIVPROC)load("glVertexAttribI1uiv");
  glad_glVertexAttribI2uiv =
      (PFNGLVERTEXATTRIBI2UIVPROC)load("glVertexAttribI2uiv");
  glad_glVertexAttribI3uiv =
      (PFNGLVERTEXATTRIBI3UIVPROC)load("glVertexAttribI3uiv");
  glad_glVertexAttribI4uiv =
      (PFNGLVERTEXATTRIBI4UIVPROC)load("glVertexAttribI4uiv");
  glad_glVertexAttribI4bv =
      (PFNGLVERTEXATTRIBI4BVPROC)load("glVertexAttribI4bv");
  glad_glVertexAttribI4sv =
      (PFNGLVERTEXATTRIBI4SVPROC)load("glVertexAttribI4sv");
  glad_glVertexAttribI4ubv =
      (PFNGLVERTEXATTRIBI4UBVPROC)load("glVertexAttribI4ubv");
  glad_glVertexAttribI4usv =
      (PFNGLVERTEXATTRIBI4USVPROC)load("glVertexAttribI4usv");
  glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load("glGetUniformuiv");
  glad_glBindFragDataLocation =
      (PFNGLBINDFRAGDATALOCATIONPROC)load("glBindFragDataLocation");
  glad_glGetFragDataLocation =
      (PFNGLGETFRAGDATALOCATIONPROC)load("glGetFragDataLocation");
  glad_glUniform1ui = (PFNGLUNIFORM1UIPROC)load("glUniform1ui");
  glad_glUniform2ui = (PFNGLUNIFORM2UIPROC)load("glUniform2ui");
  glad_glUniform3ui = (PFNGLUNIFORM3UIPROC)load("glUniform3ui");
  glad_glUniform4ui = (PFNGLUNIFORM4UIPROC)load("glUniform4ui");
  glad_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load("glUniform1uiv");
  glad_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load("glUniform2uiv");
  glad_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load("glUniform3uiv");
  glad_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load("glUniform4uiv");
  glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load("glTexParameterIiv");
  glad_glTexParameterIuiv =
      (PFNGLTEXPARAMETERIUIVPROC)load("glTexParameterIuiv");
  glad_glGetTexParameterIiv =
      (PFNGLGETTEXPARAMETERIIVPROC)load("glGetTexParameterIiv");
  glad_glGetTexParameterIuiv =
      (PFNGLGETTEXPARAMETERIUIVPROC)load("glGetTexParameterIuiv");
  glad_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load("glClearBufferiv");
  glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load("glClearBufferuiv");
  glad_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load("glClearBufferfv");
  glad_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load("glClearBufferfi");
  glad_glGetStringi = (PFNGLGETSTRINGIPROC)load("glGetStringi");
  glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");
  glad_glBindRenderbuffer =
      (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");
  glad_glDeleteRenderbuffers =
      (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");
  glad_glGenRenderbuffers =
      (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");
  glad_glRenderbufferStorage =
      (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");
  glad_glGetRenderbufferParameteriv =
      (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");
  glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");
  glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");
  glad_glDeleteFramebuffers =
      (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");
  glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");
  glad_glCheckFramebufferStatus =
      (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");
  glad_glFramebufferTexture1D =
      (PFNGLFRAMEBUFFERTEXTURE1DPROC)load("glFramebufferTexture1D");
  glad_glFramebufferTexture2D =
      (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");
  glad_glFramebufferTexture3D =
      (PFNGLFRAMEBUFFERTEXTURE3DPROC)load("glFramebufferTexture3D");
  glad_glFramebufferRenderbuffer =
      (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");
  glad_glGetFramebufferAttachmentParameteriv =
      (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load(
          "glGetFramebufferAttachmentParameteriv");
  glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");
  glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");
  glad_glRenderbufferStorageMultisample =
      (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load(
          "glRenderbufferStorageMultisample");
  glad_glFramebufferTextureLayer =
      (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");
  glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");
  glad_glFlushMappedBufferRange =
      (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");
  glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");
  glad_glDeleteVertexArrays =
      (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");
  glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");
  glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");
}
static void load_GL_VERSION_3_1(GLADloadproc load) {
  if (!GLAD_GL_VERSION_3_1) return;
  glad_glDrawArraysInstanced =
      (PFNGLDRAWARRAYSINSTANCEDPROC)load("glDrawArraysInstanced");
  glad_glDrawElementsInstanced =
      (PFNGLDRAWELEMENTSINSTANCEDPROC)load("glDrawElementsInstanced");
  glad_glTexBuffer = (PFNGLTEXBUFFERPROC)load("glTexBuffer");
  glad_glPrimitiveRestartIndex =
      (PFNGLPRIMITIVERESTARTINDEXPROC)load("glPrimitiveRestartIndex");
  glad_glCopyBufferSubData =
      (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");
  glad_glGetUniformIndices =
      (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");
  glad_glGetActiveUniformsiv =
      (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");
  glad_glGetActiveUniformName =
      (PFNGLGETACTIVEUNIFORMNAMEPROC)load("glGetActiveUniformName");
  glad_glGetUniformBlockIndex =
      (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");
  glad_glGetActiveUniformBlockiv =
      (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");
  glad_glGetActiveUniformBlockName =
      (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");
  glad_glUniformBlockBinding =
      (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");
  glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
  glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
  glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
}
static void load_GL_VERSION_3_2(GLADloadproc load) {
  if (!GLAD_GL_VERSION_3_2) return;
  glad_glDrawElementsBaseVertex =
      (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");
  glad_glDrawRangeElementsBaseVertex =
      (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load(
          "glDrawRangeElementsBaseVertex");
  glad_glDrawElementsInstancedBaseVertex =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load(
          "glDrawElementsInstancedBaseVertex");
  glad_glMultiDrawElementsBaseVertex =
      (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load(
          "glMultiDrawElementsBaseVertex");
  glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load("glProvokingVertex");
  glad_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");
  glad_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");
  glad_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");
  glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");
  glad_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");
  glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");
  glad_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");
  glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load("glGetInteger64i_v");
  glad_glGetBufferParameteri64v =
      (PFNGLGETBUFFERPARAMETERI64VPROC)load("glGetBufferParameteri64v");
  glad_glFramebufferTexture =
      (PFNGLFRAMEBUFFERTEXTUREPROC)load("glFramebufferTexture");
  glad_glTexImage2DMultisample =
      (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load("glTexImage2DMultisample");
  glad_glTexImage3DMultisample =
      (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load("glTexImage3DMultisample");
  glad_glGetMultisamplefv =
      (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");
  glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");
}
static void load_GL_VERSION_3_3(GLADloadproc load) {
  if (!GLAD_GL_VERSION_3_3) return;
  glad_glBindFragDataLocationIndexed =
      (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load(
          "glBindFragDataLocationIndexed");
  glad_glGetFragDataIndex =
      (PFNGLGETFRAGDATAINDEXPROC)load("glGetFragDataIndex");
  glad_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");
  glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");
  glad_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");
  glad_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");
  glad_glSamplerParameteri =
      (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");
  glad_glSamplerParameteriv =
      (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");
  glad_glSamplerParameterf =
      (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");
  glad_glSamplerParameterfv =
      (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");
  glad_glSamplerParameterIiv =
      (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");
  glad_glSamplerParameterIuiv =
      (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");
  glad_glGetSamplerParameteriv =
      (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");
  glad_glGetSamplerParameterIiv =
      (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");
  glad_glGetSamplerParameterfv =
      (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");
  glad_glGetSamplerParameterIuiv =
      (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");
  glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load("glQueryCounter");
  glad_glGetQueryObjecti64v =
      (PFNGLGETQUERYOBJECTI64VPROC)load("glGetQueryObjecti64v");
  glad_glGetQueryObjectui64v =
      (PFNGLGETQUERYOBJECTUI64VPROC)load("glGetQueryObjectui64v");
  glad_glVertexAttribDivisor =
      (PFNGLVERTEXATTRIBDIVISORPROC)load("glVertexAttribDivisor");
  glad_glVertexAttribP1ui =
      (PFNGLVERTEXATTRIBP1UIPROC)load("glVertexAttribP1ui");
  glad_glVertexAttribP1uiv =
      (PFNGLVERTEXATTRIBP1UIVPROC)load("glVertexAttribP1uiv");
  glad_glVertexAttribP2ui =
      (PFNGLVERTEXATTRIBP2UIPROC)load("glVertexAttribP2ui");
  glad_glVertexAttribP2uiv =
      (PFNGLVERTEXATTRIBP2UIVPROC)load("glVertexAttribP2uiv");
  glad_glVertexAttribP3ui =
      (PFNGLVERTEXATTRIBP3UIPROC)load("glVertexAttribP3ui");
  glad_glVertexAttribP3uiv =
      (PFNGLVERTEXATTRIBP3UIVPROC)load("glVertexAttribP3uiv");
  glad_glVertexAttribP4ui =
      (PFNGLVERTEXATTRIBP4UIPROC)load("glVertexAttribP4ui");
  glad_glVertexAttribP4uiv =
      (PFNGLVERTEXATTRIBP4UIVPROC)load("glVertexAttribP4uiv");
  glad_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load("glVertexP2ui");
  glad_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load("glVertexP2uiv");
  glad_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load("glVertexP3ui");
  glad_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load("glVertexP3uiv");
  glad_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load("glVertexP4ui");
  glad_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load("glVertexP4uiv");
  glad_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load("glTexCoordP1ui");
  glad_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load("glTexCoordP1uiv");
  glad_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load("glTexCoordP2ui");
  glad_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load("glTexCoordP2uiv");
  glad_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load("glTexCoordP3ui");
  glad_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load("glTexCoordP3uiv");
  glad_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load("glTexCoordP4ui");
  glad_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load("glTexCoordP4uiv");
  glad_glMultiTexCoordP1ui =
      (PFNGLMULTITEXCOORDP1UIPROC)load("glMultiTexCoordP1ui");
  glad_glMultiTexCoordP1uiv =
      (PFNGLMULTITEXCOORDP1UIVPROC)load("glMultiTexCoordP1uiv");
  glad_glMultiTexCoordP2ui =
      (PFNGLMULTITEXCOORDP2UIPROC)load("glMultiTexCoordP2ui");
  glad_glMultiTexCoordP2uiv =
      (PFNGLMULTITEXCOORDP2UIVPROC)load("glMultiTexCoordP2uiv");
  glad_glMultiTexCoordP3ui =
      (PFNGLMULTITEXCOORDP3UIPROC)load("glMultiTexCoordP3ui");
  glad_glMultiTexCoordP3uiv =
      (PFNGLMULTITEXCOORDP3UIVPROC)load("glMultiTexCoordP3uiv");
  glad_glMultiTexCoordP4ui =
      (PFNGLMULTITEXCOORDP4UIPROC)load("glMultiTexCoordP4ui");
  glad_glMultiTexCoordP4uiv =
      (PFNGLMULTITEXCOORDP4UIVPROC)load("glMultiTexCoordP4uiv");
  glad_glNormalP3ui = (PFNGLNORMALP3UIPROC)load("glNormalP3ui");
  glad_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load("glNormalP3uiv");
  glad_glColorP3ui = (PFNGLCOLORP3UIPROC)load("glColorP3ui");
  glad_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load("glColorP3uiv");
  glad_glColorP4ui = (PFNGLCOLORP4UIPROC)load("glColorP4ui");
  glad_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load("glColorP4uiv");
  glad_glSecondaryColorP3ui =
      (PFNGLSECONDARYCOLORP3UIPROC)load("glSecondaryColorP3ui");
  glad_glSecondaryColorP3uiv =
      (PFNGLSECONDARYCOLORP3UIVPROC)load("glSecondaryColorP3uiv");
}
static void load_GL_VERSION_4_0(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_0) return;
  glad_glMinSampleShading =
      (PFNGLMINSAMPLESHADINGPROC)load("glMinSampleShading");
  glad_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load("glBlendEquationi");
  glad_glBlendEquationSeparatei =
      (PFNGLBLENDEQUATIONSEPARATEIPROC)load("glBlendEquationSeparatei");
  glad_glBlendFunci = (PFNGLBLENDFUNCIPROC)load("glBlendFunci");
  glad_glBlendFuncSeparatei =
      (PFNGLBLENDFUNCSEPARATEIPROC)load("glBlendFuncSeparatei");
  glad_glDrawArraysIndirect =
      (PFNGLDRAWARRAYSINDIRECTPROC)load("glDrawArraysIndirect");
  glad_glDrawElementsIndirect =
      (PFNGLDRAWELEMENTSINDIRECTPROC)load("glDrawElementsIndirect");
  glad_glUniform1d = (PFNGLUNIFORM1DPROC)load("glUniform1d");
  glad_glUniform2d = (PFNGLUNIFORM2DPROC)load("glUniform2d");
  glad_glUniform3d = (PFNGLUNIFORM3DPROC)load("glUniform3d");
  glad_glUniform4d = (PFNGLUNIFORM4DPROC)load("glUniform4d");
  glad_glUniform1dv = (PFNGLUNIFORM1DVPROC)load("glUniform1dv");
  glad_glUniform2dv = (PFNGLUNIFORM2DVPROC)load("glUniform2dv");
  glad_glUniform3dv = (PFNGLUNIFORM3DVPROC)load("glUniform3dv");
  glad_glUniform4dv = (PFNGLUNIFORM4DVPROC)load("glUniform4dv");
  glad_glUniformMatrix2dv =
      (PFNGLUNIFORMMATRIX2DVPROC)load("glUniformMatrix2dv");
  glad_glUniformMatrix3dv =
      (PFNGLUNIFORMMATRIX3DVPROC)load("glUniformMatrix3dv");
  glad_glUniformMatrix4dv =
      (PFNGLUNIFORMMATRIX4DVPROC)load("glUniformMatrix4dv");
  glad_glUniformMatrix2x3dv =
      (PFNGLUNIFORMMATRIX2X3DVPROC)load("glUniformMatrix2x3dv");
  glad_glUniformMatrix2x4dv =
      (PFNGLUNIFORMMATRIX2X4DVPROC)load("glUniformMatrix2x4dv");
  glad_glUniformMatrix3x2dv =
      (PFNGLUNIFORMMATRIX3X2DVPROC)load("glUniformMatrix3x2dv");
  glad_glUniformMatrix3x4dv =
      (PFNGLUNIFORMMATRIX3X4DVPROC)load("glUniformMatrix3x4dv");
  glad_glUniformMatrix4x2dv =
      (PFNGLUNIFORMMATRIX4X2DVPROC)load("glUniformMatrix4x2dv");
  glad_glUniformMatrix4x3dv =
      (PFNGLUNIFORMMATRIX4X3DVPROC)load("glUniformMatrix4x3dv");
  glad_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load("glGetUniformdv");
  glad_glGetSubroutineUniformLocation =
      (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load(
          "glGetSubroutineUniformLocation");
  glad_glGetSubroutineIndex =
      (PFNGLGETSUBROUTINEINDEXPROC)load("glGetSubroutineIndex");
  glad_glGetActiveSubroutineUniformiv =
      (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load(
          "glGetActiveSubroutineUniformiv");
  glad_glGetActiveSubroutineUniformName =
      (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)load(
          "glGetActiveSubroutineUniformName");
  glad_glGetActiveSubroutineName =
      (PFNGLGETACTIVESUBROUTINENAMEPROC)load("glGetActiveSubroutineName");
  glad_glUniformSubroutinesuiv =
      (PFNGLUNIFORMSUBROUTINESUIVPROC)load("glUniformSubroutinesuiv");
  glad_glGetUniformSubroutineuiv =
      (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load("glGetUniformSubroutineuiv");
  glad_glGetProgramStageiv =
      (PFNGLGETPROGRAMSTAGEIVPROC)load("glGetProgramStageiv");
  glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load("glPatchParameteri");
  glad_glPatchParameterfv =
      (PFNGLPATCHPARAMETERFVPROC)load("glPatchParameterfv");
  glad_glBindTransformFeedback =
      (PFNGLBINDTRANSFORMFEEDBACKPROC)load("glBindTransformFeedback");
  glad_glDeleteTransformFeedbacks =
      (PFNGLDELETETRANSFORMFEEDBACKSPROC)load("glDeleteTransformFeedbacks");
  glad_glGenTransformFeedbacks =
      (PFNGLGENTRANSFORMFEEDBACKSPROC)load("glGenTransformFeedbacks");
  glad_glIsTransformFeedback =
      (PFNGLISTRANSFORMFEEDBACKPROC)load("glIsTransformFeedback");
  glad_glPauseTransformFeedback =
      (PFNGLPAUSETRANSFORMFEEDBACKPROC)load("glPauseTransformFeedback");
  glad_glResumeTransformFeedback =
      (PFNGLRESUMETRANSFORMFEEDBACKPROC)load("glResumeTransformFeedback");
  glad_glDrawTransformFeedback =
      (PFNGLDRAWTRANSFORMFEEDBACKPROC)load("glDrawTransformFeedback");
  glad_glDrawTransformFeedbackStream =
      (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load(
          "glDrawTransformFeedbackStream");
  glad_glBeginQueryIndexed =
      (PFNGLBEGINQUERYINDEXEDPROC)load("glBeginQueryIndexed");
  glad_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load("glEndQueryIndexed");
  glad_glGetQueryIndexediv =
      (PFNGLGETQUERYINDEXEDIVPROC)load("glGetQueryIndexediv");
}
static void load_GL_VERSION_4_1(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_1) return;
  glad_glReleaseShaderCompiler =
      (PFNGLRELEASESHADERCOMPILERPROC)load("glReleaseShaderCompiler");
  glad_glShaderBinary = (PFNGLSHADERBINARYPROC)load("glShaderBinary");
  glad_glGetShaderPrecisionFormat =
      (PFNGLGETSHADERPRECISIONFORMATPROC)load("glGetShaderPrecisionFormat");
  glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load("glDepthRangef");
  glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load("glClearDepthf");
  glad_glGetProgramBinary =
      (PFNGLGETPROGRAMBINARYPROC)load("glGetProgramBinary");
  glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load("glProgramBinary");
  glad_glProgramParameteri =
      (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
  glad_glUseProgramStages =
      (PFNGLUSEPROGRAMSTAGESPROC)load("glUseProgramStages");
  glad_glActiveShaderProgram =
      (PFNGLACTIVESHADERPROGRAMPROC)load("glActiveShaderProgram");
  glad_glCreateShaderProgramv =
      (PFNGLCREATESHADERPROGRAMVPROC)load("glCreateShaderProgramv");
  glad_glBindProgramPipeline =
      (PFNGLBINDPROGRAMPIPELINEPROC)load("glBindProgramPipeline");
  glad_glDeleteProgramPipelines =
      (PFNGLDELETEPROGRAMPIPELINESPROC)load("glDeleteProgramPipelines");
  glad_glGenProgramPipelines =
      (PFNGLGENPROGRAMPIPELINESPROC)load("glGenProgramPipelines");
  glad_glIsProgramPipeline =
      (PFNGLISPROGRAMPIPELINEPROC)load("glIsProgramPipeline");
  glad_glGetProgramPipelineiv =
      (PFNGLGETPROGRAMPIPELINEIVPROC)load("glGetProgramPipelineiv");
  glad_glProgramParameteri =
      (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
  glad_glProgramUniform1i =
      (PFNGLPROGRAMUNIFORM1IPROC)load("glProgramUniform1i");
  glad_glProgramUniform1iv =
      (PFNGLPROGRAMUNIFORM1IVPROC)load("glProgramUniform1iv");
  glad_glProgramUniform1f =
      (PFNGLPROGRAMUNIFORM1FPROC)load("glProgramUniform1f");
  glad_glProgramUniform1fv =
      (PFNGLPROGRAMUNIFORM1FVPROC)load("glProgramUniform1fv");
  glad_glProgramUniform1d =
      (PFNGLPROGRAMUNIFORM1DPROC)load("glProgramUniform1d");
  glad_glProgramUniform1dv =
      (PFNGLPROGRAMUNIFORM1DVPROC)load("glProgramUniform1dv");
  glad_glProgramUniform1ui =
      (PFNGLPROGRAMUNIFORM1UIPROC)load("glProgramUniform1ui");
  glad_glProgramUniform1uiv =
      (PFNGLPROGRAMUNIFORM1UIVPROC)load("glProgramUniform1uiv");
  glad_glProgramUniform2i =
      (PFNGLPROGRAMUNIFORM2IPROC)load("glProgramUniform2i");
  glad_glProgramUniform2iv =
      (PFNGLPROGRAMUNIFORM2IVPROC)load("glProgramUniform2iv");
  glad_glProgramUniform2f =
      (PFNGLPROGRAMUNIFORM2FPROC)load("glProgramUniform2f");
  glad_glProgramUniform2fv =
      (PFNGLPROGRAMUNIFORM2FVPROC)load("glProgramUniform2fv");
  glad_glProgramUniform2d =
      (PFNGLPROGRAMUNIFORM2DPROC)load("glProgramUniform2d");
  glad_glProgramUniform2dv =
      (PFNGLPROGRAMUNIFORM2DVPROC)load("glProgramUniform2dv");
  glad_glProgramUniform2ui =
      (PFNGLPROGRAMUNIFORM2UIPROC)load("glProgramUniform2ui");
  glad_glProgramUniform2uiv =
      (PFNGLPROGRAMUNIFORM2UIVPROC)load("glProgramUniform2uiv");
  glad_glProgramUniform3i =
      (PFNGLPROGRAMUNIFORM3IPROC)load("glProgramUniform3i");
  glad_glProgramUniform3iv =
      (PFNGLPROGRAMUNIFORM3IVPROC)load("glProgramUniform3iv");
  glad_glProgramUniform3f =
      (PFNGLPROGRAMUNIFORM3FPROC)load("glProgramUniform3f");
  glad_glProgramUniform3fv =
      (PFNGLPROGRAMUNIFORM3FVPROC)load("glProgramUniform3fv");
  glad_glProgramUniform3d =
      (PFNGLPROGRAMUNIFORM3DPROC)load("glProgramUniform3d");
  glad_glProgramUniform3dv =
      (PFNGLPROGRAMUNIFORM3DVPROC)load("glProgramUniform3dv");
  glad_glProgramUniform3ui =
      (PFNGLPROGRAMUNIFORM3UIPROC)load("glProgramUniform3ui");
  glad_glProgramUniform3uiv =
      (PFNGLPROGRAMUNIFORM3UIVPROC)load("glProgramUniform3uiv");
  glad_glProgramUniform4i =
      (PFNGLPROGRAMUNIFORM4IPROC)load("glProgramUniform4i");
  glad_glProgramUniform4iv =
      (PFNGLPROGRAMUNIFORM4IVPROC)load("glProgramUniform4iv");
  glad_glProgramUniform4f =
      (PFNGLPROGRAMUNIFORM4FPROC)load("glProgramUniform4f");
  glad_glProgramUniform4fv =
      (PFNGLPROGRAMUNIFORM4FVPROC)load("glProgramUniform4fv");
  glad_glProgramUniform4d =
      (PFNGLPROGRAMUNIFORM4DPROC)load("glProgramUniform4d");
  glad_glProgramUniform4dv =
      (PFNGLPROGRAMUNIFORM4DVPROC)load("glProgramUniform4dv");
  glad_glProgramUniform4ui =
      (PFNGLPROGRAMUNIFORM4UIPROC)load("glProgramUniform4ui");
  glad_glProgramUniform4uiv =
      (PFNGLPROGRAMUNIFORM4UIVPROC)load("glProgramUniform4uiv");
  glad_glProgramUniformMatrix2fv =
      (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load("glProgramUniformMatrix2fv");
  glad_glProgramUniformMatrix3fv =
      (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load("glProgramUniformMatrix3fv");
  glad_glProgramUniformMatrix4fv =
      (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load("glProgramUniformMatrix4fv");
  glad_glProgramUniformMatrix2dv =
      (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load("glProgramUniformMatrix2dv");
  glad_glProgramUniformMatrix3dv =
      (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load("glProgramUniformMatrix3dv");
  glad_glProgramUniformMatrix4dv =
      (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load("glProgramUniformMatrix4dv");
  glad_glProgramUniformMatrix2x3fv =
      (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load("glProgramUniformMatrix2x3fv");
  glad_glProgramUniformMatrix3x2fv =
      (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load("glProgramUniformMatrix3x2fv");
  glad_glProgramUniformMatrix2x4fv =
      (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load("glProgramUniformMatrix2x4fv");
  glad_glProgramUniformMatrix4x2fv =
      (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load("glProgramUniformMatrix4x2fv");
  glad_glProgramUniformMatrix3x4fv =
      (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load("glProgramUniformMatrix3x4fv");
  glad_glProgramUniformMatrix4x3fv =
      (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load("glProgramUniformMatrix4x3fv");
  glad_glProgramUniformMatrix2x3dv =
      (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load("glProgramUniformMatrix2x3dv");
  glad_glProgramUniformMatrix3x2dv =
      (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load("glProgramUniformMatrix3x2dv");
  glad_glProgramUniformMatrix2x4dv =
      (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load("glProgramUniformMatrix2x4dv");
  glad_glProgramUniformMatrix4x2dv =
      (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load("glProgramUniformMatrix4x2dv");
  glad_glProgramUniformMatrix3x4dv =
      (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load("glProgramUniformMatrix3x4dv");
  glad_glProgramUniformMatrix4x3dv =
      (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load("glProgramUniformMatrix4x3dv");
  glad_glValidateProgramPipeline =
      (PFNGLVALIDATEPROGRAMPIPELINEPROC)load("glValidateProgramPipeline");
  glad_glGetProgramPipelineInfoLog =
      (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load("glGetProgramPipelineInfoLog");
  glad_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load("glVertexAttribL1d");
  glad_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load("glVertexAttribL2d");
  glad_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load("glVertexAttribL3d");
  glad_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load("glVertexAttribL4d");
  glad_glVertexAttribL1dv =
      (PFNGLVERTEXATTRIBL1DVPROC)load("glVertexAttribL1dv");
  glad_glVertexAttribL2dv =
      (PFNGLVERTEXATTRIBL2DVPROC)load("glVertexAttribL2dv");
  glad_glVertexAttribL3dv =
      (PFNGLVERTEXATTRIBL3DVPROC)load("glVertexAttribL3dv");
  glad_glVertexAttribL4dv =
      (PFNGLVERTEXATTRIBL4DVPROC)load("glVertexAttribL4dv");
  glad_glVertexAttribLPointer =
      (PFNGLVERTEXATTRIBLPOINTERPROC)load("glVertexAttribLPointer");
  glad_glGetVertexAttribLdv =
      (PFNGLGETVERTEXATTRIBLDVPROC)load("glGetVertexAttribLdv");
  glad_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load("glViewportArrayv");
  glad_glViewportIndexedf =
      (PFNGLVIEWPORTINDEXEDFPROC)load("glViewportIndexedf");
  glad_glViewportIndexedfv =
      (PFNGLVIEWPORTINDEXEDFVPROC)load("glViewportIndexedfv");
  glad_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)load("glScissorArrayv");
  glad_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)load("glScissorIndexed");
  glad_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load("glScissorIndexedv");
  glad_glDepthRangeArrayv =
      (PFNGLDEPTHRANGEARRAYVPROC)load("glDepthRangeArrayv");
  glad_glDepthRangeIndexed =
      (PFNGLDEPTHRANGEINDEXEDPROC)load("glDepthRangeIndexed");
  glad_glGetFloati_v = (PFNGLGETFLOATI_VPROC)load("glGetFloati_v");
  glad_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load("glGetDoublei_v");
}
static void load_GL_VERSION_4_2(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_2) return;
  glad_glDrawArraysInstancedBaseInstance =
      (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)load(
          "glDrawArraysInstancedBaseInstance");
  glad_glDrawElementsInstancedBaseInstance =
      (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)load(
          "glDrawElementsInstancedBaseInstance");
  glad_glDrawElementsInstancedBaseVertexBaseInstance =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)load(
          "glDrawElementsInstancedBaseVertexBaseInstance");
  glad_glGetInternalformativ =
      (PFNGLGETINTERNALFORMATIVPROC)load("glGetInternalformativ");
  glad_glGetActiveAtomicCounterBufferiv =
      (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)load(
          "glGetActiveAtomicCounterBufferiv");
  glad_glBindImageTexture =
      (PFNGLBINDIMAGETEXTUREPROC)load("glBindImageTexture");
  glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load("glMemoryBarrier");
  glad_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)load("glTexStorage1D");
  glad_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)load("glTexStorage2D");
  glad_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)load("glTexStorage3D");
  glad_glDrawTransformFeedbackInstanced =
      (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)load(
          "glDrawTransformFeedbackInstanced");
  glad_glDrawTransformFeedbackStreamInstanced =
      (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)load(
          "glDrawTransformFeedbackStreamInstanced");
}
static void load_GL_VERSION_4_3(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_3) return;
  glad_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)load("glClearBufferData");
  glad_glClearBufferSubData =
      (PFNGLCLEARBUFFERSUBDATAPROC)load("glClearBufferSubData");
  glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load("glDispatchCompute");
  glad_glDispatchComputeIndirect =
      (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load("glDispatchComputeIndirect");
  glad_glCopyImageSubData =
      (PFNGLCOPYIMAGESUBDATAPROC)load("glCopyImageSubData");
  glad_glFramebufferParameteri =
      (PFNGLFRAMEBUFFERPARAMETERIPROC)load("glFramebufferParameteri");
  glad_glGetFramebufferParameteriv =
      (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load("glGetFramebufferParameteriv");
  glad_glGetInternalformati64v =
      (PFNGLGETINTERNALFORMATI64VPROC)load("glGetInternalformati64v");
  glad_glInvalidateTexSubImage =
      (PFNGLINVALIDATETEXSUBIMAGEPROC)load("glInvalidateTexSubImage");
  glad_glInvalidateTexImage =
      (PFNGLINVALIDATETEXIMAGEPROC)load("glInvalidateTexImage");
  glad_glInvalidateBufferSubData =
      (PFNGLINVALIDATEBUFFERSUBDATAPROC)load("glInvalidateBufferSubData");
  glad_glInvalidateBufferData =
      (PFNGLINVALIDATEBUFFERDATAPROC)load("glInvalidateBufferData");
  glad_glInvalidateFramebuffer =
      (PFNGLINVALIDATEFRAMEBUFFERPROC)load("glInvalidateFramebuffer");
  glad_glInvalidateSubFramebuffer =
      (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load("glInvalidateSubFramebuffer");
  glad_glMultiDrawArraysIndirect =
      (PFNGLMULTIDRAWARRAYSINDIRECTPROC)load("glMultiDrawArraysIndirect");
  glad_glMultiDrawElementsIndirect =
      (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)load("glMultiDrawElementsIndirect");
  glad_glGetProgramInterfaceiv =
      (PFNGLGETPROGRAMINTERFACEIVPROC)load("glGetProgramInterfaceiv");
  glad_glGetProgramResourceIndex =
      (PFNGLGETPROGRAMRESOURCEINDEXPROC)load("glGetProgramResourceIndex");
  glad_glGetProgramResourceName =
      (PFNGLGETPROGRAMRESOURCENAMEPROC)load("glGetProgramResourceName");
  glad_glGetProgramResourceiv =
      (PFNGLGETPROGRAMRESOURCEIVPROC)load("glGetProgramResourceiv");
  glad_glGetProgramResourceLocation =
      (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load("glGetProgramResourceLocation");
  glad_glGetProgramResourceLocationIndex =
      (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)load(
          "glGetProgramResourceLocationIndex");
  glad_glShaderStorageBlockBinding =
      (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)load("glShaderStorageBlockBinding");
  glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load("glTexBufferRange");
  glad_glTexStorage2DMultisample =
      (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load("glTexStorage2DMultisample");
  glad_glTexStorage3DMultisample =
      (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load("glTexStorage3DMultisample");
  glad_glTextureView = (PFNGLTEXTUREVIEWPROC)load("glTextureView");
  glad_glBindVertexBuffer =
      (PFNGLBINDVERTEXBUFFERPROC)load("glBindVertexBuffer");
  glad_glVertexAttribFormat =
      (PFNGLVERTEXATTRIBFORMATPROC)load("glVertexAttribFormat");
  glad_glVertexAttribIFormat =
      (PFNGLVERTEXATTRIBIFORMATPROC)load("glVertexAttribIFormat");
  glad_glVertexAttribLFormat =
      (PFNGLVERTEXATTRIBLFORMATPROC)load("glVertexAttribLFormat");
  glad_glVertexAttribBinding =
      (PFNGLVERTEXATTRIBBINDINGPROC)load("glVertexAttribBinding");
  glad_glVertexBindingDivisor =
      (PFNGLVERTEXBINDINGDIVISORPROC)load("glVertexBindingDivisor");
  glad_glDebugMessageControl =
      (PFNGLDEBUGMESSAGECONTROLPROC)load("glDebugMessageControl");
  glad_glDebugMessageInsert =
      (PFNGLDEBUGMESSAGEINSERTPROC)load("glDebugMessageInsert");
  glad_glDebugMessageCallback =
      (PFNGLDEBUGMESSAGECALLBACKPROC)load("glDebugMessageCallback");
  glad_glGetDebugMessageLog =
      (PFNGLGETDEBUGMESSAGELOGPROC)load("glGetDebugMessageLog");
  glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load("glPushDebugGroup");
  glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load("glPopDebugGroup");
  glad_glObjectLabel = (PFNGLOBJECTLABELPROC)load("glObjectLabel");
  glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load("glGetObjectLabel");
  glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load("glObjectPtrLabel");
  glad_glGetObjectPtrLabel =
      (PFNGLGETOBJECTPTRLABELPROC)load("glGetObjectPtrLabel");
  glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
}
static void load_GL_VERSION_4_4(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_4) return;
  glad_glBufferStorage = (PFNGLBUFFERSTORAGEPROC)load("glBufferStorage");
  glad_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)load("glClearTexImage");
  glad_glClearTexSubImage =
      (PFNGLCLEARTEXSUBIMAGEPROC)load("glClearTexSubImage");
  glad_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)load("glBindBuffersBase");
  glad_glBindBuffersRange =
      (PFNGLBINDBUFFERSRANGEPROC)load("glBindBuffersRange");
  glad_glBindTextures = (PFNGLBINDTEXTURESPROC)load("glBindTextures");
  glad_glBindSamplers = (PFNGLBINDSAMPLERSPROC)load("glBindSamplers");
  glad_glBindImageTextures =
      (PFNGLBINDIMAGETEXTURESPROC)load("glBindImageTextures");
  glad_glBindVertexBuffers =
      (PFNGLBINDVERTEXBUFFERSPROC)load("glBindVertexBuffers");
}
static void load_GL_VERSION_4_5(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_5) return;
  glad_glClipControl = (PFNGLCLIPCONTROLPROC)load("glClipControl");
  glad_glCreateTransformFeedbacks =
      (PFNGLCREATETRANSFORMFEEDBACKSPROC)load("glCreateTransformFeedbacks");
  glad_glTransformFeedbackBufferBase =
      (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)load(
          "glTransformFeedbackBufferBase");
  glad_glTransformFeedbackBufferRange =
      (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)load(
          "glTransformFeedbackBufferRange");
  glad_glGetTransformFeedbackiv =
      (PFNGLGETTRANSFORMFEEDBACKIVPROC)load("glGetTransformFeedbackiv");
  glad_glGetTransformFeedbacki_v =
      (PFNGLGETTRANSFORMFEEDBACKI_VPROC)load("glGetTransformFeedbacki_v");
  glad_glGetTransformFeedbacki64_v =
      (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)load("glGetTransformFeedbacki64_v");
  glad_glCreateBuffers = (PFNGLCREATEBUFFERSPROC)load("glCreateBuffers");
  glad_glNamedBufferStorage =
      (PFNGLNAMEDBUFFERSTORAGEPROC)load("glNamedBufferStorage");
  glad_glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC)load("glNamedBufferData");
  glad_glNamedBufferSubData =
      (PFNGLNAMEDBUFFERSUBDATAPROC)load("glNamedBufferSubData");
  glad_glCopyNamedBufferSubData =
      (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)load("glCopyNamedBufferSubData");
  glad_glClearNamedBufferData =
      (PFNGLCLEARNAMEDBUFFERDATAPROC)load("glClearNamedBufferData");
  glad_glClearNamedBufferSubData =
      (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)load("glClearNamedBufferSubData");
  glad_glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC)load("glMapNamedBuffer");
  glad_glMapNamedBufferRange =
      (PFNGLMAPNAMEDBUFFERRANGEPROC)load("glMapNamedBufferRange");
  glad_glUnmapNamedBuffer =
      (PFNGLUNMAPNAMEDBUFFERPROC)load("glUnmapNamedBuffer");
  glad_glFlushMappedNamedBufferRange =
      (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)load(
          "glFlushMappedNamedBufferRange");
  glad_glGetNamedBufferParameteriv =
      (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)load("glGetNamedBufferParameteriv");
  glad_glGetNamedBufferParameteri64v =
      (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)load(
          "glGetNamedBufferParameteri64v");
  glad_glGetNamedBufferPointerv =
      (PFNGLGETNAMEDBUFFERPOINTERVPROC)load("glGetNamedBufferPointerv");
  glad_glGetNamedBufferSubData =
      (PFNGLGETNAMEDBUFFERSUBDATAPROC)load("glGetNamedBufferSubData");
  glad_glCreateFramebuffers =
      (PFNGLCREATEFRAMEBUFFERSPROC)load("glCreateFramebuffers");
  glad_glNamedFramebufferRenderbuffer =
      (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)load(
          "glNamedFramebufferRenderbuffer");
  glad_glNamedFramebufferParameteri =
      (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)load("glNamedFramebufferParameteri");
  glad_glNamedFramebufferTexture =
      (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)load("glNamedFramebufferTexture");
  glad_glNamedFramebufferTextureLayer =
      (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)load(
          "glNamedFramebufferTextureLayer");
  glad_glNamedFramebufferDrawBuffer =
      (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)load("glNamedFramebufferDrawBuffer");
  glad_glNamedFramebufferDrawBuffers =
      (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)load(
          "glNamedFramebufferDrawBuffers");
  glad_glNamedFramebufferReadBuffer =
      (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)load("glNamedFramebufferReadBuffer");
  glad_glInvalidateNamedFramebufferData =
      (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)load(
          "glInvalidateNamedFramebufferData");
  glad_glInvalidateNamedFramebufferSubData =
      (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)load(
          "glInvalidateNamedFramebufferSubData");
  glad_glClearNamedFramebufferiv =
      (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)load("glClearNamedFramebufferiv");
  glad_glClearNamedFramebufferuiv =
      (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)load("glClearNamedFramebufferuiv");
  glad_glClearNamedFramebufferfv =
      (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)load("glClearNamedFramebufferfv");
  glad_glClearNamedFramebufferfi =
      (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)load("glClearNamedFramebufferfi");
  glad_glBlitNamedFramebuffer =
      (PFNGLBLITNAMEDFRAMEBUFFERPROC)load("glBlitNamedFramebuffer");
  glad_glCheckNamedFramebufferStatus =
      (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)load(
          "glCheckNamedFramebufferStatus");
  glad_glGetNamedFramebufferParameteriv =
      (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)load(
          "glGetNamedFramebufferParameteriv");
  glad_glGetNamedFramebufferAttachmentParameteriv =
      (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load(
          "glGetNamedFramebufferAttachmentParameteriv");
  glad_glCreateRenderbuffers =
      (PFNGLCREATERENDERBUFFERSPROC)load("glCreateRenderbuffers");
  glad_glNamedRenderbufferStorage =
      (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)load("glNamedRenderbufferStorage");
  glad_glNamedRenderbufferStorageMultisample =
      (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)load(
          "glNamedRenderbufferStorageMultisample");
  glad_glGetNamedRenderbufferParameteriv =
      (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)load(
          "glGetNamedRenderbufferParameteriv");
  glad_glCreateTextures = (PFNGLCREATETEXTURESPROC)load("glCreateTextures");
  glad_glTextureBuffer = (PFNGLTEXTUREBUFFERPROC)load("glTextureBuffer");
  glad_glTextureBufferRange =
      (PFNGLTEXTUREBUFFERRANGEPROC)load("glTextureBufferRange");
  glad_glTextureStorage1D =
      (PFNGLTEXTURESTORAGE1DPROC)load("glTextureStorage1D");
  glad_glTextureStorage2D =
      (PFNGLTEXTURESTORAGE2DPROC)load("glTextureStorage2D");
  glad_glTextureStorage3D =
      (PFNGLTEXTURESTORAGE3DPROC)load("glTextureStorage3D");
  glad_glTextureStorage2DMultisample =
      (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)load(
          "glTextureStorage2DMultisample");
  glad_glTextureStorage3DMultisample =
      (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)load(
          "glTextureStorage3DMultisample");
  glad_glTextureSubImage1D =
      (PFNGLTEXTURESUBIMAGE1DPROC)load("glTextureSubImage1D");
  glad_glTextureSubImage2D =
      (PFNGLTEXTURESUBIMAGE2DPROC)load("glTextureSubImage2D");
  glad_glTextureSubImage3D =
      (PFNGLTEXTURESUBIMAGE3DPROC)load("glTextureSubImage3D");
  glad_glCompressedTextureSubImage1D =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)load(
          "glCompressedTextureSubImage1D");
  glad_glCompressedTextureSubImage2D =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)load(
          "glCompressedTextureSubImage2D");
  glad_glCompressedTextureSubImage3D =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)load(
          "glCompressedTextureSubImage3D");
  glad_glCopyTextureSubImage1D =
      (PFNGLCOPYTEXTURESUBIMAGE1DPROC)load("glCopyTextureSubImage1D");
  glad_glCopyTextureSubImage2D =
      (PFNGLCOPYTEXTURESUBIMAGE2DPROC)load("glCopyTextureSubImage2D");
  glad_glCopyTextureSubImage3D =
      (PFNGLCOPYTEXTURESUBIMAGE3DPROC)load("glCopyTextureSubImage3D");
  glad_glTextureParameterf =
      (PFNGLTEXTUREPARAMETERFPROC)load("glTextureParameterf");
  glad_glTextureParameterfv =
      (PFNGLTEXTUREPARAMETERFVPROC)load("glTextureParameterfv");
  glad_glTextureParameteri =
      (PFNGLTEXTUREPARAMETERIPROC)load("glTextureParameteri");
  glad_glTextureParameterIiv =
      (PFNGLTEXTUREPARAMETERIIVPROC)load("glTextureParameterIiv");
  glad_glTextureParameterIuiv =
      (PFNGLTEXTUREPARAMETERIUIVPROC)load("glTextureParameterIuiv");
  glad_glTextureParameteriv =
      (PFNGLTEXTUREPARAMETERIVPROC)load("glTextureParameteriv");
  glad_glGenerateTextureMipmap =
      (PFNGLGENERATETEXTUREMIPMAPPROC)load("glGenerateTextureMipmap");
  glad_glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC)load("glBindTextureUnit");
  glad_glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC)load("glGetTextureImage");
  glad_glGetCompressedTextureImage =
      (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)load("glGetCompressedTextureImage");
  glad_glGetTextureLevelParameterfv =
      (PFNGLGETTEXTURELEVELPARAMETERFVPROC)load("glGetTextureLevelParameterfv");
  glad_glGetTextureLevelParameteriv =
      (PFNGLGETTEXTURELEVELPARAMETERIVPROC)load("glGetTextureLevelParameteriv");
  glad_glGetTextureParameterfv =
      (PFNGLGETTEXTUREPARAMETERFVPROC)load("glGetTextureParameterfv");
  glad_glGetTextureParameterIiv =
      (PFNGLGETTEXTUREPARAMETERIIVPROC)load("glGetTextureParameterIiv");
  glad_glGetTextureParameterIuiv =
      (PFNGLGETTEXTUREPARAMETERIUIVPROC)load("glGetTextureParameterIuiv");
  glad_glGetTextureParameteriv =
      (PFNGLGETTEXTUREPARAMETERIVPROC)load("glGetTextureParameteriv");
  glad_glCreateVertexArrays =
      (PFNGLCREATEVERTEXARRAYSPROC)load("glCreateVertexArrays");
  glad_glDisableVertexArrayAttrib =
      (PFNGLDISABLEVERTEXARRAYATTRIBPROC)load("glDisableVertexArrayAttrib");
  glad_glEnableVertexArrayAttrib =
      (PFNGLENABLEVERTEXARRAYATTRIBPROC)load("glEnableVertexArrayAttrib");
  glad_glVertexArrayElementBuffer =
      (PFNGLVERTEXARRAYELEMENTBUFFERPROC)load("glVertexArrayElementBuffer");
  glad_glVertexArrayVertexBuffer =
      (PFNGLVERTEXARRAYVERTEXBUFFERPROC)load("glVertexArrayVertexBuffer");
  glad_glVertexArrayVertexBuffers =
      (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)load("glVertexArrayVertexBuffers");
  glad_glVertexArrayAttribBinding =
      (PFNGLVERTEXARRAYATTRIBBINDINGPROC)load("glVertexArrayAttribBinding");
  glad_glVertexArrayAttribFormat =
      (PFNGLVERTEXARRAYATTRIBFORMATPROC)load("glVertexArrayAttribFormat");
  glad_glVertexArrayAttribIFormat =
      (PFNGLVERTEXARRAYATTRIBIFORMATPROC)load("glVertexArrayAttribIFormat");
  glad_glVertexArrayAttribLFormat =
      (PFNGLVERTEXARRAYATTRIBLFORMATPROC)load("glVertexArrayAttribLFormat");
  glad_glVertexArrayBindingDivisor =
      (PFNGLVERTEXARRAYBINDINGDIVISORPROC)load("glVertexArrayBindingDivisor");
  glad_glGetVertexArrayiv =
      (PFNGLGETVERTEXARRAYIVPROC)load("glGetVertexArrayiv");
  glad_glGetVertexArrayIndexediv =
      (PFNGLGETVERTEXARRAYINDEXEDIVPROC)load("glGetVertexArrayIndexediv");
  glad_glGetVertexArrayIndexed64iv =
      (PFNGLGETVERTEXARRAYINDEXED64IVPROC)load("glGetVertexArrayIndexed64iv");
  glad_glCreateSamplers = (PFNGLCREATESAMPLERSPROC)load("glCreateSamplers");
  glad_glCreateProgramPipelines =
      (PFNGLCREATEPROGRAMPIPELINESPROC)load("glCreateProgramPipelines");
  glad_glCreateQueries = (PFNGLCREATEQUERIESPROC)load("glCreateQueries");
  glad_glGetQueryBufferObjecti64v =
      (PFNGLGETQUERYBUFFEROBJECTI64VPROC)load("glGetQueryBufferObjecti64v");
  glad_glGetQueryBufferObjectiv =
      (PFNGLGETQUERYBUFFEROBJECTIVPROC)load("glGetQueryBufferObjectiv");
  glad_glGetQueryBufferObjectui64v =
      (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)load("glGetQueryBufferObjectui64v");
  glad_glGetQueryBufferObjectuiv =
      (PFNGLGETQUERYBUFFEROBJECTUIVPROC)load("glGetQueryBufferObjectuiv");
  glad_glMemoryBarrierByRegion =
      (PFNGLMEMORYBARRIERBYREGIONPROC)load("glMemoryBarrierByRegion");
  glad_glGetTextureSubImage =
      (PFNGLGETTEXTURESUBIMAGEPROC)load("glGetTextureSubImage");
  glad_glGetCompressedTextureSubImage =
      (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)load(
          "glGetCompressedTextureSubImage");
  glad_glGetGraphicsResetStatus =
      (PFNGLGETGRAPHICSRESETSTATUSPROC)load("glGetGraphicsResetStatus");
  glad_glGetnCompressedTexImage =
      (PFNGLGETNCOMPRESSEDTEXIMAGEPROC)load("glGetnCompressedTexImage");
  glad_glGetnTexImage = (PFNGLGETNTEXIMAGEPROC)load("glGetnTexImage");
  glad_glGetnUniformdv = (PFNGLGETNUNIFORMDVPROC)load("glGetnUniformdv");
  glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)load("glGetnUniformfv");
  glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)load("glGetnUniformiv");
  glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)load("glGetnUniformuiv");
  glad_glReadnPixels = (PFNGLREADNPIXELSPROC)load("glReadnPixels");
  glad_glGetnMapdv = (PFNGLGETNMAPDVPROC)load("glGetnMapdv");
  glad_glGetnMapfv = (PFNGLGETNMAPFVPROC)load("glGetnMapfv");
  glad_glGetnMapiv = (PFNGLGETNMAPIVPROC)load("glGetnMapiv");
  glad_glGetnPixelMapfv = (PFNGLGETNPIXELMAPFVPROC)load("glGetnPixelMapfv");
  glad_glGetnPixelMapuiv = (PFNGLGETNPIXELMAPUIVPROC)load("glGetnPixelMapuiv");
  glad_glGetnPixelMapusv = (PFNGLGETNPIXELMAPUSVPROC)load("glGetnPixelMapusv");
  glad_glGetnPolygonStipple =
      (PFNGLGETNPOLYGONSTIPPLEPROC)load("glGetnPolygonStipple");
  glad_glGetnColorTable = (PFNGLGETNCOLORTABLEPROC)load("glGetnColorTable");
  glad_glGetnConvolutionFilter =
      (PFNGLGETNCONVOLUTIONFILTERPROC)load("glGetnConvolutionFilter");
  glad_glGetnSeparableFilter =
      (PFNGLGETNSEPARABLEFILTERPROC)load("glGetnSeparableFilter");
  glad_glGetnHistogram = (PFNGLGETNHISTOGRAMPROC)load("glGetnHistogram");
  glad_glGetnMinmax = (PFNGLGETNMINMAXPROC)load("glGetnMinmax");
  glad_glTextureBarrier = (PFNGLTEXTUREBARRIERPROC)load("glTextureBarrier");
}
static void load_GL_VERSION_4_6(GLADloadproc load) {
  if (!GLAD_GL_VERSION_4_6) return;
  glad_glSpecializeShader =
      (PFNGLSPECIALIZESHADERPROC)load("glSpecializeShader");
  glad_glMultiDrawArraysIndirectCount =
      (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)load(
          "glMultiDrawArraysIndirectCount");
  glad_glMultiDrawElementsIndirectCount =
      (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)load(
          "glMultiDrawElementsIndirectCount");
  glad_glPolygonOffsetClamp =
      (PFNGLPOLYGONOFFSETCLAMPPROC)load("glPolygonOffsetClamp");
}
static void load_GL_EXT_EGL_image_storage(GLADloadproc load) {
  if (!GLAD_GL_EXT_EGL_image_storage) return;
  glad_glEGLImageTargetTexStorageEXT =
      (PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC)load(
          "glEGLImageTargetTexStorageEXT");
  glad_glEGLImageTargetTextureStorageEXT =
      (PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC)load(
          "glEGLImageTargetTextureStorageEXT");
}
static void load_GL_EXT_bindable_uniform(GLADloadproc load) {
  if (!GLAD_GL_EXT_bindable_uniform) return;
  glad_glUniformBufferEXT =
      (PFNGLUNIFORMBUFFEREXTPROC)load("glUniformBufferEXT");
  glad_glGetUniformBufferSizeEXT =
      (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)load("glGetUniformBufferSizeEXT");
  glad_glGetUniformOffsetEXT =
      (PFNGLGETUNIFORMOFFSETEXTPROC)load("glGetUniformOffsetEXT");
}
static void load_GL_EXT_blend_color(GLADloadproc load) {
  if (!GLAD_GL_EXT_blend_color) return;
  glad_glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)load("glBlendColorEXT");
}
static void load_GL_EXT_blend_equation_separate(GLADloadproc load) {
  if (!GLAD_GL_EXT_blend_equation_separate) return;
  glad_glBlendEquationSeparateEXT =
      (PFNGLBLENDEQUATIONSEPARATEEXTPROC)load("glBlendEquationSeparateEXT");
}
static void load_GL_EXT_blend_func_separate(GLADloadproc load) {
  if (!GLAD_GL_EXT_blend_func_separate) return;
  glad_glBlendFuncSeparateEXT =
      (PFNGLBLENDFUNCSEPARATEEXTPROC)load("glBlendFuncSeparateEXT");
}
static void load_GL_EXT_blend_minmax(GLADloadproc load) {
  if (!GLAD_GL_EXT_blend_minmax) return;
  glad_glBlendEquationEXT =
      (PFNGLBLENDEQUATIONEXTPROC)load("glBlendEquationEXT");
}
static void load_GL_EXT_color_subtable(GLADloadproc load) {
  if (!GLAD_GL_EXT_color_subtable) return;
  glad_glColorSubTableEXT =
      (PFNGLCOLORSUBTABLEEXTPROC)load("glColorSubTableEXT");
  glad_glCopyColorSubTableEXT =
      (PFNGLCOPYCOLORSUBTABLEEXTPROC)load("glCopyColorSubTableEXT");
}
static void load_GL_EXT_compiled_vertex_array(GLADloadproc load) {
  if (!GLAD_GL_EXT_compiled_vertex_array) return;
  glad_glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)load("glLockArraysEXT");
  glad_glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)load("glUnlockArraysEXT");
}
static void load_GL_EXT_convolution(GLADloadproc load) {
  if (!GLAD_GL_EXT_convolution) return;
  glad_glConvolutionFilter1DEXT =
      (PFNGLCONVOLUTIONFILTER1DEXTPROC)load("glConvolutionFilter1DEXT");
  glad_glConvolutionFilter2DEXT =
      (PFNGLCONVOLUTIONFILTER2DEXTPROC)load("glConvolutionFilter2DEXT");
  glad_glConvolutionParameterfEXT =
      (PFNGLCONVOLUTIONPARAMETERFEXTPROC)load("glConvolutionParameterfEXT");
  glad_glConvolutionParameterfvEXT =
      (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)load("glConvolutionParameterfvEXT");
  glad_glConvolutionParameteriEXT =
      (PFNGLCONVOLUTIONPARAMETERIEXTPROC)load("glConvolutionParameteriEXT");
  glad_glConvolutionParameterivEXT =
      (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)load("glConvolutionParameterivEXT");
  glad_glCopyConvolutionFilter1DEXT =
      (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)load("glCopyConvolutionFilter1DEXT");
  glad_glCopyConvolutionFilter2DEXT =
      (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)load("glCopyConvolutionFilter2DEXT");
  glad_glGetConvolutionFilterEXT =
      (PFNGLGETCONVOLUTIONFILTEREXTPROC)load("glGetConvolutionFilterEXT");
  glad_glGetConvolutionParameterfvEXT =
      (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)load(
          "glGetConvolutionParameterfvEXT");
  glad_glGetConvolutionParameterivEXT =
      (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)load(
          "glGetConvolutionParameterivEXT");
  glad_glGetSeparableFilterEXT =
      (PFNGLGETSEPARABLEFILTEREXTPROC)load("glGetSeparableFilterEXT");
  glad_glSeparableFilter2DEXT =
      (PFNGLSEPARABLEFILTER2DEXTPROC)load("glSeparableFilter2DEXT");
}
static void load_GL_EXT_coordinate_frame(GLADloadproc load) {
  if (!GLAD_GL_EXT_coordinate_frame) return;
  glad_glTangent3bEXT = (PFNGLTANGENT3BEXTPROC)load("glTangent3bEXT");
  glad_glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC)load("glTangent3bvEXT");
  glad_glTangent3dEXT = (PFNGLTANGENT3DEXTPROC)load("glTangent3dEXT");
  glad_glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC)load("glTangent3dvEXT");
  glad_glTangent3fEXT = (PFNGLTANGENT3FEXTPROC)load("glTangent3fEXT");
  glad_glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC)load("glTangent3fvEXT");
  glad_glTangent3iEXT = (PFNGLTANGENT3IEXTPROC)load("glTangent3iEXT");
  glad_glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC)load("glTangent3ivEXT");
  glad_glTangent3sEXT = (PFNGLTANGENT3SEXTPROC)load("glTangent3sEXT");
  glad_glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC)load("glTangent3svEXT");
  glad_glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC)load("glBinormal3bEXT");
  glad_glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC)load("glBinormal3bvEXT");
  glad_glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC)load("glBinormal3dEXT");
  glad_glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC)load("glBinormal3dvEXT");
  glad_glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC)load("glBinormal3fEXT");
  glad_glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC)load("glBinormal3fvEXT");
  glad_glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC)load("glBinormal3iEXT");
  glad_glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC)load("glBinormal3ivEXT");
  glad_glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC)load("glBinormal3sEXT");
  glad_glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC)load("glBinormal3svEXT");
  glad_glTangentPointerEXT =
      (PFNGLTANGENTPOINTEREXTPROC)load("glTangentPointerEXT");
  glad_glBinormalPointerEXT =
      (PFNGLBINORMALPOINTEREXTPROC)load("glBinormalPointerEXT");
}
static void load_GL_EXT_copy_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_copy_texture) return;
  glad_glCopyTexImage1DEXT =
      (PFNGLCOPYTEXIMAGE1DEXTPROC)load("glCopyTexImage1DEXT");
  glad_glCopyTexImage2DEXT =
      (PFNGLCOPYTEXIMAGE2DEXTPROC)load("glCopyTexImage2DEXT");
  glad_glCopyTexSubImage1DEXT =
      (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)load("glCopyTexSubImage1DEXT");
  glad_glCopyTexSubImage2DEXT =
      (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)load("glCopyTexSubImage2DEXT");
  glad_glCopyTexSubImage3DEXT =
      (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)load("glCopyTexSubImage3DEXT");
}
static void load_GL_EXT_cull_vertex(GLADloadproc load) {
  if (!GLAD_GL_EXT_cull_vertex) return;
  glad_glCullParameterdvEXT =
      (PFNGLCULLPARAMETERDVEXTPROC)load("glCullParameterdvEXT");
  glad_glCullParameterfvEXT =
      (PFNGLCULLPARAMETERFVEXTPROC)load("glCullParameterfvEXT");
}
static void load_GL_EXT_debug_label(GLADloadproc load) {
  if (!GLAD_GL_EXT_debug_label) return;
  glad_glLabelObjectEXT = (PFNGLLABELOBJECTEXTPROC)load("glLabelObjectEXT");
  glad_glGetObjectLabelEXT =
      (PFNGLGETOBJECTLABELEXTPROC)load("glGetObjectLabelEXT");
}
static void load_GL_EXT_debug_marker(GLADloadproc load) {
  if (!GLAD_GL_EXT_debug_marker) return;
  glad_glInsertEventMarkerEXT =
      (PFNGLINSERTEVENTMARKEREXTPROC)load("glInsertEventMarkerEXT");
  glad_glPushGroupMarkerEXT =
      (PFNGLPUSHGROUPMARKEREXTPROC)load("glPushGroupMarkerEXT");
  glad_glPopGroupMarkerEXT =
      (PFNGLPOPGROUPMARKEREXTPROC)load("glPopGroupMarkerEXT");
}
static void load_GL_EXT_depth_bounds_test(GLADloadproc load) {
  if (!GLAD_GL_EXT_depth_bounds_test) return;
  glad_glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)load("glDepthBoundsEXT");
}
static void load_GL_EXT_direct_state_access(GLADloadproc load) {
  if (!GLAD_GL_EXT_direct_state_access) return;
  glad_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)load("glMatrixLoadfEXT");
  glad_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)load("glMatrixLoaddEXT");
  glad_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)load("glMatrixMultfEXT");
  glad_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)load("glMatrixMultdEXT");
  glad_glMatrixLoadIdentityEXT =
      (PFNGLMATRIXLOADIDENTITYEXTPROC)load("glMatrixLoadIdentityEXT");
  glad_glMatrixRotatefEXT =
      (PFNGLMATRIXROTATEFEXTPROC)load("glMatrixRotatefEXT");
  glad_glMatrixRotatedEXT =
      (PFNGLMATRIXROTATEDEXTPROC)load("glMatrixRotatedEXT");
  glad_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)load("glMatrixScalefEXT");
  glad_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)load("glMatrixScaledEXT");
  glad_glMatrixTranslatefEXT =
      (PFNGLMATRIXTRANSLATEFEXTPROC)load("glMatrixTranslatefEXT");
  glad_glMatrixTranslatedEXT =
      (PFNGLMATRIXTRANSLATEDEXTPROC)load("glMatrixTranslatedEXT");
  glad_glMatrixFrustumEXT =
      (PFNGLMATRIXFRUSTUMEXTPROC)load("glMatrixFrustumEXT");
  glad_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)load("glMatrixOrthoEXT");
  glad_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)load("glMatrixPopEXT");
  glad_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)load("glMatrixPushEXT");
  glad_glClientAttribDefaultEXT =
      (PFNGLCLIENTATTRIBDEFAULTEXTPROC)load("glClientAttribDefaultEXT");
  glad_glPushClientAttribDefaultEXT =
      (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)load("glPushClientAttribDefaultEXT");
  glad_glTextureParameterfEXT =
      (PFNGLTEXTUREPARAMETERFEXTPROC)load("glTextureParameterfEXT");
  glad_glTextureParameterfvEXT =
      (PFNGLTEXTUREPARAMETERFVEXTPROC)load("glTextureParameterfvEXT");
  glad_glTextureParameteriEXT =
      (PFNGLTEXTUREPARAMETERIEXTPROC)load("glTextureParameteriEXT");
  glad_glTextureParameterivEXT =
      (PFNGLTEXTUREPARAMETERIVEXTPROC)load("glTextureParameterivEXT");
  glad_glTextureImage1DEXT =
      (PFNGLTEXTUREIMAGE1DEXTPROC)load("glTextureImage1DEXT");
  glad_glTextureImage2DEXT =
      (PFNGLTEXTUREIMAGE2DEXTPROC)load("glTextureImage2DEXT");
  glad_glTextureSubImage1DEXT =
      (PFNGLTEXTURESUBIMAGE1DEXTPROC)load("glTextureSubImage1DEXT");
  glad_glTextureSubImage2DEXT =
      (PFNGLTEXTURESUBIMAGE2DEXTPROC)load("glTextureSubImage2DEXT");
  glad_glCopyTextureImage1DEXT =
      (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)load("glCopyTextureImage1DEXT");
  glad_glCopyTextureImage2DEXT =
      (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)load("glCopyTextureImage2DEXT");
  glad_glCopyTextureSubImage1DEXT =
      (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)load("glCopyTextureSubImage1DEXT");
  glad_glCopyTextureSubImage2DEXT =
      (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)load("glCopyTextureSubImage2DEXT");
  glad_glGetTextureImageEXT =
      (PFNGLGETTEXTUREIMAGEEXTPROC)load("glGetTextureImageEXT");
  glad_glGetTextureParameterfvEXT =
      (PFNGLGETTEXTUREPARAMETERFVEXTPROC)load("glGetTextureParameterfvEXT");
  glad_glGetTextureParameterivEXT =
      (PFNGLGETTEXTUREPARAMETERIVEXTPROC)load("glGetTextureParameterivEXT");
  glad_glGetTextureLevelParameterfvEXT =
      (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)load(
          "glGetTextureLevelParameterfvEXT");
  glad_glGetTextureLevelParameterivEXT =
      (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)load(
          "glGetTextureLevelParameterivEXT");
  glad_glTextureImage3DEXT =
      (PFNGLTEXTUREIMAGE3DEXTPROC)load("glTextureImage3DEXT");
  glad_glTextureSubImage3DEXT =
      (PFNGLTEXTURESUBIMAGE3DEXTPROC)load("glTextureSubImage3DEXT");
  glad_glCopyTextureSubImage3DEXT =
      (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)load("glCopyTextureSubImage3DEXT");
  glad_glBindMultiTextureEXT =
      (PFNGLBINDMULTITEXTUREEXTPROC)load("glBindMultiTextureEXT");
  glad_glMultiTexCoordPointerEXT =
      (PFNGLMULTITEXCOORDPOINTEREXTPROC)load("glMultiTexCoordPointerEXT");
  glad_glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)load("glMultiTexEnvfEXT");
  glad_glMultiTexEnvfvEXT =
      (PFNGLMULTITEXENVFVEXTPROC)load("glMultiTexEnvfvEXT");
  glad_glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)load("glMultiTexEnviEXT");
  glad_glMultiTexEnvivEXT =
      (PFNGLMULTITEXENVIVEXTPROC)load("glMultiTexEnvivEXT");
  glad_glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)load("glMultiTexGendEXT");
  glad_glMultiTexGendvEXT =
      (PFNGLMULTITEXGENDVEXTPROC)load("glMultiTexGendvEXT");
  glad_glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)load("glMultiTexGenfEXT");
  glad_glMultiTexGenfvEXT =
      (PFNGLMULTITEXGENFVEXTPROC)load("glMultiTexGenfvEXT");
  glad_glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)load("glMultiTexGeniEXT");
  glad_glMultiTexGenivEXT =
      (PFNGLMULTITEXGENIVEXTPROC)load("glMultiTexGenivEXT");
  glad_glGetMultiTexEnvfvEXT =
      (PFNGLGETMULTITEXENVFVEXTPROC)load("glGetMultiTexEnvfvEXT");
  glad_glGetMultiTexEnvivEXT =
      (PFNGLGETMULTITEXENVIVEXTPROC)load("glGetMultiTexEnvivEXT");
  glad_glGetMultiTexGendvEXT =
      (PFNGLGETMULTITEXGENDVEXTPROC)load("glGetMultiTexGendvEXT");
  glad_glGetMultiTexGenfvEXT =
      (PFNGLGETMULTITEXGENFVEXTPROC)load("glGetMultiTexGenfvEXT");
  glad_glGetMultiTexGenivEXT =
      (PFNGLGETMULTITEXGENIVEXTPROC)load("glGetMultiTexGenivEXT");
  glad_glMultiTexParameteriEXT =
      (PFNGLMULTITEXPARAMETERIEXTPROC)load("glMultiTexParameteriEXT");
  glad_glMultiTexParameterivEXT =
      (PFNGLMULTITEXPARAMETERIVEXTPROC)load("glMultiTexParameterivEXT");
  glad_glMultiTexParameterfEXT =
      (PFNGLMULTITEXPARAMETERFEXTPROC)load("glMultiTexParameterfEXT");
  glad_glMultiTexParameterfvEXT =
      (PFNGLMULTITEXPARAMETERFVEXTPROC)load("glMultiTexParameterfvEXT");
  glad_glMultiTexImage1DEXT =
      (PFNGLMULTITEXIMAGE1DEXTPROC)load("glMultiTexImage1DEXT");
  glad_glMultiTexImage2DEXT =
      (PFNGLMULTITEXIMAGE2DEXTPROC)load("glMultiTexImage2DEXT");
  glad_glMultiTexSubImage1DEXT =
      (PFNGLMULTITEXSUBIMAGE1DEXTPROC)load("glMultiTexSubImage1DEXT");
  glad_glMultiTexSubImage2DEXT =
      (PFNGLMULTITEXSUBIMAGE2DEXTPROC)load("glMultiTexSubImage2DEXT");
  glad_glCopyMultiTexImage1DEXT =
      (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)load("glCopyMultiTexImage1DEXT");
  glad_glCopyMultiTexImage2DEXT =
      (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)load("glCopyMultiTexImage2DEXT");
  glad_glCopyMultiTexSubImage1DEXT =
      (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)load("glCopyMultiTexSubImage1DEXT");
  glad_glCopyMultiTexSubImage2DEXT =
      (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)load("glCopyMultiTexSubImage2DEXT");
  glad_glGetMultiTexImageEXT =
      (PFNGLGETMULTITEXIMAGEEXTPROC)load("glGetMultiTexImageEXT");
  glad_glGetMultiTexParameterfvEXT =
      (PFNGLGETMULTITEXPARAMETERFVEXTPROC)load("glGetMultiTexParameterfvEXT");
  glad_glGetMultiTexParameterivEXT =
      (PFNGLGETMULTITEXPARAMETERIVEXTPROC)load("glGetMultiTexParameterivEXT");
  glad_glGetMultiTexLevelParameterfvEXT =
      (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)load(
          "glGetMultiTexLevelParameterfvEXT");
  glad_glGetMultiTexLevelParameterivEXT =
      (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)load(
          "glGetMultiTexLevelParameterivEXT");
  glad_glMultiTexImage3DEXT =
      (PFNGLMULTITEXIMAGE3DEXTPROC)load("glMultiTexImage3DEXT");
  glad_glMultiTexSubImage3DEXT =
      (PFNGLMULTITEXSUBIMAGE3DEXTPROC)load("glMultiTexSubImage3DEXT");
  glad_glCopyMultiTexSubImage3DEXT =
      (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)load("glCopyMultiTexSubImage3DEXT");
  glad_glEnableClientStateIndexedEXT =
      (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)load(
          "glEnableClientStateIndexedEXT");
  glad_glDisableClientStateIndexedEXT =
      (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)load(
          "glDisableClientStateIndexedEXT");
  glad_glGetFloatIndexedvEXT =
      (PFNGLGETFLOATINDEXEDVEXTPROC)load("glGetFloatIndexedvEXT");
  glad_glGetDoubleIndexedvEXT =
      (PFNGLGETDOUBLEINDEXEDVEXTPROC)load("glGetDoubleIndexedvEXT");
  glad_glGetPointerIndexedvEXT =
      (PFNGLGETPOINTERINDEXEDVEXTPROC)load("glGetPointerIndexedvEXT");
  glad_glEnableIndexedEXT =
      (PFNGLENABLEINDEXEDEXTPROC)load("glEnableIndexedEXT");
  glad_glDisableIndexedEXT =
      (PFNGLDISABLEINDEXEDEXTPROC)load("glDisableIndexedEXT");
  glad_glIsEnabledIndexedEXT =
      (PFNGLISENABLEDINDEXEDEXTPROC)load("glIsEnabledIndexedEXT");
  glad_glGetIntegerIndexedvEXT =
      (PFNGLGETINTEGERINDEXEDVEXTPROC)load("glGetIntegerIndexedvEXT");
  glad_glGetBooleanIndexedvEXT =
      (PFNGLGETBOOLEANINDEXEDVEXTPROC)load("glGetBooleanIndexedvEXT");
  glad_glCompressedTextureImage3DEXT =
      (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)load(
          "glCompressedTextureImage3DEXT");
  glad_glCompressedTextureImage2DEXT =
      (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)load(
          "glCompressedTextureImage2DEXT");
  glad_glCompressedTextureImage1DEXT =
      (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)load(
          "glCompressedTextureImage1DEXT");
  glad_glCompressedTextureSubImage3DEXT =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)load(
          "glCompressedTextureSubImage3DEXT");
  glad_glCompressedTextureSubImage2DEXT =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)load(
          "glCompressedTextureSubImage2DEXT");
  glad_glCompressedTextureSubImage1DEXT =
      (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)load(
          "glCompressedTextureSubImage1DEXT");
  glad_glGetCompressedTextureImageEXT =
      (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)load(
          "glGetCompressedTextureImageEXT");
  glad_glCompressedMultiTexImage3DEXT =
      (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)load(
          "glCompressedMultiTexImage3DEXT");
  glad_glCompressedMultiTexImage2DEXT =
      (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)load(
          "glCompressedMultiTexImage2DEXT");
  glad_glCompressedMultiTexImage1DEXT =
      (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)load(
          "glCompressedMultiTexImage1DEXT");
  glad_glCompressedMultiTexSubImage3DEXT =
      (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)load(
          "glCompressedMultiTexSubImage3DEXT");
  glad_glCompressedMultiTexSubImage2DEXT =
      (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)load(
          "glCompressedMultiTexSubImage2DEXT");
  glad_glCompressedMultiTexSubImage1DEXT =
      (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)load(
          "glCompressedMultiTexSubImage1DEXT");
  glad_glGetCompressedMultiTexImageEXT =
      (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)load(
          "glGetCompressedMultiTexImageEXT");
  glad_glMatrixLoadTransposefEXT =
      (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)load("glMatrixLoadTransposefEXT");
  glad_glMatrixLoadTransposedEXT =
      (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)load("glMatrixLoadTransposedEXT");
  glad_glMatrixMultTransposefEXT =
      (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)load("glMatrixMultTransposefEXT");
  glad_glMatrixMultTransposedEXT =
      (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)load("glMatrixMultTransposedEXT");
  glad_glNamedBufferDataEXT =
      (PFNGLNAMEDBUFFERDATAEXTPROC)load("glNamedBufferDataEXT");
  glad_glNamedBufferSubDataEXT =
      (PFNGLNAMEDBUFFERSUBDATAEXTPROC)load("glNamedBufferSubDataEXT");
  glad_glMapNamedBufferEXT =
      (PFNGLMAPNAMEDBUFFEREXTPROC)load("glMapNamedBufferEXT");
  glad_glUnmapNamedBufferEXT =
      (PFNGLUNMAPNAMEDBUFFEREXTPROC)load("glUnmapNamedBufferEXT");
  glad_glGetNamedBufferParameterivEXT =
      (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)load(
          "glGetNamedBufferParameterivEXT");
  glad_glGetNamedBufferPointervEXT =
      (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)load("glGetNamedBufferPointervEXT");
  glad_glGetNamedBufferSubDataEXT =
      (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)load("glGetNamedBufferSubDataEXT");
  glad_glProgramUniform1fEXT =
      (PFNGLPROGRAMUNIFORM1FEXTPROC)load("glProgramUniform1fEXT");
  glad_glProgramUniform2fEXT =
      (PFNGLPROGRAMUNIFORM2FEXTPROC)load("glProgramUniform2fEXT");
  glad_glProgramUniform3fEXT =
      (PFNGLPROGRAMUNIFORM3FEXTPROC)load("glProgramUniform3fEXT");
  glad_glProgramUniform4fEXT =
      (PFNGLPROGRAMUNIFORM4FEXTPROC)load("glProgramUniform4fEXT");
  glad_glProgramUniform1iEXT =
      (PFNGLPROGRAMUNIFORM1IEXTPROC)load("glProgramUniform1iEXT");
  glad_glProgramUniform2iEXT =
      (PFNGLPROGRAMUNIFORM2IEXTPROC)load("glProgramUniform2iEXT");
  glad_glProgramUniform3iEXT =
      (PFNGLPROGRAMUNIFORM3IEXTPROC)load("glProgramUniform3iEXT");
  glad_glProgramUniform4iEXT =
      (PFNGLPROGRAMUNIFORM4IEXTPROC)load("glProgramUniform4iEXT");
  glad_glProgramUniform1fvEXT =
      (PFNGLPROGRAMUNIFORM1FVEXTPROC)load("glProgramUniform1fvEXT");
  glad_glProgramUniform2fvEXT =
      (PFNGLPROGRAMUNIFORM2FVEXTPROC)load("glProgramUniform2fvEXT");
  glad_glProgramUniform3fvEXT =
      (PFNGLPROGRAMUNIFORM3FVEXTPROC)load("glProgramUniform3fvEXT");
  glad_glProgramUniform4fvEXT =
      (PFNGLPROGRAMUNIFORM4FVEXTPROC)load("glProgramUniform4fvEXT");
  glad_glProgramUniform1ivEXT =
      (PFNGLPROGRAMUNIFORM1IVEXTPROC)load("glProgramUniform1ivEXT");
  glad_glProgramUniform2ivEXT =
      (PFNGLPROGRAMUNIFORM2IVEXTPROC)load("glProgramUniform2ivEXT");
  glad_glProgramUniform3ivEXT =
      (PFNGLPROGRAMUNIFORM3IVEXTPROC)load("glProgramUniform3ivEXT");
  glad_glProgramUniform4ivEXT =
      (PFNGLPROGRAMUNIFORM4IVEXTPROC)load("glProgramUniform4ivEXT");
  glad_glProgramUniformMatrix2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)load("glProgramUniformMatrix2fvEXT");
  glad_glProgramUniformMatrix3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)load("glProgramUniformMatrix3fvEXT");
  glad_glProgramUniformMatrix4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
  glad_glProgramUniformMatrix2x3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)load(
          "glProgramUniformMatrix2x3fvEXT");
  glad_glProgramUniformMatrix3x2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)load(
          "glProgramUniformMatrix3x2fvEXT");
  glad_glProgramUniformMatrix2x4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)load(
          "glProgramUniformMatrix2x4fvEXT");
  glad_glProgramUniformMatrix4x2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)load(
          "glProgramUniformMatrix4x2fvEXT");
  glad_glProgramUniformMatrix3x4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)load(
          "glProgramUniformMatrix3x4fvEXT");
  glad_glProgramUniformMatrix4x3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)load(
          "glProgramUniformMatrix4x3fvEXT");
  glad_glTextureBufferEXT =
      (PFNGLTEXTUREBUFFEREXTPROC)load("glTextureBufferEXT");
  glad_glMultiTexBufferEXT =
      (PFNGLMULTITEXBUFFEREXTPROC)load("glMultiTexBufferEXT");
  glad_glTextureParameterIivEXT =
      (PFNGLTEXTUREPARAMETERIIVEXTPROC)load("glTextureParameterIivEXT");
  glad_glTextureParameterIuivEXT =
      (PFNGLTEXTUREPARAMETERIUIVEXTPROC)load("glTextureParameterIuivEXT");
  glad_glGetTextureParameterIivEXT =
      (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)load("glGetTextureParameterIivEXT");
  glad_glGetTextureParameterIuivEXT =
      (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)load("glGetTextureParameterIuivEXT");
  glad_glMultiTexParameterIivEXT =
      (PFNGLMULTITEXPARAMETERIIVEXTPROC)load("glMultiTexParameterIivEXT");
  glad_glMultiTexParameterIuivEXT =
      (PFNGLMULTITEXPARAMETERIUIVEXTPROC)load("glMultiTexParameterIuivEXT");
  glad_glGetMultiTexParameterIivEXT =
      (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)load("glGetMultiTexParameterIivEXT");
  glad_glGetMultiTexParameterIuivEXT =
      (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)load(
          "glGetMultiTexParameterIuivEXT");
  glad_glProgramUniform1uiEXT =
      (PFNGLPROGRAMUNIFORM1UIEXTPROC)load("glProgramUniform1uiEXT");
  glad_glProgramUniform2uiEXT =
      (PFNGLPROGRAMUNIFORM2UIEXTPROC)load("glProgramUniform2uiEXT");
  glad_glProgramUniform3uiEXT =
      (PFNGLPROGRAMUNIFORM3UIEXTPROC)load("glProgramUniform3uiEXT");
  glad_glProgramUniform4uiEXT =
      (PFNGLPROGRAMUNIFORM4UIEXTPROC)load("glProgramUniform4uiEXT");
  glad_glProgramUniform1uivEXT =
      (PFNGLPROGRAMUNIFORM1UIVEXTPROC)load("glProgramUniform1uivEXT");
  glad_glProgramUniform2uivEXT =
      (PFNGLPROGRAMUNIFORM2UIVEXTPROC)load("glProgramUniform2uivEXT");
  glad_glProgramUniform3uivEXT =
      (PFNGLPROGRAMUNIFORM3UIVEXTPROC)load("glProgramUniform3uivEXT");
  glad_glProgramUniform4uivEXT =
      (PFNGLPROGRAMUNIFORM4UIVEXTPROC)load("glProgramUniform4uivEXT");
  glad_glNamedProgramLocalParameters4fvEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)load(
          "glNamedProgramLocalParameters4fvEXT");
  glad_glNamedProgramLocalParameterI4iEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)load(
          "glNamedProgramLocalParameterI4iEXT");
  glad_glNamedProgramLocalParameterI4ivEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)load(
          "glNamedProgramLocalParameterI4ivEXT");
  glad_glNamedProgramLocalParametersI4ivEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)load(
          "glNamedProgramLocalParametersI4ivEXT");
  glad_glNamedProgramLocalParameterI4uiEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)load(
          "glNamedProgramLocalParameterI4uiEXT");
  glad_glNamedProgramLocalParameterI4uivEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)load(
          "glNamedProgramLocalParameterI4uivEXT");
  glad_glNamedProgramLocalParametersI4uivEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)load(
          "glNamedProgramLocalParametersI4uivEXT");
  glad_glGetNamedProgramLocalParameterIivEXT =
      (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)load(
          "glGetNamedProgramLocalParameterIivEXT");
  glad_glGetNamedProgramLocalParameterIuivEXT =
      (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)load(
          "glGetNamedProgramLocalParameterIuivEXT");
  glad_glEnableClientStateiEXT =
      (PFNGLENABLECLIENTSTATEIEXTPROC)load("glEnableClientStateiEXT");
  glad_glDisableClientStateiEXT =
      (PFNGLDISABLECLIENTSTATEIEXTPROC)load("glDisableClientStateiEXT");
  glad_glGetFloati_vEXT = (PFNGLGETFLOATI_VEXTPROC)load("glGetFloati_vEXT");
  glad_glGetDoublei_vEXT = (PFNGLGETDOUBLEI_VEXTPROC)load("glGetDoublei_vEXT");
  glad_glGetPointeri_vEXT =
      (PFNGLGETPOINTERI_VEXTPROC)load("glGetPointeri_vEXT");
  glad_glNamedProgramStringEXT =
      (PFNGLNAMEDPROGRAMSTRINGEXTPROC)load("glNamedProgramStringEXT");
  glad_glNamedProgramLocalParameter4dEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)load(
          "glNamedProgramLocalParameter4dEXT");
  glad_glNamedProgramLocalParameter4dvEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)load(
          "glNamedProgramLocalParameter4dvEXT");
  glad_glNamedProgramLocalParameter4fEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)load(
          "glNamedProgramLocalParameter4fEXT");
  glad_glNamedProgramLocalParameter4fvEXT =
      (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)load(
          "glNamedProgramLocalParameter4fvEXT");
  glad_glGetNamedProgramLocalParameterdvEXT =
      (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)load(
          "glGetNamedProgramLocalParameterdvEXT");
  glad_glGetNamedProgramLocalParameterfvEXT =
      (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)load(
          "glGetNamedProgramLocalParameterfvEXT");
  glad_glGetNamedProgramivEXT =
      (PFNGLGETNAMEDPROGRAMIVEXTPROC)load("glGetNamedProgramivEXT");
  glad_glGetNamedProgramStringEXT =
      (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)load("glGetNamedProgramStringEXT");
  glad_glNamedRenderbufferStorageEXT =
      (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)load(
          "glNamedRenderbufferStorageEXT");
  glad_glGetNamedRenderbufferParameterivEXT =
      (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)load(
          "glGetNamedRenderbufferParameterivEXT");
  glad_glNamedRenderbufferStorageMultisampleEXT =
      (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)load(
          "glNamedRenderbufferStorageMultisampleEXT");
  glad_glNamedRenderbufferStorageMultisampleCoverageEXT =
      (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)load(
          "glNamedRenderbufferStorageMultisampleCoverageEXT");
  glad_glCheckNamedFramebufferStatusEXT =
      (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)load(
          "glCheckNamedFramebufferStatusEXT");
  glad_glNamedFramebufferTexture1DEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)load(
          "glNamedFramebufferTexture1DEXT");
  glad_glNamedFramebufferTexture2DEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)load(
          "glNamedFramebufferTexture2DEXT");
  glad_glNamedFramebufferTexture3DEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)load(
          "glNamedFramebufferTexture3DEXT");
  glad_glNamedFramebufferRenderbufferEXT =
      (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)load(
          "glNamedFramebufferRenderbufferEXT");
  glad_glGetNamedFramebufferAttachmentParameterivEXT =
      (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)load(
          "glGetNamedFramebufferAttachmentParameterivEXT");
  glad_glGenerateTextureMipmapEXT =
      (PFNGLGENERATETEXTUREMIPMAPEXTPROC)load("glGenerateTextureMipmapEXT");
  glad_glGenerateMultiTexMipmapEXT =
      (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)load("glGenerateMultiTexMipmapEXT");
  glad_glFramebufferDrawBufferEXT =
      (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)load("glFramebufferDrawBufferEXT");
  glad_glFramebufferDrawBuffersEXT =
      (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)load("glFramebufferDrawBuffersEXT");
  glad_glFramebufferReadBufferEXT =
      (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)load("glFramebufferReadBufferEXT");
  glad_glGetFramebufferParameterivEXT =
      (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)load(
          "glGetFramebufferParameterivEXT");
  glad_glNamedCopyBufferSubDataEXT =
      (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)load("glNamedCopyBufferSubDataEXT");
  glad_glNamedFramebufferTextureEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)load("glNamedFramebufferTextureEXT");
  glad_glNamedFramebufferTextureLayerEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)load(
          "glNamedFramebufferTextureLayerEXT");
  glad_glNamedFramebufferTextureFaceEXT =
      (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)load(
          "glNamedFramebufferTextureFaceEXT");
  glad_glTextureRenderbufferEXT =
      (PFNGLTEXTURERENDERBUFFEREXTPROC)load("glTextureRenderbufferEXT");
  glad_glMultiTexRenderbufferEXT =
      (PFNGLMULTITEXRENDERBUFFEREXTPROC)load("glMultiTexRenderbufferEXT");
  glad_glVertexArrayVertexOffsetEXT =
      (PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)load("glVertexArrayVertexOffsetEXT");
  glad_glVertexArrayColorOffsetEXT =
      (PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)load("glVertexArrayColorOffsetEXT");
  glad_glVertexArrayEdgeFlagOffsetEXT =
      (PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)load(
          "glVertexArrayEdgeFlagOffsetEXT");
  glad_glVertexArrayIndexOffsetEXT =
      (PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)load("glVertexArrayIndexOffsetEXT");
  glad_glVertexArrayNormalOffsetEXT =
      (PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)load("glVertexArrayNormalOffsetEXT");
  glad_glVertexArrayTexCoordOffsetEXT =
      (PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)load(
          "glVertexArrayTexCoordOffsetEXT");
  glad_glVertexArrayMultiTexCoordOffsetEXT =
      (PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)load(
          "glVertexArrayMultiTexCoordOffsetEXT");
  glad_glVertexArrayFogCoordOffsetEXT =
      (PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)load(
          "glVertexArrayFogCoordOffsetEXT");
  glad_glVertexArraySecondaryColorOffsetEXT =
      (PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)load(
          "glVertexArraySecondaryColorOffsetEXT");
  glad_glVertexArrayVertexAttribOffsetEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)load(
          "glVertexArrayVertexAttribOffsetEXT");
  glad_glVertexArrayVertexAttribIOffsetEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)load(
          "glVertexArrayVertexAttribIOffsetEXT");
  glad_glEnableVertexArrayEXT =
      (PFNGLENABLEVERTEXARRAYEXTPROC)load("glEnableVertexArrayEXT");
  glad_glDisableVertexArrayEXT =
      (PFNGLDISABLEVERTEXARRAYEXTPROC)load("glDisableVertexArrayEXT");
  glad_glEnableVertexArrayAttribEXT =
      (PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)load("glEnableVertexArrayAttribEXT");
  glad_glDisableVertexArrayAttribEXT =
      (PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)load(
          "glDisableVertexArrayAttribEXT");
  glad_glGetVertexArrayIntegervEXT =
      (PFNGLGETVERTEXARRAYINTEGERVEXTPROC)load("glGetVertexArrayIntegervEXT");
  glad_glGetVertexArrayPointervEXT =
      (PFNGLGETVERTEXARRAYPOINTERVEXTPROC)load("glGetVertexArrayPointervEXT");
  glad_glGetVertexArrayIntegeri_vEXT =
      (PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)load(
          "glGetVertexArrayIntegeri_vEXT");
  glad_glGetVertexArrayPointeri_vEXT =
      (PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)load(
          "glGetVertexArrayPointeri_vEXT");
  glad_glMapNamedBufferRangeEXT =
      (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)load("glMapNamedBufferRangeEXT");
  glad_glFlushMappedNamedBufferRangeEXT =
      (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)load(
          "glFlushMappedNamedBufferRangeEXT");
  glad_glNamedBufferStorageEXT =
      (PFNGLNAMEDBUFFERSTORAGEEXTPROC)load("glNamedBufferStorageEXT");
  glad_glClearNamedBufferDataEXT =
      (PFNGLCLEARNAMEDBUFFERDATAEXTPROC)load("glClearNamedBufferDataEXT");
  glad_glClearNamedBufferSubDataEXT =
      (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)load("glClearNamedBufferSubDataEXT");
  glad_glNamedFramebufferParameteriEXT =
      (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)load(
          "glNamedFramebufferParameteriEXT");
  glad_glGetNamedFramebufferParameterivEXT =
      (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)load(
          "glGetNamedFramebufferParameterivEXT");
  glad_glProgramUniform1dEXT =
      (PFNGLPROGRAMUNIFORM1DEXTPROC)load("glProgramUniform1dEXT");
  glad_glProgramUniform2dEXT =
      (PFNGLPROGRAMUNIFORM2DEXTPROC)load("glProgramUniform2dEXT");
  glad_glProgramUniform3dEXT =
      (PFNGLPROGRAMUNIFORM3DEXTPROC)load("glProgramUniform3dEXT");
  glad_glProgramUniform4dEXT =
      (PFNGLPROGRAMUNIFORM4DEXTPROC)load("glProgramUniform4dEXT");
  glad_glProgramUniform1dvEXT =
      (PFNGLPROGRAMUNIFORM1DVEXTPROC)load("glProgramUniform1dvEXT");
  glad_glProgramUniform2dvEXT =
      (PFNGLPROGRAMUNIFORM2DVEXTPROC)load("glProgramUniform2dvEXT");
  glad_glProgramUniform3dvEXT =
      (PFNGLPROGRAMUNIFORM3DVEXTPROC)load("glProgramUniform3dvEXT");
  glad_glProgramUniform4dvEXT =
      (PFNGLPROGRAMUNIFORM4DVEXTPROC)load("glProgramUniform4dvEXT");
  glad_glProgramUniformMatrix2dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)load("glProgramUniformMatrix2dvEXT");
  glad_glProgramUniformMatrix3dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)load("glProgramUniformMatrix3dvEXT");
  glad_glProgramUniformMatrix4dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)load("glProgramUniformMatrix4dvEXT");
  glad_glProgramUniformMatrix2x3dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)load(
          "glProgramUniformMatrix2x3dvEXT");
  glad_glProgramUniformMatrix2x4dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)load(
          "glProgramUniformMatrix2x4dvEXT");
  glad_glProgramUniformMatrix3x2dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)load(
          "glProgramUniformMatrix3x2dvEXT");
  glad_glProgramUniformMatrix3x4dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)load(
          "glProgramUniformMatrix3x4dvEXT");
  glad_glProgramUniformMatrix4x2dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)load(
          "glProgramUniformMatrix4x2dvEXT");
  glad_glProgramUniformMatrix4x3dvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)load(
          "glProgramUniformMatrix4x3dvEXT");
  glad_glTextureBufferRangeEXT =
      (PFNGLTEXTUREBUFFERRANGEEXTPROC)load("glTextureBufferRangeEXT");
  glad_glTextureStorage1DEXT =
      (PFNGLTEXTURESTORAGE1DEXTPROC)load("glTextureStorage1DEXT");
  glad_glTextureStorage2DEXT =
      (PFNGLTEXTURESTORAGE2DEXTPROC)load("glTextureStorage2DEXT");
  glad_glTextureStorage3DEXT =
      (PFNGLTEXTURESTORAGE3DEXTPROC)load("glTextureStorage3DEXT");
  glad_glTextureStorage2DMultisampleEXT =
      (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)load(
          "glTextureStorage2DMultisampleEXT");
  glad_glTextureStorage3DMultisampleEXT =
      (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)load(
          "glTextureStorage3DMultisampleEXT");
  glad_glVertexArrayBindVertexBufferEXT =
      (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)load(
          "glVertexArrayBindVertexBufferEXT");
  glad_glVertexArrayVertexAttribFormatEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)load(
          "glVertexArrayVertexAttribFormatEXT");
  glad_glVertexArrayVertexAttribIFormatEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)load(
          "glVertexArrayVertexAttribIFormatEXT");
  glad_glVertexArrayVertexAttribLFormatEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)load(
          "glVertexArrayVertexAttribLFormatEXT");
  glad_glVertexArrayVertexAttribBindingEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)load(
          "glVertexArrayVertexAttribBindingEXT");
  glad_glVertexArrayVertexBindingDivisorEXT =
      (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)load(
          "glVertexArrayVertexBindingDivisorEXT");
  glad_glVertexArrayVertexAttribLOffsetEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)load(
          "glVertexArrayVertexAttribLOffsetEXT");
  glad_glTexturePageCommitmentEXT =
      (PFNGLTEXTUREPAGECOMMITMENTEXTPROC)load("glTexturePageCommitmentEXT");
  glad_glVertexArrayVertexAttribDivisorEXT =
      (PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)load(
          "glVertexArrayVertexAttribDivisorEXT");
}
static void load_GL_EXT_draw_buffers2(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_buffers2) return;
  glad_glColorMaskIndexedEXT =
      (PFNGLCOLORMASKINDEXEDEXTPROC)load("glColorMaskIndexedEXT");
  glad_glGetBooleanIndexedvEXT =
      (PFNGLGETBOOLEANINDEXEDVEXTPROC)load("glGetBooleanIndexedvEXT");
  glad_glGetIntegerIndexedvEXT =
      (PFNGLGETINTEGERINDEXEDVEXTPROC)load("glGetIntegerIndexedvEXT");
  glad_glEnableIndexedEXT =
      (PFNGLENABLEINDEXEDEXTPROC)load("glEnableIndexedEXT");
  glad_glDisableIndexedEXT =
      (PFNGLDISABLEINDEXEDEXTPROC)load("glDisableIndexedEXT");
  glad_glIsEnabledIndexedEXT =
      (PFNGLISENABLEDINDEXEDEXTPROC)load("glIsEnabledIndexedEXT");
}
static void load_GL_EXT_draw_instanced(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_instanced) return;
  glad_glDrawArraysInstancedEXT =
      (PFNGLDRAWARRAYSINSTANCEDEXTPROC)load("glDrawArraysInstancedEXT");
  glad_glDrawElementsInstancedEXT =
      (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)load("glDrawElementsInstancedEXT");
}
static void load_GL_EXT_draw_range_elements(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_range_elements) return;
  glad_glDrawRangeElementsEXT =
      (PFNGLDRAWRANGEELEMENTSEXTPROC)load("glDrawRangeElementsEXT");
}
static void load_GL_EXT_external_buffer(GLADloadproc load) {
  if (!GLAD_GL_EXT_external_buffer) return;
  glad_glBufferStorageExternalEXT =
      (PFNGLBUFFERSTORAGEEXTERNALEXTPROC)load("glBufferStorageExternalEXT");
  glad_glNamedBufferStorageExternalEXT =
      (PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC)load(
          "glNamedBufferStorageExternalEXT");
}
static void load_GL_EXT_fog_coord(GLADloadproc load) {
  if (!GLAD_GL_EXT_fog_coord) return;
  glad_glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)load("glFogCoordfEXT");
  glad_glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)load("glFogCoordfvEXT");
  glad_glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)load("glFogCoorddEXT");
  glad_glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)load("glFogCoorddvEXT");
  glad_glFogCoordPointerEXT =
      (PFNGLFOGCOORDPOINTEREXTPROC)load("glFogCoordPointerEXT");
}
static void load_GL_EXT_framebuffer_blit(GLADloadproc load) {
  if (!GLAD_GL_EXT_framebuffer_blit) return;
  glad_glBlitFramebufferEXT =
      (PFNGLBLITFRAMEBUFFEREXTPROC)load("glBlitFramebufferEXT");
}
static void load_GL_EXT_framebuffer_multisample(GLADloadproc load) {
  if (!GLAD_GL_EXT_framebuffer_multisample) return;
  glad_glRenderbufferStorageMultisampleEXT =
      (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)load(
          "glRenderbufferStorageMultisampleEXT");
}
static void load_GL_EXT_framebuffer_object(GLADloadproc load) {
  if (!GLAD_GL_EXT_framebuffer_object) return;
  glad_glIsRenderbufferEXT =
      (PFNGLISRENDERBUFFEREXTPROC)load("glIsRenderbufferEXT");
  glad_glBindRenderbufferEXT =
      (PFNGLBINDRENDERBUFFEREXTPROC)load("glBindRenderbufferEXT");
  glad_glDeleteRenderbuffersEXT =
      (PFNGLDELETERENDERBUFFERSEXTPROC)load("glDeleteRenderbuffersEXT");
  glad_glGenRenderbuffersEXT =
      (PFNGLGENRENDERBUFFERSEXTPROC)load("glGenRenderbuffersEXT");
  glad_glRenderbufferStorageEXT =
      (PFNGLRENDERBUFFERSTORAGEEXTPROC)load("glRenderbufferStorageEXT");
  glad_glGetRenderbufferParameterivEXT =
      (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)load(
          "glGetRenderbufferParameterivEXT");
  glad_glIsFramebufferEXT =
      (PFNGLISFRAMEBUFFEREXTPROC)load("glIsFramebufferEXT");
  glad_glBindFramebufferEXT =
      (PFNGLBINDFRAMEBUFFEREXTPROC)load("glBindFramebufferEXT");
  glad_glDeleteFramebuffersEXT =
      (PFNGLDELETEFRAMEBUFFERSEXTPROC)load("glDeleteFramebuffersEXT");
  glad_glGenFramebuffersEXT =
      (PFNGLGENFRAMEBUFFERSEXTPROC)load("glGenFramebuffersEXT");
  glad_glCheckFramebufferStatusEXT =
      (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)load("glCheckFramebufferStatusEXT");
  glad_glFramebufferTexture1DEXT =
      (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)load("glFramebufferTexture1DEXT");
  glad_glFramebufferTexture2DEXT =
      (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)load("glFramebufferTexture2DEXT");
  glad_glFramebufferTexture3DEXT =
      (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)load("glFramebufferTexture3DEXT");
  glad_glFramebufferRenderbufferEXT =
      (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)load("glFramebufferRenderbufferEXT");
  glad_glGetFramebufferAttachmentParameterivEXT =
      (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)load(
          "glGetFramebufferAttachmentParameterivEXT");
  glad_glGenerateMipmapEXT =
      (PFNGLGENERATEMIPMAPEXTPROC)load("glGenerateMipmapEXT");
}
static void load_GL_EXT_geometry_shader4(GLADloadproc load) {
  if (!GLAD_GL_EXT_geometry_shader4) return;
  glad_glProgramParameteriEXT =
      (PFNGLPROGRAMPARAMETERIEXTPROC)load("glProgramParameteriEXT");
}
static void load_GL_EXT_gpu_program_parameters(GLADloadproc load) {
  if (!GLAD_GL_EXT_gpu_program_parameters) return;
  glad_glProgramEnvParameters4fvEXT =
      (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)load("glProgramEnvParameters4fvEXT");
  glad_glProgramLocalParameters4fvEXT =
      (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)load(
          "glProgramLocalParameters4fvEXT");
}
static void load_GL_EXT_gpu_shader4(GLADloadproc load) {
  if (!GLAD_GL_EXT_gpu_shader4) return;
  glad_glGetUniformuivEXT =
      (PFNGLGETUNIFORMUIVEXTPROC)load("glGetUniformuivEXT");
  glad_glBindFragDataLocationEXT =
      (PFNGLBINDFRAGDATALOCATIONEXTPROC)load("glBindFragDataLocationEXT");
  glad_glGetFragDataLocationEXT =
      (PFNGLGETFRAGDATALOCATIONEXTPROC)load("glGetFragDataLocationEXT");
  glad_glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)load("glUniform1uiEXT");
  glad_glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)load("glUniform2uiEXT");
  glad_glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)load("glUniform3uiEXT");
  glad_glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)load("glUniform4uiEXT");
  glad_glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)load("glUniform1uivEXT");
  glad_glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)load("glUniform2uivEXT");
  glad_glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)load("glUniform3uivEXT");
  glad_glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)load("glUniform4uivEXT");
}
static void load_GL_EXT_histogram(GLADloadproc load) {
  if (!GLAD_GL_EXT_histogram) return;
  glad_glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)load("glGetHistogramEXT");
  glad_glGetHistogramParameterfvEXT =
      (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)load("glGetHistogramParameterfvEXT");
  glad_glGetHistogramParameterivEXT =
      (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)load("glGetHistogramParameterivEXT");
  glad_glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)load("glGetMinmaxEXT");
  glad_glGetMinmaxParameterfvEXT =
      (PFNGLGETMINMAXPARAMETERFVEXTPROC)load("glGetMinmaxParameterfvEXT");
  glad_glGetMinmaxParameterivEXT =
      (PFNGLGETMINMAXPARAMETERIVEXTPROC)load("glGetMinmaxParameterivEXT");
  glad_glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)load("glHistogramEXT");
  glad_glMinmaxEXT = (PFNGLMINMAXEXTPROC)load("glMinmaxEXT");
  glad_glResetHistogramEXT =
      (PFNGLRESETHISTOGRAMEXTPROC)load("glResetHistogramEXT");
  glad_glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)load("glResetMinmaxEXT");
}
static void load_GL_EXT_index_func(GLADloadproc load) {
  if (!GLAD_GL_EXT_index_func) return;
  glad_glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)load("glIndexFuncEXT");
}
static void load_GL_EXT_index_material(GLADloadproc load) {
  if (!GLAD_GL_EXT_index_material) return;
  glad_glIndexMaterialEXT =
      (PFNGLINDEXMATERIALEXTPROC)load("glIndexMaterialEXT");
}
static void load_GL_EXT_light_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_light_texture) return;
  glad_glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)load("glApplyTextureEXT");
  glad_glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)load("glTextureLightEXT");
  glad_glTextureMaterialEXT =
      (PFNGLTEXTUREMATERIALEXTPROC)load("glTextureMaterialEXT");
}
static void load_GL_EXT_memory_object(GLADloadproc load) {
  if (!GLAD_GL_EXT_memory_object) return;
  glad_glGetUnsignedBytevEXT =
      (PFNGLGETUNSIGNEDBYTEVEXTPROC)load("glGetUnsignedBytevEXT");
  glad_glGetUnsignedBytei_vEXT =
      (PFNGLGETUNSIGNEDBYTEI_VEXTPROC)load("glGetUnsignedBytei_vEXT");
  glad_glDeleteMemoryObjectsEXT =
      (PFNGLDELETEMEMORYOBJECTSEXTPROC)load("glDeleteMemoryObjectsEXT");
  glad_glIsMemoryObjectEXT =
      (PFNGLISMEMORYOBJECTEXTPROC)load("glIsMemoryObjectEXT");
  glad_glCreateMemoryObjectsEXT =
      (PFNGLCREATEMEMORYOBJECTSEXTPROC)load("glCreateMemoryObjectsEXT");
  glad_glMemoryObjectParameterivEXT =
      (PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)load("glMemoryObjectParameterivEXT");
  glad_glGetMemoryObjectParameterivEXT =
      (PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC)load(
          "glGetMemoryObjectParameterivEXT");
  glad_glTexStorageMem2DEXT =
      (PFNGLTEXSTORAGEMEM2DEXTPROC)load("glTexStorageMem2DEXT");
  glad_glTexStorageMem2DMultisampleEXT =
      (PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC)load(
          "glTexStorageMem2DMultisampleEXT");
  glad_glTexStorageMem3DEXT =
      (PFNGLTEXSTORAGEMEM3DEXTPROC)load("glTexStorageMem3DEXT");
  glad_glTexStorageMem3DMultisampleEXT =
      (PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC)load(
          "glTexStorageMem3DMultisampleEXT");
  glad_glBufferStorageMemEXT =
      (PFNGLBUFFERSTORAGEMEMEXTPROC)load("glBufferStorageMemEXT");
  glad_glTextureStorageMem2DEXT =
      (PFNGLTEXTURESTORAGEMEM2DEXTPROC)load("glTextureStorageMem2DEXT");
  glad_glTextureStorageMem2DMultisampleEXT =
      (PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC)load(
          "glTextureStorageMem2DMultisampleEXT");
  glad_glTextureStorageMem3DEXT =
      (PFNGLTEXTURESTORAGEMEM3DEXTPROC)load("glTextureStorageMem3DEXT");
  glad_glTextureStorageMem3DMultisampleEXT =
      (PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC)load(
          "glTextureStorageMem3DMultisampleEXT");
  glad_glNamedBufferStorageMemEXT =
      (PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)load("glNamedBufferStorageMemEXT");
  glad_glTexStorageMem1DEXT =
      (PFNGLTEXSTORAGEMEM1DEXTPROC)load("glTexStorageMem1DEXT");
  glad_glTextureStorageMem1DEXT =
      (PFNGLTEXTURESTORAGEMEM1DEXTPROC)load("glTextureStorageMem1DEXT");
}
static void load_GL_EXT_memory_object_fd(GLADloadproc load) {
  if (!GLAD_GL_EXT_memory_object_fd) return;
  glad_glImportMemoryFdEXT =
      (PFNGLIMPORTMEMORYFDEXTPROC)load("glImportMemoryFdEXT");
}
static void load_GL_EXT_memory_object_win32(GLADloadproc load) {
  if (!GLAD_GL_EXT_memory_object_win32) return;
  glad_glImportMemoryWin32HandleEXT =
      (PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)load("glImportMemoryWin32HandleEXT");
  glad_glImportMemoryWin32NameEXT =
      (PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)load("glImportMemoryWin32NameEXT");
}
static void load_GL_EXT_multi_draw_arrays(GLADloadproc load) {
  if (!GLAD_GL_EXT_multi_draw_arrays) return;
  glad_glMultiDrawArraysEXT =
      (PFNGLMULTIDRAWARRAYSEXTPROC)load("glMultiDrawArraysEXT");
  glad_glMultiDrawElementsEXT =
      (PFNGLMULTIDRAWELEMENTSEXTPROC)load("glMultiDrawElementsEXT");
}
static void load_GL_EXT_multisample(GLADloadproc load) {
  if (!GLAD_GL_EXT_multisample) return;
  glad_glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)load("glSampleMaskEXT");
  glad_glSamplePatternEXT =
      (PFNGLSAMPLEPATTERNEXTPROC)load("glSamplePatternEXT");
}
static void load_GL_EXT_paletted_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_paletted_texture) return;
  glad_glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)load("glColorTableEXT");
  glad_glGetColorTableEXT =
      (PFNGLGETCOLORTABLEEXTPROC)load("glGetColorTableEXT");
  glad_glGetColorTableParameterivEXT =
      (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)load(
          "glGetColorTableParameterivEXT");
  glad_glGetColorTableParameterfvEXT =
      (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)load(
          "glGetColorTableParameterfvEXT");
}
static void load_GL_EXT_pixel_transform(GLADloadproc load) {
  if (!GLAD_GL_EXT_pixel_transform) return;
  glad_glPixelTransformParameteriEXT =
      (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)load(
          "glPixelTransformParameteriEXT");
  glad_glPixelTransformParameterfEXT =
      (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)load(
          "glPixelTransformParameterfEXT");
  glad_glPixelTransformParameterivEXT =
      (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)load(
          "glPixelTransformParameterivEXT");
  glad_glPixelTransformParameterfvEXT =
      (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)load(
          "glPixelTransformParameterfvEXT");
  glad_glGetPixelTransformParameterivEXT =
      (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)load(
          "glGetPixelTransformParameterivEXT");
  glad_glGetPixelTransformParameterfvEXT =
      (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)load(
          "glGetPixelTransformParameterfvEXT");
}
static void load_GL_EXT_point_parameters(GLADloadproc load) {
  if (!GLAD_GL_EXT_point_parameters) return;
  glad_glPointParameterfEXT =
      (PFNGLPOINTPARAMETERFEXTPROC)load("glPointParameterfEXT");
  glad_glPointParameterfvEXT =
      (PFNGLPOINTPARAMETERFVEXTPROC)load("glPointParameterfvEXT");
}
static void load_GL_EXT_polygon_offset(GLADloadproc load) {
  if (!GLAD_GL_EXT_polygon_offset) return;
  glad_glPolygonOffsetEXT =
      (PFNGLPOLYGONOFFSETEXTPROC)load("glPolygonOffsetEXT");
}
static void load_GL_EXT_polygon_offset_clamp(GLADloadproc load) {
  if (!GLAD_GL_EXT_polygon_offset_clamp) return;
  glad_glPolygonOffsetClampEXT =
      (PFNGLPOLYGONOFFSETCLAMPEXTPROC)load("glPolygonOffsetClampEXT");
}
static void load_GL_EXT_provoking_vertex(GLADloadproc load) {
  if (!GLAD_GL_EXT_provoking_vertex) return;
  glad_glProvokingVertexEXT =
      (PFNGLPROVOKINGVERTEXEXTPROC)load("glProvokingVertexEXT");
}
static void load_GL_EXT_raster_multisample(GLADloadproc load) {
  if (!GLAD_GL_EXT_raster_multisample) return;
  glad_glRasterSamplesEXT =
      (PFNGLRASTERSAMPLESEXTPROC)load("glRasterSamplesEXT");
}
static void load_GL_EXT_secondary_color(GLADloadproc load) {
  if (!GLAD_GL_EXT_secondary_color) return;
  glad_glSecondaryColor3bEXT =
      (PFNGLSECONDARYCOLOR3BEXTPROC)load("glSecondaryColor3bEXT");
  glad_glSecondaryColor3bvEXT =
      (PFNGLSECONDARYCOLOR3BVEXTPROC)load("glSecondaryColor3bvEXT");
  glad_glSecondaryColor3dEXT =
      (PFNGLSECONDARYCOLOR3DEXTPROC)load("glSecondaryColor3dEXT");
  glad_glSecondaryColor3dvEXT =
      (PFNGLSECONDARYCOLOR3DVEXTPROC)load("glSecondaryColor3dvEXT");
  glad_glSecondaryColor3fEXT =
      (PFNGLSECONDARYCOLOR3FEXTPROC)load("glSecondaryColor3fEXT");
  glad_glSecondaryColor3fvEXT =
      (PFNGLSECONDARYCOLOR3FVEXTPROC)load("glSecondaryColor3fvEXT");
  glad_glSecondaryColor3iEXT =
      (PFNGLSECONDARYCOLOR3IEXTPROC)load("glSecondaryColor3iEXT");
  glad_glSecondaryColor3ivEXT =
      (PFNGLSECONDARYCOLOR3IVEXTPROC)load("glSecondaryColor3ivEXT");
  glad_glSecondaryColor3sEXT =
      (PFNGLSECONDARYCOLOR3SEXTPROC)load("glSecondaryColor3sEXT");
  glad_glSecondaryColor3svEXT =
      (PFNGLSECONDARYCOLOR3SVEXTPROC)load("glSecondaryColor3svEXT");
  glad_glSecondaryColor3ubEXT =
      (PFNGLSECONDARYCOLOR3UBEXTPROC)load("glSecondaryColor3ubEXT");
  glad_glSecondaryColor3ubvEXT =
      (PFNGLSECONDARYCOLOR3UBVEXTPROC)load("glSecondaryColor3ubvEXT");
  glad_glSecondaryColor3uiEXT =
      (PFNGLSECONDARYCOLOR3UIEXTPROC)load("glSecondaryColor3uiEXT");
  glad_glSecondaryColor3uivEXT =
      (PFNGLSECONDARYCOLOR3UIVEXTPROC)load("glSecondaryColor3uivEXT");
  glad_glSecondaryColor3usEXT =
      (PFNGLSECONDARYCOLOR3USEXTPROC)load("glSecondaryColor3usEXT");
  glad_glSecondaryColor3usvEXT =
      (PFNGLSECONDARYCOLOR3USVEXTPROC)load("glSecondaryColor3usvEXT");
  glad_glSecondaryColorPointerEXT =
      (PFNGLSECONDARYCOLORPOINTEREXTPROC)load("glSecondaryColorPointerEXT");
}
static void load_GL_EXT_semaphore(GLADloadproc load) {
  if (!GLAD_GL_EXT_semaphore) return;
  glad_glGetUnsignedBytevEXT =
      (PFNGLGETUNSIGNEDBYTEVEXTPROC)load("glGetUnsignedBytevEXT");
  glad_glGetUnsignedBytei_vEXT =
      (PFNGLGETUNSIGNEDBYTEI_VEXTPROC)load("glGetUnsignedBytei_vEXT");
  glad_glGenSemaphoresEXT =
      (PFNGLGENSEMAPHORESEXTPROC)load("glGenSemaphoresEXT");
  glad_glDeleteSemaphoresEXT =
      (PFNGLDELETESEMAPHORESEXTPROC)load("glDeleteSemaphoresEXT");
  glad_glIsSemaphoreEXT = (PFNGLISSEMAPHOREEXTPROC)load("glIsSemaphoreEXT");
  glad_glSemaphoreParameterui64vEXT =
      (PFNGLSEMAPHOREPARAMETERUI64VEXTPROC)load("glSemaphoreParameterui64vEXT");
  glad_glGetSemaphoreParameterui64vEXT =
      (PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC)load(
          "glGetSemaphoreParameterui64vEXT");
  glad_glWaitSemaphoreEXT =
      (PFNGLWAITSEMAPHOREEXTPROC)load("glWaitSemaphoreEXT");
  glad_glSignalSemaphoreEXT =
      (PFNGLSIGNALSEMAPHOREEXTPROC)load("glSignalSemaphoreEXT");
}
static void load_GL_EXT_semaphore_fd(GLADloadproc load) {
  if (!GLAD_GL_EXT_semaphore_fd) return;
  glad_glImportSemaphoreFdEXT =
      (PFNGLIMPORTSEMAPHOREFDEXTPROC)load("glImportSemaphoreFdEXT");
}
static void load_GL_EXT_semaphore_win32(GLADloadproc load) {
  if (!GLAD_GL_EXT_semaphore_win32) return;
  glad_glImportSemaphoreWin32HandleEXT =
      (PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC)load(
          "glImportSemaphoreWin32HandleEXT");
  glad_glImportSemaphoreWin32NameEXT =
      (PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC)load(
          "glImportSemaphoreWin32NameEXT");
}
static void load_GL_EXT_separate_shader_objects(GLADloadproc load) {
  if (!GLAD_GL_EXT_separate_shader_objects) return;
  glad_glUseShaderProgramEXT =
      (PFNGLUSESHADERPROGRAMEXTPROC)load("glUseShaderProgramEXT");
  glad_glActiveProgramEXT =
      (PFNGLACTIVEPROGRAMEXTPROC)load("glActiveProgramEXT");
  glad_glCreateShaderProgramEXT =
      (PFNGLCREATESHADERPROGRAMEXTPROC)load("glCreateShaderProgramEXT");
  glad_glActiveShaderProgramEXT =
      (PFNGLACTIVESHADERPROGRAMEXTPROC)load("glActiveShaderProgramEXT");
  glad_glBindProgramPipelineEXT =
      (PFNGLBINDPROGRAMPIPELINEEXTPROC)load("glBindProgramPipelineEXT");
  glad_glCreateShaderProgramvEXT =
      (PFNGLCREATESHADERPROGRAMVEXTPROC)load("glCreateShaderProgramvEXT");
  glad_glDeleteProgramPipelinesEXT =
      (PFNGLDELETEPROGRAMPIPELINESEXTPROC)load("glDeleteProgramPipelinesEXT");
  glad_glGenProgramPipelinesEXT =
      (PFNGLGENPROGRAMPIPELINESEXTPROC)load("glGenProgramPipelinesEXT");
  glad_glGetProgramPipelineInfoLogEXT =
      (PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)load(
          "glGetProgramPipelineInfoLogEXT");
  glad_glGetProgramPipelineivEXT =
      (PFNGLGETPROGRAMPIPELINEIVEXTPROC)load("glGetProgramPipelineivEXT");
  glad_glIsProgramPipelineEXT =
      (PFNGLISPROGRAMPIPELINEEXTPROC)load("glIsProgramPipelineEXT");
  glad_glProgramParameteriEXT =
      (PFNGLPROGRAMPARAMETERIEXTPROC)load("glProgramParameteriEXT");
  glad_glProgramUniform1fEXT =
      (PFNGLPROGRAMUNIFORM1FEXTPROC)load("glProgramUniform1fEXT");
  glad_glProgramUniform1fvEXT =
      (PFNGLPROGRAMUNIFORM1FVEXTPROC)load("glProgramUniform1fvEXT");
  glad_glProgramUniform1iEXT =
      (PFNGLPROGRAMUNIFORM1IEXTPROC)load("glProgramUniform1iEXT");
  glad_glProgramUniform1ivEXT =
      (PFNGLPROGRAMUNIFORM1IVEXTPROC)load("glProgramUniform1ivEXT");
  glad_glProgramUniform2fEXT =
      (PFNGLPROGRAMUNIFORM2FEXTPROC)load("glProgramUniform2fEXT");
  glad_glProgramUniform2fvEXT =
      (PFNGLPROGRAMUNIFORM2FVEXTPROC)load("glProgramUniform2fvEXT");
  glad_glProgramUniform2iEXT =
      (PFNGLPROGRAMUNIFORM2IEXTPROC)load("glProgramUniform2iEXT");
  glad_glProgramUniform2ivEXT =
      (PFNGLPROGRAMUNIFORM2IVEXTPROC)load("glProgramUniform2ivEXT");
  glad_glProgramUniform3fEXT =
      (PFNGLPROGRAMUNIFORM3FEXTPROC)load("glProgramUniform3fEXT");
  glad_glProgramUniform3fvEXT =
      (PFNGLPROGRAMUNIFORM3FVEXTPROC)load("glProgramUniform3fvEXT");
  glad_glProgramUniform3iEXT =
      (PFNGLPROGRAMUNIFORM3IEXTPROC)load("glProgramUniform3iEXT");
  glad_glProgramUniform3ivEXT =
      (PFNGLPROGRAMUNIFORM3IVEXTPROC)load("glProgramUniform3ivEXT");
  glad_glProgramUniform4fEXT =
      (PFNGLPROGRAMUNIFORM4FEXTPROC)load("glProgramUniform4fEXT");
  glad_glProgramUniform4fvEXT =
      (PFNGLPROGRAMUNIFORM4FVEXTPROC)load("glProgramUniform4fvEXT");
  glad_glProgramUniform4iEXT =
      (PFNGLPROGRAMUNIFORM4IEXTPROC)load("glProgramUniform4iEXT");
  glad_glProgramUniform4ivEXT =
      (PFNGLPROGRAMUNIFORM4IVEXTPROC)load("glProgramUniform4ivEXT");
  glad_glProgramUniformMatrix2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)load("glProgramUniformMatrix2fvEXT");
  glad_glProgramUniformMatrix3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)load("glProgramUniformMatrix3fvEXT");
  glad_glProgramUniformMatrix4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
  glad_glUseProgramStagesEXT =
      (PFNGLUSEPROGRAMSTAGESEXTPROC)load("glUseProgramStagesEXT");
  glad_glValidateProgramPipelineEXT =
      (PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)load("glValidateProgramPipelineEXT");
  glad_glProgramUniform1uiEXT =
      (PFNGLPROGRAMUNIFORM1UIEXTPROC)load("glProgramUniform1uiEXT");
  glad_glProgramUniform2uiEXT =
      (PFNGLPROGRAMUNIFORM2UIEXTPROC)load("glProgramUniform2uiEXT");
  glad_glProgramUniform3uiEXT =
      (PFNGLPROGRAMUNIFORM3UIEXTPROC)load("glProgramUniform3uiEXT");
  glad_glProgramUniform4uiEXT =
      (PFNGLPROGRAMUNIFORM4UIEXTPROC)load("glProgramUniform4uiEXT");
  glad_glProgramUniform1uivEXT =
      (PFNGLPROGRAMUNIFORM1UIVEXTPROC)load("glProgramUniform1uivEXT");
  glad_glProgramUniform2uivEXT =
      (PFNGLPROGRAMUNIFORM2UIVEXTPROC)load("glProgramUniform2uivEXT");
  glad_glProgramUniform3uivEXT =
      (PFNGLPROGRAMUNIFORM3UIVEXTPROC)load("glProgramUniform3uivEXT");
  glad_glProgramUniform4uivEXT =
      (PFNGLPROGRAMUNIFORM4UIVEXTPROC)load("glProgramUniform4uivEXT");
  glad_glProgramUniformMatrix4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
  glad_glProgramUniformMatrix2x3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)load(
          "glProgramUniformMatrix2x3fvEXT");
  glad_glProgramUniformMatrix3x2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)load(
          "glProgramUniformMatrix3x2fvEXT");
  glad_glProgramUniformMatrix2x4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)load(
          "glProgramUniformMatrix2x4fvEXT");
  glad_glProgramUniformMatrix4x2fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)load(
          "glProgramUniformMatrix4x2fvEXT");
  glad_glProgramUniformMatrix3x4fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)load(
          "glProgramUniformMatrix3x4fvEXT");
  glad_glProgramUniformMatrix4x3fvEXT =
      (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)load(
          "glProgramUniformMatrix4x3fvEXT");
}
static void load_GL_EXT_shader_framebuffer_fetch_non_coherent(
    GLADloadproc load) {
  if (!GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent) return;
  glad_glFramebufferFetchBarrierEXT =
      (PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC)load("glFramebufferFetchBarrierEXT");
}
static void load_GL_EXT_shader_image_load_store(GLADloadproc load) {
  if (!GLAD_GL_EXT_shader_image_load_store) return;
  glad_glBindImageTextureEXT =
      (PFNGLBINDIMAGETEXTUREEXTPROC)load("glBindImageTextureEXT");
  glad_glMemoryBarrierEXT =
      (PFNGLMEMORYBARRIEREXTPROC)load("glMemoryBarrierEXT");
}
static void load_GL_EXT_stencil_clear_tag(GLADloadproc load) {
  if (!GLAD_GL_EXT_stencil_clear_tag) return;
  glad_glStencilClearTagEXT =
      (PFNGLSTENCILCLEARTAGEXTPROC)load("glStencilClearTagEXT");
}
static void load_GL_EXT_stencil_two_side(GLADloadproc load) {
  if (!GLAD_GL_EXT_stencil_two_side) return;
  glad_glActiveStencilFaceEXT =
      (PFNGLACTIVESTENCILFACEEXTPROC)load("glActiveStencilFaceEXT");
}
static void load_GL_EXT_subtexture(GLADloadproc load) {
  if (!GLAD_GL_EXT_subtexture) return;
  glad_glTexSubImage1DEXT =
      (PFNGLTEXSUBIMAGE1DEXTPROC)load("glTexSubImage1DEXT");
  glad_glTexSubImage2DEXT =
      (PFNGLTEXSUBIMAGE2DEXTPROC)load("glTexSubImage2DEXT");
}
static void load_GL_EXT_texture3D(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture3D) return;
  glad_glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)load("glTexImage3DEXT");
  glad_glTexSubImage3DEXT =
      (PFNGLTEXSUBIMAGE3DEXTPROC)load("glTexSubImage3DEXT");
}
static void load_GL_EXT_texture_array(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_array) return;
  glad_glFramebufferTextureLayerEXT =
      (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)load("glFramebufferTextureLayerEXT");
}
static void load_GL_EXT_texture_buffer_object(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_buffer_object) return;
  glad_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)load("glTexBufferEXT");
}
static void load_GL_EXT_texture_integer(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_integer) return;
  glad_glTexParameterIivEXT =
      (PFNGLTEXPARAMETERIIVEXTPROC)load("glTexParameterIivEXT");
  glad_glTexParameterIuivEXT =
      (PFNGLTEXPARAMETERIUIVEXTPROC)load("glTexParameterIuivEXT");
  glad_glGetTexParameterIivEXT =
      (PFNGLGETTEXPARAMETERIIVEXTPROC)load("glGetTexParameterIivEXT");
  glad_glGetTexParameterIuivEXT =
      (PFNGLGETTEXPARAMETERIUIVEXTPROC)load("glGetTexParameterIuivEXT");
  glad_glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)load("glClearColorIiEXT");
  glad_glClearColorIuiEXT =
      (PFNGLCLEARCOLORIUIEXTPROC)load("glClearColorIuiEXT");
}
static void load_GL_EXT_texture_object(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_object) return;
  glad_glAreTexturesResidentEXT =
      (PFNGLARETEXTURESRESIDENTEXTPROC)load("glAreTexturesResidentEXT");
  glad_glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)load("glBindTextureEXT");
  glad_glDeleteTexturesEXT =
      (PFNGLDELETETEXTURESEXTPROC)load("glDeleteTexturesEXT");
  glad_glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)load("glGenTexturesEXT");
  glad_glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)load("glIsTextureEXT");
  glad_glPrioritizeTexturesEXT =
      (PFNGLPRIORITIZETEXTURESEXTPROC)load("glPrioritizeTexturesEXT");
}
static void load_GL_EXT_texture_perturb_normal(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_perturb_normal) return;
  glad_glTextureNormalEXT =
      (PFNGLTEXTURENORMALEXTPROC)load("glTextureNormalEXT");
}
static void load_GL_EXT_timer_query(GLADloadproc load) {
  if (!GLAD_GL_EXT_timer_query) return;
  glad_glGetQueryObjecti64vEXT =
      (PFNGLGETQUERYOBJECTI64VEXTPROC)load("glGetQueryObjecti64vEXT");
  glad_glGetQueryObjectui64vEXT =
      (PFNGLGETQUERYOBJECTUI64VEXTPROC)load("glGetQueryObjectui64vEXT");
}
static void load_GL_EXT_transform_feedback(GLADloadproc load) {
  if (!GLAD_GL_EXT_transform_feedback) return;
  glad_glBeginTransformFeedbackEXT =
      (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)load("glBeginTransformFeedbackEXT");
  glad_glEndTransformFeedbackEXT =
      (PFNGLENDTRANSFORMFEEDBACKEXTPROC)load("glEndTransformFeedbackEXT");
  glad_glBindBufferRangeEXT =
      (PFNGLBINDBUFFERRANGEEXTPROC)load("glBindBufferRangeEXT");
  glad_glBindBufferOffsetEXT =
      (PFNGLBINDBUFFEROFFSETEXTPROC)load("glBindBufferOffsetEXT");
  glad_glBindBufferBaseEXT =
      (PFNGLBINDBUFFERBASEEXTPROC)load("glBindBufferBaseEXT");
  glad_glTransformFeedbackVaryingsEXT =
      (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)load(
          "glTransformFeedbackVaryingsEXT");
  glad_glGetTransformFeedbackVaryingEXT =
      (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)load(
          "glGetTransformFeedbackVaryingEXT");
}
static void load_GL_EXT_vertex_array(GLADloadproc load) {
  if (!GLAD_GL_EXT_vertex_array) return;
  glad_glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)load("glArrayElementEXT");
  glad_glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)load("glColorPointerEXT");
  glad_glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)load("glDrawArraysEXT");
  glad_glEdgeFlagPointerEXT =
      (PFNGLEDGEFLAGPOINTEREXTPROC)load("glEdgeFlagPointerEXT");
  glad_glGetPointervEXT = (PFNGLGETPOINTERVEXTPROC)load("glGetPointervEXT");
  glad_glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)load("glIndexPointerEXT");
  glad_glNormalPointerEXT =
      (PFNGLNORMALPOINTEREXTPROC)load("glNormalPointerEXT");
  glad_glTexCoordPointerEXT =
      (PFNGLTEXCOORDPOINTEREXTPROC)load("glTexCoordPointerEXT");
  glad_glVertexPointerEXT =
      (PFNGLVERTEXPOINTEREXTPROC)load("glVertexPointerEXT");
}
static void load_GL_EXT_vertex_attrib_64bit(GLADloadproc load) {
  if (!GLAD_GL_EXT_vertex_attrib_64bit) return;
  glad_glVertexAttribL1dEXT =
      (PFNGLVERTEXATTRIBL1DEXTPROC)load("glVertexAttribL1dEXT");
  glad_glVertexAttribL2dEXT =
      (PFNGLVERTEXATTRIBL2DEXTPROC)load("glVertexAttribL2dEXT");
  glad_glVertexAttribL3dEXT =
      (PFNGLVERTEXATTRIBL3DEXTPROC)load("glVertexAttribL3dEXT");
  glad_glVertexAttribL4dEXT =
      (PFNGLVERTEXATTRIBL4DEXTPROC)load("glVertexAttribL4dEXT");
  glad_glVertexAttribL1dvEXT =
      (PFNGLVERTEXATTRIBL1DVEXTPROC)load("glVertexAttribL1dvEXT");
  glad_glVertexAttribL2dvEXT =
      (PFNGLVERTEXATTRIBL2DVEXTPROC)load("glVertexAttribL2dvEXT");
  glad_glVertexAttribL3dvEXT =
      (PFNGLVERTEXATTRIBL3DVEXTPROC)load("glVertexAttribL3dvEXT");
  glad_glVertexAttribL4dvEXT =
      (PFNGLVERTEXATTRIBL4DVEXTPROC)load("glVertexAttribL4dvEXT");
  glad_glVertexAttribLPointerEXT =
      (PFNGLVERTEXATTRIBLPOINTEREXTPROC)load("glVertexAttribLPointerEXT");
  glad_glGetVertexAttribLdvEXT =
      (PFNGLGETVERTEXATTRIBLDVEXTPROC)load("glGetVertexAttribLdvEXT");
}
static void load_GL_EXT_vertex_shader(GLADloadproc load) {
  if (!GLAD_GL_EXT_vertex_shader) return;
  glad_glBeginVertexShaderEXT =
      (PFNGLBEGINVERTEXSHADEREXTPROC)load("glBeginVertexShaderEXT");
  glad_glEndVertexShaderEXT =
      (PFNGLENDVERTEXSHADEREXTPROC)load("glEndVertexShaderEXT");
  glad_glBindVertexShaderEXT =
      (PFNGLBINDVERTEXSHADEREXTPROC)load("glBindVertexShaderEXT");
  glad_glGenVertexShadersEXT =
      (PFNGLGENVERTEXSHADERSEXTPROC)load("glGenVertexShadersEXT");
  glad_glDeleteVertexShaderEXT =
      (PFNGLDELETEVERTEXSHADEREXTPROC)load("glDeleteVertexShaderEXT");
  glad_glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)load("glShaderOp1EXT");
  glad_glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)load("glShaderOp2EXT");
  glad_glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)load("glShaderOp3EXT");
  glad_glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)load("glSwizzleEXT");
  glad_glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)load("glWriteMaskEXT");
  glad_glInsertComponentEXT =
      (PFNGLINSERTCOMPONENTEXTPROC)load("glInsertComponentEXT");
  glad_glExtractComponentEXT =
      (PFNGLEXTRACTCOMPONENTEXTPROC)load("glExtractComponentEXT");
  glad_glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)load("glGenSymbolsEXT");
  glad_glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)load("glSetInvariantEXT");
  glad_glSetLocalConstantEXT =
      (PFNGLSETLOCALCONSTANTEXTPROC)load("glSetLocalConstantEXT");
  glad_glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)load("glVariantbvEXT");
  glad_glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)load("glVariantsvEXT");
  glad_glVariantivEXT = (PFNGLVARIANTIVEXTPROC)load("glVariantivEXT");
  glad_glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)load("glVariantfvEXT");
  glad_glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)load("glVariantdvEXT");
  glad_glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)load("glVariantubvEXT");
  glad_glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)load("glVariantusvEXT");
  glad_glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)load("glVariantuivEXT");
  glad_glVariantPointerEXT =
      (PFNGLVARIANTPOINTEREXTPROC)load("glVariantPointerEXT");
  glad_glEnableVariantClientStateEXT =
      (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)load(
          "glEnableVariantClientStateEXT");
  glad_glDisableVariantClientStateEXT =
      (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)load(
          "glDisableVariantClientStateEXT");
  glad_glBindLightParameterEXT =
      (PFNGLBINDLIGHTPARAMETEREXTPROC)load("glBindLightParameterEXT");
  glad_glBindMaterialParameterEXT =
      (PFNGLBINDMATERIALPARAMETEREXTPROC)load("glBindMaterialParameterEXT");
  glad_glBindTexGenParameterEXT =
      (PFNGLBINDTEXGENPARAMETEREXTPROC)load("glBindTexGenParameterEXT");
  glad_glBindTextureUnitParameterEXT =
      (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)load(
          "glBindTextureUnitParameterEXT");
  glad_glBindParameterEXT =
      (PFNGLBINDPARAMETEREXTPROC)load("glBindParameterEXT");
  glad_glIsVariantEnabledEXT =
      (PFNGLISVARIANTENABLEDEXTPROC)load("glIsVariantEnabledEXT");
  glad_glGetVariantBooleanvEXT =
      (PFNGLGETVARIANTBOOLEANVEXTPROC)load("glGetVariantBooleanvEXT");
  glad_glGetVariantIntegervEXT =
      (PFNGLGETVARIANTINTEGERVEXTPROC)load("glGetVariantIntegervEXT");
  glad_glGetVariantFloatvEXT =
      (PFNGLGETVARIANTFLOATVEXTPROC)load("glGetVariantFloatvEXT");
  glad_glGetVariantPointervEXT =
      (PFNGLGETVARIANTPOINTERVEXTPROC)load("glGetVariantPointervEXT");
  glad_glGetInvariantBooleanvEXT =
      (PFNGLGETINVARIANTBOOLEANVEXTPROC)load("glGetInvariantBooleanvEXT");
  glad_glGetInvariantIntegervEXT =
      (PFNGLGETINVARIANTINTEGERVEXTPROC)load("glGetInvariantIntegervEXT");
  glad_glGetInvariantFloatvEXT =
      (PFNGLGETINVARIANTFLOATVEXTPROC)load("glGetInvariantFloatvEXT");
  glad_glGetLocalConstantBooleanvEXT =
      (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)load(
          "glGetLocalConstantBooleanvEXT");
  glad_glGetLocalConstantIntegervEXT =
      (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)load(
          "glGetLocalConstantIntegervEXT");
  glad_glGetLocalConstantFloatvEXT =
      (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)load("glGetLocalConstantFloatvEXT");
}
static void load_GL_EXT_vertex_weighting(GLADloadproc load) {
  if (!GLAD_GL_EXT_vertex_weighting) return;
  glad_glVertexWeightfEXT =
      (PFNGLVERTEXWEIGHTFEXTPROC)load("glVertexWeightfEXT");
  glad_glVertexWeightfvEXT =
      (PFNGLVERTEXWEIGHTFVEXTPROC)load("glVertexWeightfvEXT");
  glad_glVertexWeightPointerEXT =
      (PFNGLVERTEXWEIGHTPOINTEREXTPROC)load("glVertexWeightPointerEXT");
}
static void load_GL_EXT_win32_keyed_mutex(GLADloadproc load) {
  if (!GLAD_GL_EXT_win32_keyed_mutex) return;
  glad_glAcquireKeyedMutexWin32EXT =
      (PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC)load("glAcquireKeyedMutexWin32EXT");
  glad_glReleaseKeyedMutexWin32EXT =
      (PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC)load("glReleaseKeyedMutexWin32EXT");
}
static void load_GL_EXT_window_rectangles(GLADloadproc load) {
  if (!GLAD_GL_EXT_window_rectangles) return;
  glad_glWindowRectanglesEXT =
      (PFNGLWINDOWRECTANGLESEXTPROC)load("glWindowRectanglesEXT");
}
static void load_GL_EXT_x11_sync_object(GLADloadproc load) {
  if (!GLAD_GL_EXT_x11_sync_object) return;
  glad_glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)load("glImportSyncEXT");
}
static void load_GL_KHR_blend_equation_advanced(GLADloadproc load) {
  if (!GLAD_GL_KHR_blend_equation_advanced) return;
  glad_glBlendBarrierKHR = (PFNGLBLENDBARRIERKHRPROC)load("glBlendBarrierKHR");
}
static void load_GL_KHR_debug(GLADloadproc load) {
  if (!GLAD_GL_KHR_debug) return;
  glad_glDebugMessageControl =
      (PFNGLDEBUGMESSAGECONTROLPROC)load("glDebugMessageControl");
  glad_glDebugMessageInsert =
      (PFNGLDEBUGMESSAGEINSERTPROC)load("glDebugMessageInsert");
  glad_glDebugMessageCallback =
      (PFNGLDEBUGMESSAGECALLBACKPROC)load("glDebugMessageCallback");
  glad_glGetDebugMessageLog =
      (PFNGLGETDEBUGMESSAGELOGPROC)load("glGetDebugMessageLog");
  glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load("glPushDebugGroup");
  glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load("glPopDebugGroup");
  glad_glObjectLabel = (PFNGLOBJECTLABELPROC)load("glObjectLabel");
  glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load("glGetObjectLabel");
  glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load("glObjectPtrLabel");
  glad_glGetObjectPtrLabel =
      (PFNGLGETOBJECTPTRLABELPROC)load("glGetObjectPtrLabel");
  glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
  glad_glDebugMessageControlKHR =
      (PFNGLDEBUGMESSAGECONTROLKHRPROC)load("glDebugMessageControlKHR");
  glad_glDebugMessageInsertKHR =
      (PFNGLDEBUGMESSAGEINSERTKHRPROC)load("glDebugMessageInsertKHR");
  glad_glDebugMessageCallbackKHR =
      (PFNGLDEBUGMESSAGECALLBACKKHRPROC)load("glDebugMessageCallbackKHR");
  glad_glGetDebugMessageLogKHR =
      (PFNGLGETDEBUGMESSAGELOGKHRPROC)load("glGetDebugMessageLogKHR");
  glad_glPushDebugGroupKHR =
      (PFNGLPUSHDEBUGGROUPKHRPROC)load("glPushDebugGroupKHR");
  glad_glPopDebugGroupKHR =
      (PFNGLPOPDEBUGGROUPKHRPROC)load("glPopDebugGroupKHR");
  glad_glObjectLabelKHR = (PFNGLOBJECTLABELKHRPROC)load("glObjectLabelKHR");
  glad_glGetObjectLabelKHR =
      (PFNGLGETOBJECTLABELKHRPROC)load("glGetObjectLabelKHR");
  glad_glObjectPtrLabelKHR =
      (PFNGLOBJECTPTRLABELKHRPROC)load("glObjectPtrLabelKHR");
  glad_glGetObjectPtrLabelKHR =
      (PFNGLGETOBJECTPTRLABELKHRPROC)load("glGetObjectPtrLabelKHR");
  glad_glGetPointervKHR = (PFNGLGETPOINTERVKHRPROC)load("glGetPointervKHR");
}
static void load_GL_KHR_parallel_shader_compile(GLADloadproc load) {
  if (!GLAD_GL_KHR_parallel_shader_compile) return;
  glad_glMaxShaderCompilerThreadsKHR =
      (PFNGLMAXSHADERCOMPILERTHREADSKHRPROC)load(
          "glMaxShaderCompilerThreadsKHR");
}
static void load_GL_KHR_robustness(GLADloadproc load) {
  if (!GLAD_GL_KHR_robustness) return;
  glad_glGetGraphicsResetStatus =
      (PFNGLGETGRAPHICSRESETSTATUSPROC)load("glGetGraphicsResetStatus");
  glad_glReadnPixels = (PFNGLREADNPIXELSPROC)load("glReadnPixels");
  glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)load("glGetnUniformfv");
  glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)load("glGetnUniformiv");
  glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)load("glGetnUniformuiv");
  glad_glGetGraphicsResetStatusKHR =
      (PFNGLGETGRAPHICSRESETSTATUSKHRPROC)load("glGetGraphicsResetStatusKHR");
  glad_glReadnPixelsKHR = (PFNGLREADNPIXELSKHRPROC)load("glReadnPixelsKHR");
  glad_glGetnUniformfvKHR =
      (PFNGLGETNUNIFORMFVKHRPROC)load("glGetnUniformfvKHR");
  glad_glGetnUniformivKHR =
      (PFNGLGETNUNIFORMIVKHRPROC)load("glGetnUniformivKHR");
  glad_glGetnUniformuivKHR =
      (PFNGLGETNUNIFORMUIVKHRPROC)load("glGetnUniformuivKHR");
}
static void load_GL_OES_byte_coordinates(GLADloadproc load) {
  if (!GLAD_GL_OES_byte_coordinates) return;
  glad_glMultiTexCoord1bOES =
      (PFNGLMULTITEXCOORD1BOESPROC)load("glMultiTexCoord1bOES");
  glad_glMultiTexCoord1bvOES =
      (PFNGLMULTITEXCOORD1BVOESPROC)load("glMultiTexCoord1bvOES");
  glad_glMultiTexCoord2bOES =
      (PFNGLMULTITEXCOORD2BOESPROC)load("glMultiTexCoord2bOES");
  glad_glMultiTexCoord2bvOES =
      (PFNGLMULTITEXCOORD2BVOESPROC)load("glMultiTexCoord2bvOES");
  glad_glMultiTexCoord3bOES =
      (PFNGLMULTITEXCOORD3BOESPROC)load("glMultiTexCoord3bOES");
  glad_glMultiTexCoord3bvOES =
      (PFNGLMULTITEXCOORD3BVOESPROC)load("glMultiTexCoord3bvOES");
  glad_glMultiTexCoord4bOES =
      (PFNGLMULTITEXCOORD4BOESPROC)load("glMultiTexCoord4bOES");
  glad_glMultiTexCoord4bvOES =
      (PFNGLMULTITEXCOORD4BVOESPROC)load("glMultiTexCoord4bvOES");
  glad_glTexCoord1bOES = (PFNGLTEXCOORD1BOESPROC)load("glTexCoord1bOES");
  glad_glTexCoord1bvOES = (PFNGLTEXCOORD1BVOESPROC)load("glTexCoord1bvOES");
  glad_glTexCoord2bOES = (PFNGLTEXCOORD2BOESPROC)load("glTexCoord2bOES");
  glad_glTexCoord2bvOES = (PFNGLTEXCOORD2BVOESPROC)load("glTexCoord2bvOES");
  glad_glTexCoord3bOES = (PFNGLTEXCOORD3BOESPROC)load("glTexCoord3bOES");
  glad_glTexCoord3bvOES = (PFNGLTEXCOORD3BVOESPROC)load("glTexCoord3bvOES");
  glad_glTexCoord4bOES = (PFNGLTEXCOORD4BOESPROC)load("glTexCoord4bOES");
  glad_glTexCoord4bvOES = (PFNGLTEXCOORD4BVOESPROC)load("glTexCoord4bvOES");
  glad_glVertex2bOES = (PFNGLVERTEX2BOESPROC)load("glVertex2bOES");
  glad_glVertex2bvOES = (PFNGLVERTEX2BVOESPROC)load("glVertex2bvOES");
  glad_glVertex3bOES = (PFNGLVERTEX3BOESPROC)load("glVertex3bOES");
  glad_glVertex3bvOES = (PFNGLVERTEX3BVOESPROC)load("glVertex3bvOES");
  glad_glVertex4bOES = (PFNGLVERTEX4BOESPROC)load("glVertex4bOES");
  glad_glVertex4bvOES = (PFNGLVERTEX4BVOESPROC)load("glVertex4bvOES");
}
static void load_GL_OES_fixed_point(GLADloadproc load) {
  if (!GLAD_GL_OES_fixed_point) return;
  glad_glAlphaFuncxOES = (PFNGLALPHAFUNCXOESPROC)load("glAlphaFuncxOES");
  glad_glClearColorxOES = (PFNGLCLEARCOLORXOESPROC)load("glClearColorxOES");
  glad_glClearDepthxOES = (PFNGLCLEARDEPTHXOESPROC)load("glClearDepthxOES");
  glad_glClipPlanexOES = (PFNGLCLIPPLANEXOESPROC)load("glClipPlanexOES");
  glad_glColor4xOES = (PFNGLCOLOR4XOESPROC)load("glColor4xOES");
  glad_glDepthRangexOES = (PFNGLDEPTHRANGEXOESPROC)load("glDepthRangexOES");
  glad_glFogxOES = (PFNGLFOGXOESPROC)load("glFogxOES");
  glad_glFogxvOES = (PFNGLFOGXVOESPROC)load("glFogxvOES");
  glad_glFrustumxOES = (PFNGLFRUSTUMXOESPROC)load("glFrustumxOES");
  glad_glGetClipPlanexOES =
      (PFNGLGETCLIPPLANEXOESPROC)load("glGetClipPlanexOES");
  glad_glGetFixedvOES = (PFNGLGETFIXEDVOESPROC)load("glGetFixedvOES");
  glad_glGetTexEnvxvOES = (PFNGLGETTEXENVXVOESPROC)load("glGetTexEnvxvOES");
  glad_glGetTexParameterxvOES =
      (PFNGLGETTEXPARAMETERXVOESPROC)load("glGetTexParameterxvOES");
  glad_glLightModelxOES = (PFNGLLIGHTMODELXOESPROC)load("glLightModelxOES");
  glad_glLightModelxvOES = (PFNGLLIGHTMODELXVOESPROC)load("glLightModelxvOES");
  glad_glLightxOES = (PFNGLLIGHTXOESPROC)load("glLightxOES");
  glad_glLightxvOES = (PFNGLLIGHTXVOESPROC)load("glLightxvOES");
  glad_glLineWidthxOES = (PFNGLLINEWIDTHXOESPROC)load("glLineWidthxOES");
  glad_glLoadMatrixxOES = (PFNGLLOADMATRIXXOESPROC)load("glLoadMatrixxOES");
  glad_glMaterialxOES = (PFNGLMATERIALXOESPROC)load("glMaterialxOES");
  glad_glMaterialxvOES = (PFNGLMATERIALXVOESPROC)load("glMaterialxvOES");
  glad_glMultMatrixxOES = (PFNGLMULTMATRIXXOESPROC)load("glMultMatrixxOES");
  glad_glMultiTexCoord4xOES =
      (PFNGLMULTITEXCOORD4XOESPROC)load("glMultiTexCoord4xOES");
  glad_glNormal3xOES = (PFNGLNORMAL3XOESPROC)load("glNormal3xOES");
  glad_glOrthoxOES = (PFNGLORTHOXOESPROC)load("glOrthoxOES");
  glad_glPointParameterxvOES =
      (PFNGLPOINTPARAMETERXVOESPROC)load("glPointParameterxvOES");
  glad_glPointSizexOES = (PFNGLPOINTSIZEXOESPROC)load("glPointSizexOES");
  glad_glPolygonOffsetxOES =
      (PFNGLPOLYGONOFFSETXOESPROC)load("glPolygonOffsetxOES");
  glad_glRotatexOES = (PFNGLROTATEXOESPROC)load("glRotatexOES");
  glad_glScalexOES = (PFNGLSCALEXOESPROC)load("glScalexOES");
  glad_glTexEnvxOES = (PFNGLTEXENVXOESPROC)load("glTexEnvxOES");
  glad_glTexEnvxvOES = (PFNGLTEXENVXVOESPROC)load("glTexEnvxvOES");
  glad_glTexParameterxOES =
      (PFNGLTEXPARAMETERXOESPROC)load("glTexParameterxOES");
  glad_glTexParameterxvOES =
      (PFNGLTEXPARAMETERXVOESPROC)load("glTexParameterxvOES");
  glad_glTranslatexOES = (PFNGLTRANSLATEXOESPROC)load("glTranslatexOES");
  glad_glGetLightxvOES = (PFNGLGETLIGHTXVOESPROC)load("glGetLightxvOES");
  glad_glGetMaterialxvOES =
      (PFNGLGETMATERIALXVOESPROC)load("glGetMaterialxvOES");
  glad_glPointParameterxOES =
      (PFNGLPOINTPARAMETERXOESPROC)load("glPointParameterxOES");
  glad_glSampleCoveragexOES =
      (PFNGLSAMPLECOVERAGEXOESPROC)load("glSampleCoveragexOES");
  glad_glAccumxOES = (PFNGLACCUMXOESPROC)load("glAccumxOES");
  glad_glBitmapxOES = (PFNGLBITMAPXOESPROC)load("glBitmapxOES");
  glad_glBlendColorxOES = (PFNGLBLENDCOLORXOESPROC)load("glBlendColorxOES");
  glad_glClearAccumxOES = (PFNGLCLEARACCUMXOESPROC)load("glClearAccumxOES");
  glad_glColor3xOES = (PFNGLCOLOR3XOESPROC)load("glColor3xOES");
  glad_glColor3xvOES = (PFNGLCOLOR3XVOESPROC)load("glColor3xvOES");
  glad_glColor4xvOES = (PFNGLCOLOR4XVOESPROC)load("glColor4xvOES");
  glad_glConvolutionParameterxOES =
      (PFNGLCONVOLUTIONPARAMETERXOESPROC)load("glConvolutionParameterxOES");
  glad_glConvolutionParameterxvOES =
      (PFNGLCONVOLUTIONPARAMETERXVOESPROC)load("glConvolutionParameterxvOES");
  glad_glEvalCoord1xOES = (PFNGLEVALCOORD1XOESPROC)load("glEvalCoord1xOES");
  glad_glEvalCoord1xvOES = (PFNGLEVALCOORD1XVOESPROC)load("glEvalCoord1xvOES");
  glad_glEvalCoord2xOES = (PFNGLEVALCOORD2XOESPROC)load("glEvalCoord2xOES");
  glad_glEvalCoord2xvOES = (PFNGLEVALCOORD2XVOESPROC)load("glEvalCoord2xvOES");
  glad_glFeedbackBufferxOES =
      (PFNGLFEEDBACKBUFFERXOESPROC)load("glFeedbackBufferxOES");
  glad_glGetConvolutionParameterxvOES =
      (PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)load(
          "glGetConvolutionParameterxvOES");
  glad_glGetHistogramParameterxvOES =
      (PFNGLGETHISTOGRAMPARAMETERXVOESPROC)load("glGetHistogramParameterxvOES");
  glad_glGetLightxOES = (PFNGLGETLIGHTXOESPROC)load("glGetLightxOES");
  glad_glGetMapxvOES = (PFNGLGETMAPXVOESPROC)load("glGetMapxvOES");
  glad_glGetMaterialxOES = (PFNGLGETMATERIALXOESPROC)load("glGetMaterialxOES");
  glad_glGetPixelMapxv = (PFNGLGETPIXELMAPXVPROC)load("glGetPixelMapxv");
  glad_glGetTexGenxvOES = (PFNGLGETTEXGENXVOESPROC)load("glGetTexGenxvOES");
  glad_glGetTexLevelParameterxvOES =
      (PFNGLGETTEXLEVELPARAMETERXVOESPROC)load("glGetTexLevelParameterxvOES");
  glad_glIndexxOES = (PFNGLINDEXXOESPROC)load("glIndexxOES");
  glad_glIndexxvOES = (PFNGLINDEXXVOESPROC)load("glIndexxvOES");
  glad_glLoadTransposeMatrixxOES =
      (PFNGLLOADTRANSPOSEMATRIXXOESPROC)load("glLoadTransposeMatrixxOES");
  glad_glMap1xOES = (PFNGLMAP1XOESPROC)load("glMap1xOES");
  glad_glMap2xOES = (PFNGLMAP2XOESPROC)load("glMap2xOES");
  glad_glMapGrid1xOES = (PFNGLMAPGRID1XOESPROC)load("glMapGrid1xOES");
  glad_glMapGrid2xOES = (PFNGLMAPGRID2XOESPROC)load("glMapGrid2xOES");
  glad_glMultTransposeMatrixxOES =
      (PFNGLMULTTRANSPOSEMATRIXXOESPROC)load("glMultTransposeMatrixxOES");
  glad_glMultiTexCoord1xOES =
      (PFNGLMULTITEXCOORD1XOESPROC)load("glMultiTexCoord1xOES");
  glad_glMultiTexCoord1xvOES =
      (PFNGLMULTITEXCOORD1XVOESPROC)load("glMultiTexCoord1xvOES");
  glad_glMultiTexCoord2xOES =
      (PFNGLMULTITEXCOORD2XOESPROC)load("glMultiTexCoord2xOES");
  glad_glMultiTexCoord2xvOES =
      (PFNGLMULTITEXCOORD2XVOESPROC)load("glMultiTexCoord2xvOES");
  glad_glMultiTexCoord3xOES =
      (PFNGLMULTITEXCOORD3XOESPROC)load("glMultiTexCoord3xOES");
  glad_glMultiTexCoord3xvOES =
      (PFNGLMULTITEXCOORD3XVOESPROC)load("glMultiTexCoord3xvOES");
  glad_glMultiTexCoord4xvOES =
      (PFNGLMULTITEXCOORD4XVOESPROC)load("glMultiTexCoord4xvOES");
  glad_glNormal3xvOES = (PFNGLNORMAL3XVOESPROC)load("glNormal3xvOES");
  glad_glPassThroughxOES = (PFNGLPASSTHROUGHXOESPROC)load("glPassThroughxOES");
  glad_glPixelMapx = (PFNGLPIXELMAPXPROC)load("glPixelMapx");
  glad_glPixelStorex = (PFNGLPIXELSTOREXPROC)load("glPixelStorex");
  glad_glPixelTransferxOES =
      (PFNGLPIXELTRANSFERXOESPROC)load("glPixelTransferxOES");
  glad_glPixelZoomxOES = (PFNGLPIXELZOOMXOESPROC)load("glPixelZoomxOES");
  glad_glPrioritizeTexturesxOES =
      (PFNGLPRIORITIZETEXTURESXOESPROC)load("glPrioritizeTexturesxOES");
  glad_glRasterPos2xOES = (PFNGLRASTERPOS2XOESPROC)load("glRasterPos2xOES");
  glad_glRasterPos2xvOES = (PFNGLRASTERPOS2XVOESPROC)load("glRasterPos2xvOES");
  glad_glRasterPos3xOES = (PFNGLRASTERPOS3XOESPROC)load("glRasterPos3xOES");
  glad_glRasterPos3xvOES = (PFNGLRASTERPOS3XVOESPROC)load("glRasterPos3xvOES");
  glad_glRasterPos4xOES = (PFNGLRASTERPOS4XOESPROC)load("glRasterPos4xOES");
  glad_glRasterPos4xvOES = (PFNGLRASTERPOS4XVOESPROC)load("glRasterPos4xvOES");
  glad_glRectxOES = (PFNGLRECTXOESPROC)load("glRectxOES");
  glad_glRectxvOES = (PFNGLRECTXVOESPROC)load("glRectxvOES");
  glad_glTexCoord1xOES = (PFNGLTEXCOORD1XOESPROC)load("glTexCoord1xOES");
  glad_glTexCoord1xvOES = (PFNGLTEXCOORD1XVOESPROC)load("glTexCoord1xvOES");
  glad_glTexCoord2xOES = (PFNGLTEXCOORD2XOESPROC)load("glTexCoord2xOES");
  glad_glTexCoord2xvOES = (PFNGLTEXCOORD2XVOESPROC)load("glTexCoord2xvOES");
  glad_glTexCoord3xOES = (PFNGLTEXCOORD3XOESPROC)load("glTexCoord3xOES");
  glad_glTexCoord3xvOES = (PFNGLTEXCOORD3XVOESPROC)load("glTexCoord3xvOES");
  glad_glTexCoord4xOES = (PFNGLTEXCOORD4XOESPROC)load("glTexCoord4xOES");
  glad_glTexCoord4xvOES = (PFNGLTEXCOORD4XVOESPROC)load("glTexCoord4xvOES");
  glad_glTexGenxOES = (PFNGLTEXGENXOESPROC)load("glTexGenxOES");
  glad_glTexGenxvOES = (PFNGLTEXGENXVOESPROC)load("glTexGenxvOES");
  glad_glVertex2xOES = (PFNGLVERTEX2XOESPROC)load("glVertex2xOES");
  glad_glVertex2xvOES = (PFNGLVERTEX2XVOESPROC)load("glVertex2xvOES");
  glad_glVertex3xOES = (PFNGLVERTEX3XOESPROC)load("glVertex3xOES");
  glad_glVertex3xvOES = (PFNGLVERTEX3XVOESPROC)load("glVertex3xvOES");
  glad_glVertex4xOES = (PFNGLVERTEX4XOESPROC)load("glVertex4xOES");
  glad_glVertex4xvOES = (PFNGLVERTEX4XVOESPROC)load("glVertex4xvOES");
}
static void load_GL_OES_query_matrix(GLADloadproc load) {
  if (!GLAD_GL_OES_query_matrix) return;
  glad_glQueryMatrixxOES = (PFNGLQUERYMATRIXXOESPROC)load("glQueryMatrixxOES");
}
static void load_GL_OES_single_precision(GLADloadproc load) {
  if (!GLAD_GL_OES_single_precision) return;
  glad_glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC)load("glClearDepthfOES");
  glad_glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC)load("glClipPlanefOES");
  glad_glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC)load("glDepthRangefOES");
  glad_glFrustumfOES = (PFNGLFRUSTUMFOESPROC)load("glFrustumfOES");
  glad_glGetClipPlanefOES =
      (PFNGLGETCLIPPLANEFOESPROC)load("glGetClipPlanefOES");
  glad_glOrthofOES = (PFNGLORTHOFOESPROC)load("glOrthofOES");
}
static int find_extensionsGL(void) {
  if (!get_exts()) return 0;
  GLAD_GL_EXT_422_pixels = has_ext("GL_EXT_422_pixels");
  GLAD_GL_EXT_EGL_image_storage = has_ext("GL_EXT_EGL_image_storage");
  GLAD_GL_EXT_EGL_sync = has_ext("GL_EXT_EGL_sync");
  GLAD_GL_EXT_abgr = has_ext("GL_EXT_abgr");
  GLAD_GL_EXT_bgra = has_ext("GL_EXT_bgra");
  GLAD_GL_EXT_bindable_uniform = has_ext("GL_EXT_bindable_uniform");
  GLAD_GL_EXT_blend_color = has_ext("GL_EXT_blend_color");
  GLAD_GL_EXT_blend_equation_separate =
      has_ext("GL_EXT_blend_equation_separate");
  GLAD_GL_EXT_blend_func_separate = has_ext("GL_EXT_blend_func_separate");
  GLAD_GL_EXT_blend_logic_op = has_ext("GL_EXT_blend_logic_op");
  GLAD_GL_EXT_blend_minmax = has_ext("GL_EXT_blend_minmax");
  GLAD_GL_EXT_blend_subtract = has_ext("GL_EXT_blend_subtract");
  GLAD_GL_EXT_clip_volume_hint = has_ext("GL_EXT_clip_volume_hint");
  GLAD_GL_EXT_cmyka = has_ext("GL_EXT_cmyka");
  GLAD_GL_EXT_color_subtable = has_ext("GL_EXT_color_subtable");
  GLAD_GL_EXT_compiled_vertex_array = has_ext("GL_EXT_compiled_vertex_array");
  GLAD_GL_EXT_convolution = has_ext("GL_EXT_convolution");
  GLAD_GL_EXT_coordinate_frame = has_ext("GL_EXT_coordinate_frame");
  GLAD_GL_EXT_copy_texture = has_ext("GL_EXT_copy_texture");
  GLAD_GL_EXT_cull_vertex = has_ext("GL_EXT_cull_vertex");
  GLAD_GL_EXT_debug_label = has_ext("GL_EXT_debug_label");
  GLAD_GL_EXT_debug_marker = has_ext("GL_EXT_debug_marker");
  GLAD_GL_EXT_depth_bounds_test = has_ext("GL_EXT_depth_bounds_test");
  GLAD_GL_EXT_direct_state_access = has_ext("GL_EXT_direct_state_access");
  GLAD_GL_EXT_draw_buffers2 = has_ext("GL_EXT_draw_buffers2");
  GLAD_GL_EXT_draw_instanced = has_ext("GL_EXT_draw_instanced");
  GLAD_GL_EXT_draw_range_elements = has_ext("GL_EXT_draw_range_elements");
  GLAD_GL_EXT_external_buffer = has_ext("GL_EXT_external_buffer");
  GLAD_GL_EXT_fog_coord = has_ext("GL_EXT_fog_coord");
  GLAD_GL_EXT_framebuffer_blit = has_ext("GL_EXT_framebuffer_blit");
  GLAD_GL_EXT_framebuffer_multisample =
      has_ext("GL_EXT_framebuffer_multisample");
  GLAD_GL_EXT_framebuffer_multisample_blit_scaled =
      has_ext("GL_EXT_framebuffer_multisample_blit_scaled");
  GLAD_GL_EXT_framebuffer_object = has_ext("GL_EXT_framebuffer_object");
  GLAD_GL_EXT_framebuffer_sRGB = has_ext("GL_EXT_framebuffer_sRGB");
  GLAD_GL_EXT_geometry_shader4 = has_ext("GL_EXT_geometry_shader4");
  GLAD_GL_EXT_gpu_program_parameters = has_ext("GL_EXT_gpu_program_parameters");
  GLAD_GL_EXT_gpu_shader4 = has_ext("GL_EXT_gpu_shader4");
  GLAD_GL_EXT_histogram = has_ext("GL_EXT_histogram");
  GLAD_GL_EXT_index_array_formats = has_ext("GL_EXT_index_array_formats");
  GLAD_GL_EXT_index_func = has_ext("GL_EXT_index_func");
  GLAD_GL_EXT_index_material = has_ext("GL_EXT_index_material");
  GLAD_GL_EXT_index_texture = has_ext("GL_EXT_index_texture");
  GLAD_GL_EXT_light_texture = has_ext("GL_EXT_light_texture");
  GLAD_GL_EXT_memory_object = has_ext("GL_EXT_memory_object");
  GLAD_GL_EXT_memory_object_fd = has_ext("GL_EXT_memory_object_fd");
  GLAD_GL_EXT_memory_object_win32 = has_ext("GL_EXT_memory_object_win32");
  GLAD_GL_EXT_misc_attribute = has_ext("GL_EXT_misc_attribute");
  GLAD_GL_EXT_multi_draw_arrays = has_ext("GL_EXT_multi_draw_arrays");
  GLAD_GL_EXT_multisample = has_ext("GL_EXT_multisample");
  GLAD_GL_EXT_multiview_tessellation_geometry_shader =
      has_ext("GL_EXT_multiview_tessellation_geometry_shader");
  GLAD_GL_EXT_multiview_texture_multisample =
      has_ext("GL_EXT_multiview_texture_multisample");
  GLAD_GL_EXT_multiview_timer_query = has_ext("GL_EXT_multiview_timer_query");
  GLAD_GL_EXT_packed_depth_stencil = has_ext("GL_EXT_packed_depth_stencil");
  GLAD_GL_EXT_packed_float = has_ext("GL_EXT_packed_float");
  GLAD_GL_EXT_packed_pixels = has_ext("GL_EXT_packed_pixels");
  GLAD_GL_EXT_paletted_texture = has_ext("GL_EXT_paletted_texture");
  GLAD_GL_EXT_pixel_buffer_object = has_ext("GL_EXT_pixel_buffer_object");
  GLAD_GL_EXT_pixel_transform = has_ext("GL_EXT_pixel_transform");
  GLAD_GL_EXT_pixel_transform_color_table =
      has_ext("GL_EXT_pixel_transform_color_table");
  GLAD_GL_EXT_point_parameters = has_ext("GL_EXT_point_parameters");
  GLAD_GL_EXT_polygon_offset = has_ext("GL_EXT_polygon_offset");
  GLAD_GL_EXT_polygon_offset_clamp = has_ext("GL_EXT_polygon_offset_clamp");
  GLAD_GL_EXT_post_depth_coverage = has_ext("GL_EXT_post_depth_coverage");
  GLAD_GL_EXT_provoking_vertex = has_ext("GL_EXT_provoking_vertex");
  GLAD_GL_EXT_raster_multisample = has_ext("GL_EXT_raster_multisample");
  GLAD_GL_EXT_rescale_normal = has_ext("GL_EXT_rescale_normal");
  GLAD_GL_EXT_secondary_color = has_ext("GL_EXT_secondary_color");
  GLAD_GL_EXT_semaphore = has_ext("GL_EXT_semaphore");
  GLAD_GL_EXT_semaphore_fd = has_ext("GL_EXT_semaphore_fd");
  GLAD_GL_EXT_semaphore_win32 = has_ext("GL_EXT_semaphore_win32");
  GLAD_GL_EXT_separate_shader_objects =
      has_ext("GL_EXT_separate_shader_objects");
  GLAD_GL_EXT_separate_specular_color =
      has_ext("GL_EXT_separate_specular_color");
  GLAD_GL_EXT_shader_framebuffer_fetch =
      has_ext("GL_EXT_shader_framebuffer_fetch");
  GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent =
      has_ext("GL_EXT_shader_framebuffer_fetch_non_coherent");
  GLAD_GL_EXT_shader_image_load_formatted =
      has_ext("GL_EXT_shader_image_load_formatted");
  GLAD_GL_EXT_shader_image_load_store =
      has_ext("GL_EXT_shader_image_load_store");
  GLAD_GL_EXT_shader_integer_mix = has_ext("GL_EXT_shader_integer_mix");
  GLAD_GL_EXT_shadow_funcs = has_ext("GL_EXT_shadow_funcs");
  GLAD_GL_EXT_shared_texture_palette = has_ext("GL_EXT_shared_texture_palette");
  GLAD_GL_EXT_sparse_texture2 = has_ext("GL_EXT_sparse_texture2");
  GLAD_GL_EXT_stencil_clear_tag = has_ext("GL_EXT_stencil_clear_tag");
  GLAD_GL_EXT_stencil_two_side = has_ext("GL_EXT_stencil_two_side");
  GLAD_GL_EXT_stencil_wrap = has_ext("GL_EXT_stencil_wrap");
  GLAD_GL_EXT_subtexture = has_ext("GL_EXT_subtexture");
  GLAD_GL_EXT_texture = has_ext("GL_EXT_texture");
  GLAD_GL_EXT_texture3D = has_ext("GL_EXT_texture3D");
  GLAD_GL_EXT_texture_array = has_ext("GL_EXT_texture_array");
  GLAD_GL_EXT_texture_buffer_object = has_ext("GL_EXT_texture_buffer_object");
  GLAD_GL_EXT_texture_compression_latc =
      has_ext("GL_EXT_texture_compression_latc");
  GLAD_GL_EXT_texture_compression_rgtc =
      has_ext("GL_EXT_texture_compression_rgtc");
  GLAD_GL_EXT_texture_compression_s3tc =
      has_ext("GL_EXT_texture_compression_s3tc");
  GLAD_GL_EXT_texture_cube_map = has_ext("GL_EXT_texture_cube_map");
  GLAD_GL_EXT_texture_env_add = has_ext("GL_EXT_texture_env_add");
  GLAD_GL_EXT_texture_env_combine = has_ext("GL_EXT_texture_env_combine");
  GLAD_GL_EXT_texture_env_dot3 = has_ext("GL_EXT_texture_env_dot3");
  GLAD_GL_EXT_texture_filter_anisotropic =
      has_ext("GL_EXT_texture_filter_anisotropic");
  GLAD_GL_EXT_texture_filter_minmax = has_ext("GL_EXT_texture_filter_minmax");
  GLAD_GL_EXT_texture_integer = has_ext("GL_EXT_texture_integer");
  GLAD_GL_EXT_texture_lod_bias = has_ext("GL_EXT_texture_lod_bias");
  GLAD_GL_EXT_texture_mirror_clamp = has_ext("GL_EXT_texture_mirror_clamp");
  GLAD_GL_EXT_texture_object = has_ext("GL_EXT_texture_object");
  GLAD_GL_EXT_texture_perturb_normal = has_ext("GL_EXT_texture_perturb_normal");
  GLAD_GL_EXT_texture_sRGB = has_ext("GL_EXT_texture_sRGB");
  GLAD_GL_EXT_texture_sRGB_R8 = has_ext("GL_EXT_texture_sRGB_R8");
  GLAD_GL_EXT_texture_sRGB_decode = has_ext("GL_EXT_texture_sRGB_decode");
  GLAD_GL_EXT_texture_shadow_lod = has_ext("GL_EXT_texture_shadow_lod");
  GLAD_GL_EXT_texture_shared_exponent =
      has_ext("GL_EXT_texture_shared_exponent");
  GLAD_GL_EXT_texture_snorm = has_ext("GL_EXT_texture_snorm");
  GLAD_GL_EXT_texture_swizzle = has_ext("GL_EXT_texture_swizzle");
  GLAD_GL_EXT_timer_query = has_ext("GL_EXT_timer_query");
  GLAD_GL_EXT_transform_feedback = has_ext("GL_EXT_transform_feedback");
  GLAD_GL_EXT_vertex_array = has_ext("GL_EXT_vertex_array");
  GLAD_GL_EXT_vertex_array_bgra = has_ext("GL_EXT_vertex_array_bgra");
  GLAD_GL_EXT_vertex_attrib_64bit = has_ext("GL_EXT_vertex_attrib_64bit");
  GLAD_GL_EXT_vertex_shader = has_ext("GL_EXT_vertex_shader");
  GLAD_GL_EXT_vertex_weighting = has_ext("GL_EXT_vertex_weighting");
  GLAD_GL_EXT_win32_keyed_mutex = has_ext("GL_EXT_win32_keyed_mutex");
  GLAD_GL_EXT_window_rectangles = has_ext("GL_EXT_window_rectangles");
  GLAD_GL_EXT_x11_sync_object = has_ext("GL_EXT_x11_sync_object");
  GLAD_GL_KHR_blend_equation_advanced =
      has_ext("GL_KHR_blend_equation_advanced");
  GLAD_GL_KHR_blend_equation_advanced_coherent =
      has_ext("GL_KHR_blend_equation_advanced_coherent");
  GLAD_GL_KHR_context_flush_control = has_ext("GL_KHR_context_flush_control");
  GLAD_GL_KHR_debug = has_ext("GL_KHR_debug");
  GLAD_GL_KHR_no_error = has_ext("GL_KHR_no_error");
  GLAD_GL_KHR_parallel_shader_compile =
      has_ext("GL_KHR_parallel_shader_compile");
  GLAD_GL_KHR_robust_buffer_access_behavior =
      has_ext("GL_KHR_robust_buffer_access_behavior");
  GLAD_GL_KHR_robustness = has_ext("GL_KHR_robustness");
  GLAD_GL_KHR_shader_subgroup = has_ext("GL_KHR_shader_subgroup");
  GLAD_GL_KHR_texture_compression_astc_hdr =
      has_ext("GL_KHR_texture_compression_astc_hdr");
  GLAD_GL_KHR_texture_compression_astc_ldr =
      has_ext("GL_KHR_texture_compression_astc_ldr");
  GLAD_GL_KHR_texture_compression_astc_sliced_3d =
      has_ext("GL_KHR_texture_compression_astc_sliced_3d");
  GLAD_GL_OES_byte_coordinates = has_ext("GL_OES_byte_coordinates");
  GLAD_GL_OES_compressed_paletted_texture =
      has_ext("GL_OES_compressed_paletted_texture");
  GLAD_GL_OES_fixed_point = has_ext("GL_OES_fixed_point");
  GLAD_GL_OES_query_matrix = has_ext("GL_OES_query_matrix");
  GLAD_GL_OES_read_format = has_ext("GL_OES_read_format");
  GLAD_GL_OES_single_precision = has_ext("GL_OES_single_precision");
  free_exts();
  return 1;
}

static void find_coreGL(void) {
  /* Thank you @elmindreda
   * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176
   * https://github.com/glfw/glfw/blob/master/src/context.c#L36
   */
  int i, major, minor;

  const char* version;
  const char* prefixes[] = {"OpenGL ES-CM ", "OpenGL ES-CL ", "OpenGL ES ",
                            NULL};

  version = (const char*)glGetString(GL_VERSION);
  if (!version) return;

  for (i = 0; prefixes[i]; i++) {
    const size_t length = strlen(prefixes[i]);
    if (strncmp(version, prefixes[i], length) == 0) {
      version += length;
      break;
    }
  }

/* PR #18 */
#ifdef _MSC_VER
  sscanf_s(version, "%d.%d", &major, &minor);
#else
  sscanf(version, "%d.%d", &major, &minor);
#endif

  GLVersion.major = major;
  GLVersion.minor = minor;
  max_loaded_major = major;
  max_loaded_minor = minor;
  GLAD_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;
  GLAD_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;
  GLAD_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;
  GLAD_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;
  GLAD_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;
  GLAD_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;
  GLAD_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
  GLAD_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;
  GLAD_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
  GLAD_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
  GLAD_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
  GLAD_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;
  GLAD_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;
  GLAD_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;
  GLAD_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;
  GLAD_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;
  GLAD_GL_VERSION_4_4 = (major == 4 && minor >= 4) || major > 4;
  GLAD_GL_VERSION_4_5 = (major == 4 && minor >= 5) || major > 4;
  GLAD_GL_VERSION_4_6 = (major == 4 && minor >= 6) || major > 4;
  if (GLVersion.major > 4 || (GLVersion.major >= 4 && GLVersion.minor >= 6)) {
    max_loaded_major = 4;
    max_loaded_minor = 6;
  }
}

int gladLoadGLLoader(GLADloadproc load) {
  GLVersion.major = 0;
  GLVersion.minor = 0;
  glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
  if (glGetString == NULL) return 0;
  if (glGetString(GL_VERSION) == NULL) return 0;
  find_coreGL();
  load_GL_VERSION_1_0(load);
  load_GL_VERSION_1_1(load);
  load_GL_VERSION_1_2(load);
  load_GL_VERSION_1_3(load);
  load_GL_VERSION_1_4(load);
  load_GL_VERSION_1_5(load);
  load_GL_VERSION_2_0(load);
  load_GL_VERSION_2_1(load);
  load_GL_VERSION_3_0(load);
  load_GL_VERSION_3_1(load);
  load_GL_VERSION_3_2(load);
  load_GL_VERSION_3_3(load);
  load_GL_VERSION_4_0(load);
  load_GL_VERSION_4_1(load);
  load_GL_VERSION_4_2(load);
  load_GL_VERSION_4_3(load);
  load_GL_VERSION_4_4(load);
  load_GL_VERSION_4_5(load);
  load_GL_VERSION_4_6(load);

  if (!find_extensionsGL()) return 0;
  load_GL_EXT_EGL_image_storage(load);
  load_GL_EXT_bindable_uniform(load);
  load_GL_EXT_blend_color(load);
  load_GL_EXT_blend_equation_separate(load);
  load_GL_EXT_blend_func_separate(load);
  load_GL_EXT_blend_minmax(load);
  load_GL_EXT_color_subtable(load);
  load_GL_EXT_compiled_vertex_array(load);
  load_GL_EXT_convolution(load);
  load_GL_EXT_coordinate_frame(load);
  load_GL_EXT_copy_texture(load);
  load_GL_EXT_cull_vertex(load);
  load_GL_EXT_debug_label(load);
  load_GL_EXT_debug_marker(load);
  load_GL_EXT_depth_bounds_test(load);
  load_GL_EXT_direct_state_access(load);
  load_GL_EXT_draw_buffers2(load);
  load_GL_EXT_draw_instanced(load);
  load_GL_EXT_draw_range_elements(load);
  load_GL_EXT_external_buffer(load);
  load_GL_EXT_fog_coord(load);
  load_GL_EXT_framebuffer_blit(load);
  load_GL_EXT_framebuffer_multisample(load);
  load_GL_EXT_framebuffer_object(load);
  load_GL_EXT_geometry_shader4(load);
  load_GL_EXT_gpu_program_parameters(load);
  load_GL_EXT_gpu_shader4(load);
  load_GL_EXT_histogram(load);
  load_GL_EXT_index_func(load);
  load_GL_EXT_index_material(load);
  load_GL_EXT_light_texture(load);
  load_GL_EXT_memory_object(load);
  load_GL_EXT_memory_object_fd(load);
  load_GL_EXT_memory_object_win32(load);
  load_GL_EXT_multi_draw_arrays(load);
  load_GL_EXT_multisample(load);
  load_GL_EXT_paletted_texture(load);
  load_GL_EXT_pixel_transform(load);
  load_GL_EXT_point_parameters(load);
  load_GL_EXT_polygon_offset(load);
  load_GL_EXT_polygon_offset_clamp(load);
  load_GL_EXT_provoking_vertex(load);
  load_GL_EXT_raster_multisample(load);
  load_GL_EXT_secondary_color(load);
  load_GL_EXT_semaphore(load);
  load_GL_EXT_semaphore_fd(load);
  load_GL_EXT_semaphore_win32(load);
  load_GL_EXT_separate_shader_objects(load);
  load_GL_EXT_shader_framebuffer_fetch_non_coherent(load);
  load_GL_EXT_shader_image_load_store(load);
  load_GL_EXT_stencil_clear_tag(load);
  load_GL_EXT_stencil_two_side(load);
  load_GL_EXT_subtexture(load);
  load_GL_EXT_texture3D(load);
  load_GL_EXT_texture_array(load);
  load_GL_EXT_texture_buffer_object(load);
  load_GL_EXT_texture_integer(load);
  load_GL_EXT_texture_object(load);
  load_GL_EXT_texture_perturb_normal(load);
  load_GL_EXT_timer_query(load);
  load_GL_EXT_transform_feedback(load);
  load_GL_EXT_vertex_array(load);
  load_GL_EXT_vertex_attrib_64bit(load);
  load_GL_EXT_vertex_shader(load);
  load_GL_EXT_vertex_weighting(load);
  load_GL_EXT_win32_keyed_mutex(load);
  load_GL_EXT_window_rectangles(load);
  load_GL_EXT_x11_sync_object(load);
  load_GL_KHR_blend_equation_advanced(load);
  load_GL_KHR_debug(load);
  load_GL_KHR_parallel_shader_compile(load);
  load_GL_KHR_robustness(load);
  load_GL_OES_byte_coordinates(load);
  load_GL_OES_fixed_point(load);
  load_GL_OES_query_matrix(load);
  load_GL_OES_single_precision(load);
  return GLVersion.major != 0 || GLVersion.minor != 0;
}

static void load_GL_ES_VERSION_2_0(GLADloadproc load) {
  if (!GLAD_GL_ES_VERSION_2_0) return;
  glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load("glActiveTexture");
  glad_glAttachShader = (PFNGLATTACHSHADERPROC)load("glAttachShader");
  glad_glBindAttribLocation =
      (PFNGLBINDATTRIBLOCATIONPROC)load("glBindAttribLocation");
  glad_glBindBuffer = (PFNGLBINDBUFFERPROC)load("glBindBuffer");
  glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");
  glad_glBindRenderbuffer =
      (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");
  glad_glBindTexture = (PFNGLBINDTEXTUREPROC)load("glBindTexture");
  glad_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");
  glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");
  glad_glBlendEquationSeparate =
      (PFNGLBLENDEQUATIONSEPARATEPROC)load("glBlendEquationSeparate");
  glad_glBlendFunc = (PFNGLBLENDFUNCPROC)load("glBlendFunc");
  glad_glBlendFuncSeparate =
      (PFNGLBLENDFUNCSEPARATEPROC)load("glBlendFuncSeparate");
  glad_glBufferData = (PFNGLBUFFERDATAPROC)load("glBufferData");
  glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load("glBufferSubData");
  glad_glCheckFramebufferStatus =
      (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");
  glad_glClear = (PFNGLCLEARPROC)load("glClear");
  glad_glClearColor = (PFNGLCLEARCOLORPROC)load("glClearColor");
  glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load("glClearDepthf");
  glad_glClearStencil = (PFNGLCLEARSTENCILPROC)load("glClearStencil");
  glad_glColorMask = (PFNGLCOLORMASKPROC)load("glColorMask");
  glad_glCompileShader = (PFNGLCOMPILESHADERPROC)load("glCompileShader");
  glad_glCompressedTexImage2D =
      (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load("glCompressedTexImage2D");
  glad_glCompressedTexSubImage2D =
      (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load("glCompressedTexSubImage2D");
  glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load("glCopyTexImage2D");
  glad_glCopyTexSubImage2D =
      (PFNGLCOPYTEXSUBIMAGE2DPROC)load("glCopyTexSubImage2D");
  glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load("glCreateProgram");
  glad_glCreateShader = (PFNGLCREATESHADERPROC)load("glCreateShader");
  glad_glCullFace = (PFNGLCULLFACEPROC)load("glCullFace");
  glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load("glDeleteBuffers");
  glad_glDeleteFramebuffers =
      (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");
  glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load("glDeleteProgram");
  glad_glDeleteRenderbuffers =
      (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");
  glad_glDeleteShader = (PFNGLDELETESHADERPROC)load("glDeleteShader");
  glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load("glDeleteTextures");
  glad_glDepthFunc = (PFNGLDEPTHFUNCPROC)load("glDepthFunc");
  glad_glDepthMask = (PFNGLDEPTHMASKPROC)load("glDepthMask");
  glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load("glDepthRangef");
  glad_glDetachShader = (PFNGLDETACHSHADERPROC)load("glDetachShader");
  glad_glDisable = (PFNGLDISABLEPROC)load("glDisable");
  glad_glDisableVertexAttribArray =
      (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load("glDisableVertexAttribArray");
  glad_glDrawArrays = (PFNGLDRAWARRAYSPROC)load("glDrawArrays");
  glad_glDrawElements = (PFNGLDRAWELEMENTSPROC)load("glDrawElements");
  glad_glEnable = (PFNGLENABLEPROC)load("glEnable");
  glad_glEnableVertexAttribArray =
      (PFNGLENABLEVERTEXATTRIBARRAYPROC)load("glEnableVertexAttribArray");
  glad_glFinish = (PFNGLFINISHPROC)load("glFinish");
  glad_glFlush = (PFNGLFLUSHPROC)load("glFlush");
  glad_glFramebufferRenderbuffer =
      (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");
  glad_glFramebufferTexture2D =
      (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");
  glad_glFrontFace = (PFNGLFRONTFACEPROC)load("glFrontFace");
  glad_glGenBuffers = (PFNGLGENBUFFERSPROC)load("glGenBuffers");
  glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");
  glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");
  glad_glGenRenderbuffers =
      (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");
  glad_glGenTextures = (PFNGLGENTEXTURESPROC)load("glGenTextures");
  glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load("glGetActiveAttrib");
  glad_glGetActiveUniform =
      (PFNGLGETACTIVEUNIFORMPROC)load("glGetActiveUniform");
  glad_glGetAttachedShaders =
      (PFNGLGETATTACHEDSHADERSPROC)load("glGetAttachedShaders");
  glad_glGetAttribLocation =
      (PFNGLGETATTRIBLOCATIONPROC)load("glGetAttribLocation");
  glad_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load("glGetBooleanv");
  glad_glGetBufferParameteriv =
      (PFNGLGETBUFFERPARAMETERIVPROC)load("glGetBufferParameteriv");
  glad_glGetError = (PFNGLGETERRORPROC)load("glGetError");
  glad_glGetFloatv = (PFNGLGETFLOATVPROC)load("glGetFloatv");
  glad_glGetFramebufferAttachmentParameteriv =
      (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load(
          "glGetFramebufferAttachmentParameteriv");
  glad_glGetIntegerv = (PFNGLGETINTEGERVPROC)load("glGetIntegerv");
  glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load("glGetProgramiv");
  glad_glGetProgramInfoLog =
      (PFNGLGETPROGRAMINFOLOGPROC)load("glGetProgramInfoLog");
  glad_glGetRenderbufferParameteriv =
      (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");
  glad_glGetShaderiv = (PFNGLGETSHADERIVPROC)load("glGetShaderiv");
  glad_glGetShaderInfoLog =
      (PFNGLGETSHADERINFOLOGPROC)load("glGetShaderInfoLog");
  glad_glGetShaderPrecisionFormat =
      (PFNGLGETSHADERPRECISIONFORMATPROC)load("glGetShaderPrecisionFormat");
  glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load("glGetShaderSource");
  glad_glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
  glad_glGetTexParameterfv =
      (PFNGLGETTEXPARAMETERFVPROC)load("glGetTexParameterfv");
  glad_glGetTexParameteriv =
      (PFNGLGETTEXPARAMETERIVPROC)load("glGetTexParameteriv");
  glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load("glGetUniformfv");
  glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load("glGetUniformiv");
  glad_glGetUniformLocation =
      (PFNGLGETUNIFORMLOCATIONPROC)load("glGetUniformLocation");
  glad_glGetVertexAttribfv =
      (PFNGLGETVERTEXATTRIBFVPROC)load("glGetVertexAttribfv");
  glad_glGetVertexAttribiv =
      (PFNGLGETVERTEXATTRIBIVPROC)load("glGetVertexAttribiv");
  glad_glGetVertexAttribPointerv =
      (PFNGLGETVERTEXATTRIBPOINTERVPROC)load("glGetVertexAttribPointerv");
  glad_glHint = (PFNGLHINTPROC)load("glHint");
  glad_glIsBuffer = (PFNGLISBUFFERPROC)load("glIsBuffer");
  glad_glIsEnabled = (PFNGLISENABLEDPROC)load("glIsEnabled");
  glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");
  glad_glIsProgram = (PFNGLISPROGRAMPROC)load("glIsProgram");
  glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");
  glad_glIsShader = (PFNGLISSHADERPROC)load("glIsShader");
  glad_glIsTexture = (PFNGLISTEXTUREPROC)load("glIsTexture");
  glad_glLineWidth = (PFNGLLINEWIDTHPROC)load("glLineWidth");
  glad_glLinkProgram = (PFNGLLINKPROGRAMPROC)load("glLinkProgram");
  glad_glPixelStorei = (PFNGLPIXELSTOREIPROC)load("glPixelStorei");
  glad_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load("glPolygonOffset");
  glad_glReadPixels = (PFNGLREADPIXELSPROC)load("glReadPixels");
  glad_glReleaseShaderCompiler =
      (PFNGLRELEASESHADERCOMPILERPROC)load("glReleaseShaderCompiler");
  glad_glRenderbufferStorage =
      (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");
  glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load("glSampleCoverage");
  glad_glScissor = (PFNGLSCISSORPROC)load("glScissor");
  glad_glShaderBinary = (PFNGLSHADERBINARYPROC)load("glShaderBinary");
  glad_glShaderSource = (PFNGLSHADERSOURCEPROC)load("glShaderSource");
  glad_glStencilFunc = (PFNGLSTENCILFUNCPROC)load("glStencilFunc");
  glad_glStencilFuncSeparate =
      (PFNGLSTENCILFUNCSEPARATEPROC)load("glStencilFuncSeparate");
  glad_glStencilMask = (PFNGLSTENCILMASKPROC)load("glStencilMask");
  glad_glStencilMaskSeparate =
      (PFNGLSTENCILMASKSEPARATEPROC)load("glStencilMaskSeparate");
  glad_glStencilOp = (PFNGLSTENCILOPPROC)load("glStencilOp");
  glad_glStencilOpSeparate =
      (PFNGLSTENCILOPSEPARATEPROC)load("glStencilOpSeparate");
  glad_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load("glTexImage2D");
  glad_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load("glTexParameterf");
  glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load("glTexParameterfv");
  glad_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load("glTexParameteri");
  glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load("glTexParameteriv");
  glad_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load("glTexSubImage2D");
  glad_glUniform1f = (PFNGLUNIFORM1FPROC)load("glUniform1f");
  glad_glUniform1fv = (PFNGLUNIFORM1FVPROC)load("glUniform1fv");
  glad_glUniform1i = (PFNGLUNIFORM1IPROC)load("glUniform1i");
  glad_glUniform1iv = (PFNGLUNIFORM1IVPROC)load("glUniform1iv");
  glad_glUniform2f = (PFNGLUNIFORM2FPROC)load("glUniform2f");
  glad_glUniform2fv = (PFNGLUNIFORM2FVPROC)load("glUniform2fv");
  glad_glUniform2i = (PFNGLUNIFORM2IPROC)load("glUniform2i");
  glad_glUniform2iv = (PFNGLUNIFORM2IVPROC)load("glUniform2iv");
  glad_glUniform3f = (PFNGLUNIFORM3FPROC)load("glUniform3f");
  glad_glUniform3fv = (PFNGLUNIFORM3FVPROC)load("glUniform3fv");
  glad_glUniform3i = (PFNGLUNIFORM3IPROC)load("glUniform3i");
  glad_glUniform3iv = (PFNGLUNIFORM3IVPROC)load("glUniform3iv");
  glad_glUniform4f = (PFNGLUNIFORM4FPROC)load("glUniform4f");
  glad_glUniform4fv = (PFNGLUNIFORM4FVPROC)load("glUniform4fv");
  glad_glUniform4i = (PFNGLUNIFORM4IPROC)load("glUniform4i");
  glad_glUniform4iv = (PFNGLUNIFORM4IVPROC)load("glUniform4iv");
  glad_glUniformMatrix2fv =
      (PFNGLUNIFORMMATRIX2FVPROC)load("glUniformMatrix2fv");
  glad_glUniformMatrix3fv =
      (PFNGLUNIFORMMATRIX3FVPROC)load("glUniformMatrix3fv");
  glad_glUniformMatrix4fv =
      (PFNGLUNIFORMMATRIX4FVPROC)load("glUniformMatrix4fv");
  glad_glUseProgram = (PFNGLUSEPROGRAMPROC)load("glUseProgram");
  glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load("glValidateProgram");
  glad_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load("glVertexAttrib1f");
  glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load("glVertexAttrib1fv");
  glad_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load("glVertexAttrib2f");
  glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load("glVertexAttrib2fv");
  glad_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load("glVertexAttrib3f");
  glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load("glVertexAttrib3fv");
  glad_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load("glVertexAttrib4f");
  glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load("glVertexAttrib4fv");
  glad_glVertexAttribPointer =
      (PFNGLVERTEXATTRIBPOINTERPROC)load("glVertexAttribPointer");
  glad_glViewport = (PFNGLVIEWPORTPROC)load("glViewport");
}
static void load_GL_ES_VERSION_3_0(GLADloadproc load) {
  if (!GLAD_GL_ES_VERSION_3_0) return;
  glad_glReadBuffer = (PFNGLREADBUFFERPROC)load("glReadBuffer");
  glad_glDrawRangeElements =
      (PFNGLDRAWRANGEELEMENTSPROC)load("glDrawRangeElements");
  glad_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load("glTexImage3D");
  glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load("glTexSubImage3D");
  glad_glCopyTexSubImage3D =
      (PFNGLCOPYTEXSUBIMAGE3DPROC)load("glCopyTexSubImage3D");
  glad_glCompressedTexImage3D =
      (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load("glCompressedTexImage3D");
  glad_glCompressedTexSubImage3D =
      (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load("glCompressedTexSubImage3D");
  glad_glGenQueries = (PFNGLGENQUERIESPROC)load("glGenQueries");
  glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load("glDeleteQueries");
  glad_glIsQuery = (PFNGLISQUERYPROC)load("glIsQuery");
  glad_glBeginQuery = (PFNGLBEGINQUERYPROC)load("glBeginQuery");
  glad_glEndQuery = (PFNGLENDQUERYPROC)load("glEndQuery");
  glad_glGetQueryiv = (PFNGLGETQUERYIVPROC)load("glGetQueryiv");
  glad_glGetQueryObjectuiv =
      (PFNGLGETQUERYOBJECTUIVPROC)load("glGetQueryObjectuiv");
  glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load("glUnmapBuffer");
  glad_glGetBufferPointerv =
      (PFNGLGETBUFFERPOINTERVPROC)load("glGetBufferPointerv");
  glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load("glDrawBuffers");
  glad_glUniformMatrix2x3fv =
      (PFNGLUNIFORMMATRIX2X3FVPROC)load("glUniformMatrix2x3fv");
  glad_glUniformMatrix3x2fv =
      (PFNGLUNIFORMMATRIX3X2FVPROC)load("glUniformMatrix3x2fv");
  glad_glUniformMatrix2x4fv =
      (PFNGLUNIFORMMATRIX2X4FVPROC)load("glUniformMatrix2x4fv");
  glad_glUniformMatrix4x2fv =
      (PFNGLUNIFORMMATRIX4X2FVPROC)load("glUniformMatrix4x2fv");
  glad_glUniformMatrix3x4fv =
      (PFNGLUNIFORMMATRIX3X4FVPROC)load("glUniformMatrix3x4fv");
  glad_glUniformMatrix4x3fv =
      (PFNGLUNIFORMMATRIX4X3FVPROC)load("glUniformMatrix4x3fv");
  glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");
  glad_glRenderbufferStorageMultisample =
      (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load(
          "glRenderbufferStorageMultisample");
  glad_glFramebufferTextureLayer =
      (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");
  glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");
  glad_glFlushMappedBufferRange =
      (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");
  glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");
  glad_glDeleteVertexArrays =
      (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");
  glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");
  glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");
  glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
  glad_glBeginTransformFeedback =
      (PFNGLBEGINTRANSFORMFEEDBACKPROC)load("glBeginTransformFeedback");
  glad_glEndTransformFeedback =
      (PFNGLENDTRANSFORMFEEDBACKPROC)load("glEndTransformFeedback");
  glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
  glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
  glad_glTransformFeedbackVaryings =
      (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load("glTransformFeedbackVaryings");
  glad_glGetTransformFeedbackVarying =
      (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load(
          "glGetTransformFeedbackVarying");
  glad_glVertexAttribIPointer =
      (PFNGLVERTEXATTRIBIPOINTERPROC)load("glVertexAttribIPointer");
  glad_glGetVertexAttribIiv =
      (PFNGLGETVERTEXATTRIBIIVPROC)load("glGetVertexAttribIiv");
  glad_glGetVertexAttribIuiv =
      (PFNGLGETVERTEXATTRIBIUIVPROC)load("glGetVertexAttribIuiv");
  glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load("glVertexAttribI4i");
  glad_glVertexAttribI4ui =
      (PFNGLVERTEXATTRIBI4UIPROC)load("glVertexAttribI4ui");
  glad_glVertexAttribI4iv =
      (PFNGLVERTEXATTRIBI4IVPROC)load("glVertexAttribI4iv");
  glad_glVertexAttribI4uiv =
      (PFNGLVERTEXATTRIBI4UIVPROC)load("glVertexAttribI4uiv");
  glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load("glGetUniformuiv");
  glad_glGetFragDataLocation =
      (PFNGLGETFRAGDATALOCATIONPROC)load("glGetFragDataLocation");
  glad_glUniform1ui = (PFNGLUNIFORM1UIPROC)load("glUniform1ui");
  glad_glUniform2ui = (PFNGLUNIFORM2UIPROC)load("glUniform2ui");
  glad_glUniform3ui = (PFNGLUNIFORM3UIPROC)load("glUniform3ui");
  glad_glUniform4ui = (PFNGLUNIFORM4UIPROC)load("glUniform4ui");
  glad_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load("glUniform1uiv");
  glad_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load("glUniform2uiv");
  glad_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load("glUniform3uiv");
  glad_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load("glUniform4uiv");
  glad_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load("glClearBufferiv");
  glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load("glClearBufferuiv");
  glad_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load("glClearBufferfv");
  glad_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load("glClearBufferfi");
  glad_glGetStringi = (PFNGLGETSTRINGIPROC)load("glGetStringi");
  glad_glCopyBufferSubData =
      (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");
  glad_glGetUniformIndices =
      (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");
  glad_glGetActiveUniformsiv =
      (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");
  glad_glGetUniformBlockIndex =
      (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");
  glad_glGetActiveUniformBlockiv =
      (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");
  glad_glGetActiveUniformBlockName =
      (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");
  glad_glUniformBlockBinding =
      (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");
  glad_glDrawArraysInstanced =
      (PFNGLDRAWARRAYSINSTANCEDPROC)load("glDrawArraysInstanced");
  glad_glDrawElementsInstanced =
      (PFNGLDRAWELEMENTSINSTANCEDPROC)load("glDrawElementsInstanced");
  glad_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");
  glad_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");
  glad_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");
  glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");
  glad_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");
  glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");
  glad_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");
  glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load("glGetInteger64i_v");
  glad_glGetBufferParameteri64v =
      (PFNGLGETBUFFERPARAMETERI64VPROC)load("glGetBufferParameteri64v");
  glad_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");
  glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");
  glad_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");
  glad_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");
  glad_glSamplerParameteri =
      (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");
  glad_glSamplerParameteriv =
      (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");
  glad_glSamplerParameterf =
      (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");
  glad_glSamplerParameterfv =
      (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");
  glad_glGetSamplerParameteriv =
      (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");
  glad_glGetSamplerParameterfv =
      (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");
  glad_glVertexAttribDivisor =
      (PFNGLVERTEXATTRIBDIVISORPROC)load("glVertexAttribDivisor");
  glad_glBindTransformFeedback =
      (PFNGLBINDTRANSFORMFEEDBACKPROC)load("glBindTransformFeedback");
  glad_glDeleteTransformFeedbacks =
      (PFNGLDELETETRANSFORMFEEDBACKSPROC)load("glDeleteTransformFeedbacks");
  glad_glGenTransformFeedbacks =
      (PFNGLGENTRANSFORMFEEDBACKSPROC)load("glGenTransformFeedbacks");
  glad_glIsTransformFeedback =
      (PFNGLISTRANSFORMFEEDBACKPROC)load("glIsTransformFeedback");
  glad_glPauseTransformFeedback =
      (PFNGLPAUSETRANSFORMFEEDBACKPROC)load("glPauseTransformFeedback");
  glad_glResumeTransformFeedback =
      (PFNGLRESUMETRANSFORMFEEDBACKPROC)load("glResumeTransformFeedback");
  glad_glGetProgramBinary =
      (PFNGLGETPROGRAMBINARYPROC)load("glGetProgramBinary");
  glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load("glProgramBinary");
  glad_glProgramParameteri =
      (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
  glad_glInvalidateFramebuffer =
      (PFNGLINVALIDATEFRAMEBUFFERPROC)load("glInvalidateFramebuffer");
  glad_glInvalidateSubFramebuffer =
      (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load("glInvalidateSubFramebuffer");
  glad_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)load("glTexStorage2D");
  glad_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)load("glTexStorage3D");
  glad_glGetInternalformativ =
      (PFNGLGETINTERNALFORMATIVPROC)load("glGetInternalformativ");
}
static void load_GL_ES_VERSION_3_1(GLADloadproc load) {
  if (!GLAD_GL_ES_VERSION_3_1) return;
  glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load("glDispatchCompute");
  glad_glDispatchComputeIndirect =
      (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load("glDispatchComputeIndirect");
  glad_glDrawArraysIndirect =
      (PFNGLDRAWARRAYSINDIRECTPROC)load("glDrawArraysIndirect");
  glad_glDrawElementsIndirect =
      (PFNGLDRAWELEMENTSINDIRECTPROC)load("glDrawElementsIndirect");
  glad_glFramebufferParameteri =
      (PFNGLFRAMEBUFFERPARAMETERIPROC)load("glFramebufferParameteri");
  glad_glGetFramebufferParameteriv =
      (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load("glGetFramebufferParameteriv");
  glad_glGetProgramInterfaceiv =
      (PFNGLGETPROGRAMINTERFACEIVPROC)load("glGetProgramInterfaceiv");
  glad_glGetProgramResourceIndex =
      (PFNGLGETPROGRAMRESOURCEINDEXPROC)load("glGetProgramResourceIndex");
  glad_glGetProgramResourceName =
      (PFNGLGETPROGRAMRESOURCENAMEPROC)load("glGetProgramResourceName");
  glad_glGetProgramResourceiv =
      (PFNGLGETPROGRAMRESOURCEIVPROC)load("glGetProgramResourceiv");
  glad_glGetProgramResourceLocation =
      (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load("glGetProgramResourceLocation");
  glad_glUseProgramStages =
      (PFNGLUSEPROGRAMSTAGESPROC)load("glUseProgramStages");
  glad_glActiveShaderProgram =
      (PFNGLACTIVESHADERPROGRAMPROC)load("glActiveShaderProgram");
  glad_glCreateShaderProgramv =
      (PFNGLCREATESHADERPROGRAMVPROC)load("glCreateShaderProgramv");
  glad_glBindProgramPipeline =
      (PFNGLBINDPROGRAMPIPELINEPROC)load("glBindProgramPipeline");
  glad_glDeleteProgramPipelines =
      (PFNGLDELETEPROGRAMPIPELINESPROC)load("glDeleteProgramPipelines");
  glad_glGenProgramPipelines =
      (PFNGLGENPROGRAMPIPELINESPROC)load("glGenProgramPipelines");
  glad_glIsProgramPipeline =
      (PFNGLISPROGRAMPIPELINEPROC)load("glIsProgramPipeline");
  glad_glGetProgramPipelineiv =
      (PFNGLGETPROGRAMPIPELINEIVPROC)load("glGetProgramPipelineiv");
  glad_glProgramUniform1i =
      (PFNGLPROGRAMUNIFORM1IPROC)load("glProgramUniform1i");
  glad_glProgramUniform2i =
      (PFNGLPROGRAMUNIFORM2IPROC)load("glProgramUniform2i");
  glad_glProgramUniform3i =
      (PFNGLPROGRAMUNIFORM3IPROC)load("glProgramUniform3i");
  glad_glProgramUniform4i =
      (PFNGLPROGRAMUNIFORM4IPROC)load("glProgramUniform4i");
  glad_glProgramUniform1ui =
      (PFNGLPROGRAMUNIFORM1UIPROC)load("glProgramUniform1ui");
  glad_glProgramUniform2ui =
      (PFNGLPROGRAMUNIFORM2UIPROC)load("glProgramUniform2ui");
  glad_glProgramUniform3ui =
      (PFNGLPROGRAMUNIFORM3UIPROC)load("glProgramUniform3ui");
  glad_glProgramUniform4ui =
      (PFNGLPROGRAMUNIFORM4UIPROC)load("glProgramUniform4ui");
  glad_glProgramUniform1f =
      (PFNGLPROGRAMUNIFORM1FPROC)load("glProgramUniform1f");
  glad_glProgramUniform2f =
      (PFNGLPROGRAMUNIFORM2FPROC)load("glProgramUniform2f");
  glad_glProgramUniform3f =
      (PFNGLPROGRAMUNIFORM3FPROC)load("glProgramUniform3f");
  glad_glProgramUniform4f =
      (PFNGLPROGRAMUNIFORM4FPROC)load("glProgramUniform4f");
  glad_glProgramUniform1iv =
      (PFNGLPROGRAMUNIFORM1IVPROC)load("glProgramUniform1iv");
  glad_glProgramUniform2iv =
      (PFNGLPROGRAMUNIFORM2IVPROC)load("glProgramUniform2iv");
  glad_glProgramUniform3iv =
      (PFNGLPROGRAMUNIFORM3IVPROC)load("glProgramUniform3iv");
  glad_glProgramUniform4iv =
      (PFNGLPROGRAMUNIFORM4IVPROC)load("glProgramUniform4iv");
  glad_glProgramUniform1uiv =
      (PFNGLPROGRAMUNIFORM1UIVPROC)load("glProgramUniform1uiv");
  glad_glProgramUniform2uiv =
      (PFNGLPROGRAMUNIFORM2UIVPROC)load("glProgramUniform2uiv");
  glad_glProgramUniform3uiv =
      (PFNGLPROGRAMUNIFORM3UIVPROC)load("glProgramUniform3uiv");
  glad_glProgramUniform4uiv =
      (PFNGLPROGRAMUNIFORM4UIVPROC)load("glProgramUniform4uiv");
  glad_glProgramUniform1fv =
      (PFNGLPROGRAMUNIFORM1FVPROC)load("glProgramUniform1fv");
  glad_glProgramUniform2fv =
      (PFNGLPROGRAMUNIFORM2FVPROC)load("glProgramUniform2fv");
  glad_glProgramUniform3fv =
      (PFNGLPROGRAMUNIFORM3FVPROC)load("glProgramUniform3fv");
  glad_glProgramUniform4fv =
      (PFNGLPROGRAMUNIFORM4FVPROC)load("glProgramUniform4fv");
  glad_glProgramUniformMatrix2fv =
      (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load("glProgramUniformMatrix2fv");
  glad_glProgramUniformMatrix3fv =
      (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load("glProgramUniformMatrix3fv");
  glad_glProgramUniformMatrix4fv =
      (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load("glProgramUniformMatrix4fv");
  glad_glProgramUniformMatrix2x3fv =
      (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load("glProgramUniformMatrix2x3fv");
  glad_glProgramUniformMatrix3x2fv =
      (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load("glProgramUniformMatrix3x2fv");
  glad_glProgramUniformMatrix2x4fv =
      (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load("glProgramUniformMatrix2x4fv");
  glad_glProgramUniformMatrix4x2fv =
      (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load("glProgramUniformMatrix4x2fv");
  glad_glProgramUniformMatrix3x4fv =
      (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load("glProgramUniformMatrix3x4fv");
  glad_glProgramUniformMatrix4x3fv =
      (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load("glProgramUniformMatrix4x3fv");
  glad_glValidateProgramPipeline =
      (PFNGLVALIDATEPROGRAMPIPELINEPROC)load("glValidateProgramPipeline");
  glad_glGetProgramPipelineInfoLog =
      (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load("glGetProgramPipelineInfoLog");
  glad_glBindImageTexture =
      (PFNGLBINDIMAGETEXTUREPROC)load("glBindImageTexture");
  glad_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load("glGetBooleani_v");
  glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load("glMemoryBarrier");
  glad_glMemoryBarrierByRegion =
      (PFNGLMEMORYBARRIERBYREGIONPROC)load("glMemoryBarrierByRegion");
  glad_glTexStorage2DMultisample =
      (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load("glTexStorage2DMultisample");
  glad_glGetMultisamplefv =
      (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");
  glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");
  glad_glGetTexLevelParameteriv =
      (PFNGLGETTEXLEVELPARAMETERIVPROC)load("glGetTexLevelParameteriv");
  glad_glGetTexLevelParameterfv =
      (PFNGLGETTEXLEVELPARAMETERFVPROC)load("glGetTexLevelParameterfv");
  glad_glBindVertexBuffer =
      (PFNGLBINDVERTEXBUFFERPROC)load("glBindVertexBuffer");
  glad_glVertexAttribFormat =
      (PFNGLVERTEXATTRIBFORMATPROC)load("glVertexAttribFormat");
  glad_glVertexAttribIFormat =
      (PFNGLVERTEXATTRIBIFORMATPROC)load("glVertexAttribIFormat");
  glad_glVertexAttribBinding =
      (PFNGLVERTEXATTRIBBINDINGPROC)load("glVertexAttribBinding");
  glad_glVertexBindingDivisor =
      (PFNGLVERTEXBINDINGDIVISORPROC)load("glVertexBindingDivisor");
}
static void load_GL_ES_VERSION_3_2(GLADloadproc load) {
  if (!GLAD_GL_ES_VERSION_3_2) return;
  glad_glBlendBarrier = (PFNGLBLENDBARRIERPROC)load("glBlendBarrier");
  glad_glCopyImageSubData =
      (PFNGLCOPYIMAGESUBDATAPROC)load("glCopyImageSubData");
  glad_glDebugMessageControl =
      (PFNGLDEBUGMESSAGECONTROLPROC)load("glDebugMessageControl");
  glad_glDebugMessageInsert =
      (PFNGLDEBUGMESSAGEINSERTPROC)load("glDebugMessageInsert");
  glad_glDebugMessageCallback =
      (PFNGLDEBUGMESSAGECALLBACKPROC)load("glDebugMessageCallback");
  glad_glGetDebugMessageLog =
      (PFNGLGETDEBUGMESSAGELOGPROC)load("glGetDebugMessageLog");
  glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load("glPushDebugGroup");
  glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load("glPopDebugGroup");
  glad_glObjectLabel = (PFNGLOBJECTLABELPROC)load("glObjectLabel");
  glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load("glGetObjectLabel");
  glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load("glObjectPtrLabel");
  glad_glGetObjectPtrLabel =
      (PFNGLGETOBJECTPTRLABELPROC)load("glGetObjectPtrLabel");
  glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
  glad_glEnablei = (PFNGLENABLEIPROC)load("glEnablei");
  glad_glDisablei = (PFNGLDISABLEIPROC)load("glDisablei");
  glad_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load("glBlendEquationi");
  glad_glBlendEquationSeparatei =
      (PFNGLBLENDEQUATIONSEPARATEIPROC)load("glBlendEquationSeparatei");
  glad_glBlendFunci = (PFNGLBLENDFUNCIPROC)load("glBlendFunci");
  glad_glBlendFuncSeparatei =
      (PFNGLBLENDFUNCSEPARATEIPROC)load("glBlendFuncSeparatei");
  glad_glColorMaski = (PFNGLCOLORMASKIPROC)load("glColorMaski");
  glad_glIsEnabledi = (PFNGLISENABLEDIPROC)load("glIsEnabledi");
  glad_glDrawElementsBaseVertex =
      (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");
  glad_glDrawRangeElementsBaseVertex =
      (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load(
          "glDrawRangeElementsBaseVertex");
  glad_glDrawElementsInstancedBaseVertex =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load(
          "glDrawElementsInstancedBaseVertex");
  glad_glFramebufferTexture =
      (PFNGLFRAMEBUFFERTEXTUREPROC)load("glFramebufferTexture");
  glad_glPrimitiveBoundingBox =
      (PFNGLPRIMITIVEBOUNDINGBOXPROC)load("glPrimitiveBoundingBox");
  glad_glGetGraphicsResetStatus =
      (PFNGLGETGRAPHICSRESETSTATUSPROC)load("glGetGraphicsResetStatus");
  glad_glReadnPixels = (PFNGLREADNPIXELSPROC)load("glReadnPixels");
  glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)load("glGetnUniformfv");
  glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)load("glGetnUniformiv");
  glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)load("glGetnUniformuiv");
  glad_glMinSampleShading =
      (PFNGLMINSAMPLESHADINGPROC)load("glMinSampleShading");
  glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load("glPatchParameteri");
  glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load("glTexParameterIiv");
  glad_glTexParameterIuiv =
      (PFNGLTEXPARAMETERIUIVPROC)load("glTexParameterIuiv");
  glad_glGetTexParameterIiv =
      (PFNGLGETTEXPARAMETERIIVPROC)load("glGetTexParameterIiv");
  glad_glGetTexParameterIuiv =
      (PFNGLGETTEXPARAMETERIUIVPROC)load("glGetTexParameterIuiv");
  glad_glSamplerParameterIiv =
      (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");
  glad_glSamplerParameterIuiv =
      (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");
  glad_glGetSamplerParameterIiv =
      (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");
  glad_glGetSamplerParameterIuiv =
      (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");
  glad_glTexBuffer = (PFNGLTEXBUFFERPROC)load("glTexBuffer");
  glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load("glTexBufferRange");
  glad_glTexStorage3DMultisample =
      (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load("glTexStorage3DMultisample");
}
static void load_GL_EXT_base_instance(GLADloadproc load) {
  if (!GLAD_GL_EXT_base_instance) return;
  glad_glDrawArraysInstancedBaseInstanceEXT =
      (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC)load(
          "glDrawArraysInstancedBaseInstanceEXT");
  glad_glDrawElementsInstancedBaseInstanceEXT =
      (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC)load(
          "glDrawElementsInstancedBaseInstanceEXT");
  glad_glDrawElementsInstancedBaseVertexBaseInstanceEXT =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC)load(
          "glDrawElementsInstancedBaseVertexBaseInstanceEXT");
}
static void load_GL_EXT_blend_func_extended(GLADloadproc load) {
  if (!GLAD_GL_EXT_blend_func_extended) return;
  glad_glBindFragDataLocationIndexedEXT =
      (PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC)load(
          "glBindFragDataLocationIndexedEXT");
  glad_glBindFragDataLocationEXT =
      (PFNGLBINDFRAGDATALOCATIONEXTPROC)load("glBindFragDataLocationEXT");
  glad_glGetProgramResourceLocationIndexEXT =
      (PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC)load(
          "glGetProgramResourceLocationIndexEXT");
  glad_glGetFragDataIndexEXT =
      (PFNGLGETFRAGDATAINDEXEXTPROC)load("glGetFragDataIndexEXT");
}
static void load_GL_EXT_buffer_storage(GLADloadproc load) {
  if (!GLAD_GL_EXT_buffer_storage) return;
  glad_glBufferStorageEXT =
      (PFNGLBUFFERSTORAGEEXTPROC)load("glBufferStorageEXT");
}
static void load_GL_EXT_clear_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_clear_texture) return;
  glad_glClearTexImageEXT =
      (PFNGLCLEARTEXIMAGEEXTPROC)load("glClearTexImageEXT");
  glad_glClearTexSubImageEXT =
      (PFNGLCLEARTEXSUBIMAGEEXTPROC)load("glClearTexSubImageEXT");
}
static void load_GL_EXT_clip_control(GLADloadproc load) {
  if (!GLAD_GL_EXT_clip_control) return;
  glad_glClipControlEXT = (PFNGLCLIPCONTROLEXTPROC)load("glClipControlEXT");
}
static void load_GL_EXT_copy_image(GLADloadproc load) {
  if (!GLAD_GL_EXT_copy_image) return;
  glad_glCopyImageSubDataEXT =
      (PFNGLCOPYIMAGESUBDATAEXTPROC)load("glCopyImageSubDataEXT");
}
static void load_GL_EXT_discard_framebuffer(GLADloadproc load) {
  if (!GLAD_GL_EXT_discard_framebuffer) return;
  glad_glDiscardFramebufferEXT =
      (PFNGLDISCARDFRAMEBUFFEREXTPROC)load("glDiscardFramebufferEXT");
}
static void load_GL_EXT_disjoint_timer_query(GLADloadproc load) {
  if (!GLAD_GL_EXT_disjoint_timer_query) return;
  glad_glGenQueriesEXT = (PFNGLGENQUERIESEXTPROC)load("glGenQueriesEXT");
  glad_glDeleteQueriesEXT =
      (PFNGLDELETEQUERIESEXTPROC)load("glDeleteQueriesEXT");
  glad_glIsQueryEXT = (PFNGLISQUERYEXTPROC)load("glIsQueryEXT");
  glad_glBeginQueryEXT = (PFNGLBEGINQUERYEXTPROC)load("glBeginQueryEXT");
  glad_glEndQueryEXT = (PFNGLENDQUERYEXTPROC)load("glEndQueryEXT");
  glad_glQueryCounterEXT = (PFNGLQUERYCOUNTEREXTPROC)load("glQueryCounterEXT");
  glad_glGetQueryivEXT = (PFNGLGETQUERYIVEXTPROC)load("glGetQueryivEXT");
  glad_glGetQueryObjectivEXT =
      (PFNGLGETQUERYOBJECTIVEXTPROC)load("glGetQueryObjectivEXT");
  glad_glGetQueryObjectuivEXT =
      (PFNGLGETQUERYOBJECTUIVEXTPROC)load("glGetQueryObjectuivEXT");
  glad_glGetQueryObjecti64vEXT =
      (PFNGLGETQUERYOBJECTI64VEXTPROC)load("glGetQueryObjecti64vEXT");
  glad_glGetQueryObjectui64vEXT =
      (PFNGLGETQUERYOBJECTUI64VEXTPROC)load("glGetQueryObjectui64vEXT");
  glad_glGetInteger64vEXT =
      (PFNGLGETINTEGER64VEXTPROC)load("glGetInteger64vEXT");
}
static void load_GL_EXT_draw_buffers(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_buffers) return;
  glad_glDrawBuffersEXT = (PFNGLDRAWBUFFERSEXTPROC)load("glDrawBuffersEXT");
}
static void load_GL_EXT_draw_buffers_indexed(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_buffers_indexed) return;
  glad_glEnableiEXT = (PFNGLENABLEIEXTPROC)load("glEnableiEXT");
  glad_glDisableiEXT = (PFNGLDISABLEIEXTPROC)load("glDisableiEXT");
  glad_glBlendEquationiEXT =
      (PFNGLBLENDEQUATIONIEXTPROC)load("glBlendEquationiEXT");
  glad_glBlendEquationSeparateiEXT =
      (PFNGLBLENDEQUATIONSEPARATEIEXTPROC)load("glBlendEquationSeparateiEXT");
  glad_glBlendFunciEXT = (PFNGLBLENDFUNCIEXTPROC)load("glBlendFunciEXT");
  glad_glBlendFuncSeparateiEXT =
      (PFNGLBLENDFUNCSEPARATEIEXTPROC)load("glBlendFuncSeparateiEXT");
  glad_glColorMaskiEXT = (PFNGLCOLORMASKIEXTPROC)load("glColorMaskiEXT");
  glad_glIsEnablediEXT = (PFNGLISENABLEDIEXTPROC)load("glIsEnablediEXT");
}
static void load_GL_EXT_draw_elements_base_vertex(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_elements_base_vertex) return;
  glad_glDrawElementsBaseVertexEXT =
      (PFNGLDRAWELEMENTSBASEVERTEXEXTPROC)load("glDrawElementsBaseVertexEXT");
  glad_glDrawRangeElementsBaseVertexEXT =
      (PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC)load(
          "glDrawRangeElementsBaseVertexEXT");
  glad_glDrawElementsInstancedBaseVertexEXT =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC)load(
          "glDrawElementsInstancedBaseVertexEXT");
  glad_glMultiDrawElementsBaseVertexEXT =
      (PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)load(
          "glMultiDrawElementsBaseVertexEXT");
}
static void load_GL_EXT_draw_transform_feedback(GLADloadproc load) {
  if (!GLAD_GL_EXT_draw_transform_feedback) return;
  glad_glDrawTransformFeedbackEXT =
      (PFNGLDRAWTRANSFORMFEEDBACKEXTPROC)load("glDrawTransformFeedbackEXT");
  glad_glDrawTransformFeedbackInstancedEXT =
      (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC)load(
          "glDrawTransformFeedbackInstancedEXT");
}
static void load_GL_EXT_geometry_shader(GLADloadproc load) {
  if (!GLAD_GL_EXT_geometry_shader) return;
  glad_glFramebufferTextureEXT =
      (PFNGLFRAMEBUFFERTEXTUREEXTPROC)load("glFramebufferTextureEXT");
}
static void load_GL_EXT_instanced_arrays(GLADloadproc load) {
  if (!GLAD_GL_EXT_instanced_arrays) return;
  glad_glDrawArraysInstancedEXT =
      (PFNGLDRAWARRAYSINSTANCEDEXTPROC)load("glDrawArraysInstancedEXT");
  glad_glDrawElementsInstancedEXT =
      (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)load("glDrawElementsInstancedEXT");
  glad_glVertexAttribDivisorEXT =
      (PFNGLVERTEXATTRIBDIVISOREXTPROC)load("glVertexAttribDivisorEXT");
}
static void load_GL_EXT_map_buffer_range(GLADloadproc load) {
  if (!GLAD_GL_EXT_map_buffer_range) return;
  glad_glMapBufferRangeEXT =
      (PFNGLMAPBUFFERRANGEEXTPROC)load("glMapBufferRangeEXT");
  glad_glFlushMappedBufferRangeEXT =
      (PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC)load("glFlushMappedBufferRangeEXT");
}
static void load_GL_EXT_multi_draw_indirect(GLADloadproc load) {
  if (!GLAD_GL_EXT_multi_draw_indirect) return;
  glad_glMultiDrawArraysIndirectEXT =
      (PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC)load("glMultiDrawArraysIndirectEXT");
  glad_glMultiDrawElementsIndirectEXT =
      (PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC)load(
          "glMultiDrawElementsIndirectEXT");
}
static void load_GL_EXT_multisampled_render_to_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_multisampled_render_to_texture) return;
  glad_glRenderbufferStorageMultisampleEXT =
      (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)load(
          "glRenderbufferStorageMultisampleEXT");
  glad_glFramebufferTexture2DMultisampleEXT =
      (PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC)load(
          "glFramebufferTexture2DMultisampleEXT");
}
static void load_GL_EXT_multiview_draw_buffers(GLADloadproc load) {
  if (!GLAD_GL_EXT_multiview_draw_buffers) return;
  glad_glReadBufferIndexedEXT =
      (PFNGLREADBUFFERINDEXEDEXTPROC)load("glReadBufferIndexedEXT");
  glad_glDrawBuffersIndexedEXT =
      (PFNGLDRAWBUFFERSINDEXEDEXTPROC)load("glDrawBuffersIndexedEXT");
  glad_glGetIntegeri_vEXT =
      (PFNGLGETINTEGERI_VEXTPROC)load("glGetIntegeri_vEXT");
}
static void load_GL_EXT_occlusion_query_boolean(GLADloadproc load) {
  if (!GLAD_GL_EXT_occlusion_query_boolean) return;
  glad_glGenQueriesEXT = (PFNGLGENQUERIESEXTPROC)load("glGenQueriesEXT");
  glad_glDeleteQueriesEXT =
      (PFNGLDELETEQUERIESEXTPROC)load("glDeleteQueriesEXT");
  glad_glIsQueryEXT = (PFNGLISQUERYEXTPROC)load("glIsQueryEXT");
  glad_glBeginQueryEXT = (PFNGLBEGINQUERYEXTPROC)load("glBeginQueryEXT");
  glad_glEndQueryEXT = (PFNGLENDQUERYEXTPROC)load("glEndQueryEXT");
  glad_glGetQueryivEXT = (PFNGLGETQUERYIVEXTPROC)load("glGetQueryivEXT");
  glad_glGetQueryObjectuivEXT =
      (PFNGLGETQUERYOBJECTUIVEXTPROC)load("glGetQueryObjectuivEXT");
}
static void load_GL_EXT_primitive_bounding_box(GLADloadproc load) {
  if (!GLAD_GL_EXT_primitive_bounding_box) return;
  glad_glPrimitiveBoundingBoxEXT =
      (PFNGLPRIMITIVEBOUNDINGBOXEXTPROC)load("glPrimitiveBoundingBoxEXT");
}
static void load_GL_EXT_robustness(GLADloadproc load) {
  if (!GLAD_GL_EXT_robustness) return;
  glad_glGetGraphicsResetStatusEXT =
      (PFNGLGETGRAPHICSRESETSTATUSEXTPROC)load("glGetGraphicsResetStatusEXT");
  glad_glReadnPixelsEXT = (PFNGLREADNPIXELSEXTPROC)load("glReadnPixelsEXT");
  glad_glGetnUniformfvEXT =
      (PFNGLGETNUNIFORMFVEXTPROC)load("glGetnUniformfvEXT");
  glad_glGetnUniformivEXT =
      (PFNGLGETNUNIFORMIVEXTPROC)load("glGetnUniformivEXT");
}
static void load_GL_EXT_shader_pixel_local_storage2(GLADloadproc load) {
  if (!GLAD_GL_EXT_shader_pixel_local_storage2) return;
  glad_glFramebufferPixelLocalStorageSizeEXT =
      (PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)load(
          "glFramebufferPixelLocalStorageSizeEXT");
  glad_glGetFramebufferPixelLocalStorageSizeEXT =
      (PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)load(
          "glGetFramebufferPixelLocalStorageSizeEXT");
  glad_glClearPixelLocalStorageuiEXT =
      (PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC)load(
          "glClearPixelLocalStorageuiEXT");
}
static void load_GL_EXT_sparse_texture(GLADloadproc load) {
  if (!GLAD_GL_EXT_sparse_texture) return;
  glad_glTexPageCommitmentEXT =
      (PFNGLTEXPAGECOMMITMENTEXTPROC)load("glTexPageCommitmentEXT");
}
static void load_GL_EXT_tessellation_shader(GLADloadproc load) {
  if (!GLAD_GL_EXT_tessellation_shader) return;
  glad_glPatchParameteriEXT =
      (PFNGLPATCHPARAMETERIEXTPROC)load("glPatchParameteriEXT");
}
static void load_GL_EXT_texture_border_clamp(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_border_clamp) return;
  glad_glTexParameterIivEXT =
      (PFNGLTEXPARAMETERIIVEXTPROC)load("glTexParameterIivEXT");
  glad_glTexParameterIuivEXT =
      (PFNGLTEXPARAMETERIUIVEXTPROC)load("glTexParameterIuivEXT");
  glad_glGetTexParameterIivEXT =
      (PFNGLGETTEXPARAMETERIIVEXTPROC)load("glGetTexParameterIivEXT");
  glad_glGetTexParameterIuivEXT =
      (PFNGLGETTEXPARAMETERIUIVEXTPROC)load("glGetTexParameterIuivEXT");
  glad_glSamplerParameterIivEXT =
      (PFNGLSAMPLERPARAMETERIIVEXTPROC)load("glSamplerParameterIivEXT");
  glad_glSamplerParameterIuivEXT =
      (PFNGLSAMPLERPARAMETERIUIVEXTPROC)load("glSamplerParameterIuivEXT");
  glad_glGetSamplerParameterIivEXT =
      (PFNGLGETSAMPLERPARAMETERIIVEXTPROC)load("glGetSamplerParameterIivEXT");
  glad_glGetSamplerParameterIuivEXT =
      (PFNGLGETSAMPLERPARAMETERIUIVEXTPROC)load("glGetSamplerParameterIuivEXT");
}
static void load_GL_EXT_texture_buffer(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_buffer) return;
  glad_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)load("glTexBufferEXT");
  glad_glTexBufferRangeEXT =
      (PFNGLTEXBUFFERRANGEEXTPROC)load("glTexBufferRangeEXT");
}
static void load_GL_EXT_texture_storage(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_storage) return;
  glad_glTexStorage1DEXT = (PFNGLTEXSTORAGE1DEXTPROC)load("glTexStorage1DEXT");
  glad_glTexStorage2DEXT = (PFNGLTEXSTORAGE2DEXTPROC)load("glTexStorage2DEXT");
  glad_glTexStorage3DEXT = (PFNGLTEXSTORAGE3DEXTPROC)load("glTexStorage3DEXT");
  glad_glTextureStorage1DEXT =
      (PFNGLTEXTURESTORAGE1DEXTPROC)load("glTextureStorage1DEXT");
  glad_glTextureStorage2DEXT =
      (PFNGLTEXTURESTORAGE2DEXTPROC)load("glTextureStorage2DEXT");
  glad_glTextureStorage3DEXT =
      (PFNGLTEXTURESTORAGE3DEXTPROC)load("glTextureStorage3DEXT");
}
static void load_GL_EXT_texture_view(GLADloadproc load) {
  if (!GLAD_GL_EXT_texture_view) return;
  glad_glTextureViewEXT = (PFNGLTEXTUREVIEWEXTPROC)load("glTextureViewEXT");
}
static void load_GL_OES_EGL_image(GLADloadproc load) {
  if (!GLAD_GL_OES_EGL_image) return;
  glad_glEGLImageTargetTexture2DOES =
      (PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)load("glEGLImageTargetTexture2DOES");
  glad_glEGLImageTargetRenderbufferStorageOES =
      (PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)load(
          "glEGLImageTargetRenderbufferStorageOES");
}
static void load_GL_OES_copy_image(GLADloadproc load) {
  if (!GLAD_GL_OES_copy_image) return;
  glad_glCopyImageSubDataOES =
      (PFNGLCOPYIMAGESUBDATAOESPROC)load("glCopyImageSubDataOES");
}
static void load_GL_OES_draw_buffers_indexed(GLADloadproc load) {
  if (!GLAD_GL_OES_draw_buffers_indexed) return;
  glad_glEnableiOES = (PFNGLENABLEIOESPROC)load("glEnableiOES");
  glad_glDisableiOES = (PFNGLDISABLEIOESPROC)load("glDisableiOES");
  glad_glBlendEquationiOES =
      (PFNGLBLENDEQUATIONIOESPROC)load("glBlendEquationiOES");
  glad_glBlendEquationSeparateiOES =
      (PFNGLBLENDEQUATIONSEPARATEIOESPROC)load("glBlendEquationSeparateiOES");
  glad_glBlendFunciOES = (PFNGLBLENDFUNCIOESPROC)load("glBlendFunciOES");
  glad_glBlendFuncSeparateiOES =
      (PFNGLBLENDFUNCSEPARATEIOESPROC)load("glBlendFuncSeparateiOES");
  glad_glColorMaskiOES = (PFNGLCOLORMASKIOESPROC)load("glColorMaskiOES");
  glad_glIsEnablediOES = (PFNGLISENABLEDIOESPROC)load("glIsEnablediOES");
}
static void load_GL_OES_draw_elements_base_vertex(GLADloadproc load) {
  if (!GLAD_GL_OES_draw_elements_base_vertex) return;
  glad_glDrawElementsBaseVertexOES =
      (PFNGLDRAWELEMENTSBASEVERTEXOESPROC)load("glDrawElementsBaseVertexOES");
  glad_glDrawRangeElementsBaseVertexOES =
      (PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC)load(
          "glDrawRangeElementsBaseVertexOES");
  glad_glDrawElementsInstancedBaseVertexOES =
      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC)load(
          "glDrawElementsInstancedBaseVertexOES");
  glad_glMultiDrawElementsBaseVertexEXT =
      (PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)load(
          "glMultiDrawElementsBaseVertexEXT");
}
static void load_GL_OES_geometry_shader(GLADloadproc load) {
  if (!GLAD_GL_OES_geometry_shader) return;
  glad_glFramebufferTextureOES =
      (PFNGLFRAMEBUFFERTEXTUREOESPROC)load("glFramebufferTextureOES");
}
static void load_GL_OES_get_program_binary(GLADloadproc load) {
  if (!GLAD_GL_OES_get_program_binary) return;
  glad_glGetProgramBinaryOES =
      (PFNGLGETPROGRAMBINARYOESPROC)load("glGetProgramBinaryOES");
  glad_glProgramBinaryOES =
      (PFNGLPROGRAMBINARYOESPROC)load("glProgramBinaryOES");
}
static void load_GL_OES_mapbuffer(GLADloadproc load) {
  if (!GLAD_GL_OES_mapbuffer) return;
  glad_glMapBufferOES = (PFNGLMAPBUFFEROESPROC)load("glMapBufferOES");
  glad_glUnmapBufferOES = (PFNGLUNMAPBUFFEROESPROC)load("glUnmapBufferOES");
  glad_glGetBufferPointervOES =
      (PFNGLGETBUFFERPOINTERVOESPROC)load("glGetBufferPointervOES");
}
static void load_GL_OES_primitive_bounding_box(GLADloadproc load) {
  if (!GLAD_GL_OES_primitive_bounding_box) return;
  glad_glPrimitiveBoundingBoxOES =
      (PFNGLPRIMITIVEBOUNDINGBOXOESPROC)load("glPrimitiveBoundingBoxOES");
}
static void load_GL_OES_sample_shading(GLADloadproc load) {
  if (!GLAD_GL_OES_sample_shading) return;
  glad_glMinSampleShadingOES =
      (PFNGLMINSAMPLESHADINGOESPROC)load("glMinSampleShadingOES");
}
static void load_GL_OES_tessellation_shader(GLADloadproc load) {
  if (!GLAD_GL_OES_tessellation_shader) return;
  glad_glPatchParameteriOES =
      (PFNGLPATCHPARAMETERIOESPROC)load("glPatchParameteriOES");
}
static void load_GL_OES_texture_3D(GLADloadproc load) {
  if (!GLAD_GL_OES_texture_3D) return;
  glad_glTexImage3DOES = (PFNGLTEXIMAGE3DOESPROC)load("glTexImage3DOES");
  glad_glTexSubImage3DOES =
      (PFNGLTEXSUBIMAGE3DOESPROC)load("glTexSubImage3DOES");
  glad_glCopyTexSubImage3DOES =
      (PFNGLCOPYTEXSUBIMAGE3DOESPROC)load("glCopyTexSubImage3DOES");
  glad_glCompressedTexImage3DOES =
      (PFNGLCOMPRESSEDTEXIMAGE3DOESPROC)load("glCompressedTexImage3DOES");
  glad_glCompressedTexSubImage3DOES =
      (PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC)load("glCompressedTexSubImage3DOES");
  glad_glFramebufferTexture3DOES =
      (PFNGLFRAMEBUFFERTEXTURE3DOESPROC)load("glFramebufferTexture3DOES");
}
static void load_GL_OES_texture_border_clamp(GLADloadproc load) {
  if (!GLAD_GL_OES_texture_border_clamp) return;
  glad_glTexParameterIivOES =
      (PFNGLTEXPARAMETERIIVOESPROC)load("glTexParameterIivOES");
  glad_glTexParameterIuivOES =
      (PFNGLTEXPARAMETERIUIVOESPROC)load("glTexParameterIuivOES");
  glad_glGetTexParameterIivOES =
      (PFNGLGETTEXPARAMETERIIVOESPROC)load("glGetTexParameterIivOES");
  glad_glGetTexParameterIuivOES =
      (PFNGLGETTEXPARAMETERIUIVOESPROC)load("glGetTexParameterIuivOES");
  glad_glSamplerParameterIivOES =
      (PFNGLSAMPLERPARAMETERIIVOESPROC)load("glSamplerParameterIivOES");
  glad_glSamplerParameterIuivOES =
      (PFNGLSAMPLERPARAMETERIUIVOESPROC)load("glSamplerParameterIuivOES");
  glad_glGetSamplerParameterIivOES =
      (PFNGLGETSAMPLERPARAMETERIIVOESPROC)load("glGetSamplerParameterIivOES");
  glad_glGetSamplerParameterIuivOES =
      (PFNGLGETSAMPLERPARAMETERIUIVOESPROC)load("glGetSamplerParameterIuivOES");
}
static void load_GL_OES_texture_buffer(GLADloadproc load) {
  if (!GLAD_GL_OES_texture_buffer) return;
  glad_glTexBufferOES = (PFNGLTEXBUFFEROESPROC)load("glTexBufferOES");
  glad_glTexBufferRangeOES =
      (PFNGLTEXBUFFERRANGEOESPROC)load("glTexBufferRangeOES");
}
static void load_GL_OES_texture_storage_multisample_2d_array(
    GLADloadproc load) {
  if (!GLAD_GL_OES_texture_storage_multisample_2d_array) return;
  glad_glTexStorage3DMultisampleOES =
      (PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC)load("glTexStorage3DMultisampleOES");
}
static void load_GL_OES_texture_view(GLADloadproc load) {
  if (!GLAD_GL_OES_texture_view) return;
  glad_glTextureViewOES = (PFNGLTEXTUREVIEWOESPROC)load("glTextureViewOES");
}
static void load_GL_OES_vertex_array_object(GLADloadproc load) {
  if (!GLAD_GL_OES_vertex_array_object) return;
  glad_glBindVertexArrayOES =
      (PFNGLBINDVERTEXARRAYOESPROC)load("glBindVertexArrayOES");
  glad_glDeleteVertexArraysOES =
      (PFNGLDELETEVERTEXARRAYSOESPROC)load("glDeleteVertexArraysOES");
  glad_glGenVertexArraysOES =
      (PFNGLGENVERTEXARRAYSOESPROC)load("glGenVertexArraysOES");
  glad_glIsVertexArrayOES =
      (PFNGLISVERTEXARRAYOESPROC)load("glIsVertexArrayOES");
}
static void load_GL_OES_viewport_array(GLADloadproc load) {
  if (!GLAD_GL_OES_viewport_array) return;
  glad_glViewportArrayvOES =
      (PFNGLVIEWPORTARRAYVOESPROC)load("glViewportArrayvOES");
  glad_glViewportIndexedfOES =
      (PFNGLVIEWPORTINDEXEDFOESPROC)load("glViewportIndexedfOES");
  glad_glViewportIndexedfvOES =
      (PFNGLVIEWPORTINDEXEDFVOESPROC)load("glViewportIndexedfvOES");
  glad_glScissorArrayvOES =
      (PFNGLSCISSORARRAYVOESPROC)load("glScissorArrayvOES");
  glad_glScissorIndexedOES =
      (PFNGLSCISSORINDEXEDOESPROC)load("glScissorIndexedOES");
  glad_glScissorIndexedvOES =
      (PFNGLSCISSORINDEXEDVOESPROC)load("glScissorIndexedvOES");
  glad_glDepthRangeArrayfvOES =
      (PFNGLDEPTHRANGEARRAYFVOESPROC)load("glDepthRangeArrayfvOES");
  glad_glDepthRangeIndexedfOES =
      (PFNGLDEPTHRANGEINDEXEDFOESPROC)load("glDepthRangeIndexedfOES");
  glad_glGetFloati_vOES = (PFNGLGETFLOATI_VOESPROC)load("glGetFloati_vOES");
  glad_glEnableiOES = (PFNGLENABLEIOESPROC)load("glEnableiOES");
  glad_glDisableiOES = (PFNGLDISABLEIOESPROC)load("glDisableiOES");
  glad_glIsEnablediOES = (PFNGLISENABLEDIOESPROC)load("glIsEnablediOES");
}
static int find_extensionsGLES2(void) {
  if (!get_exts()) return 0;
  GLAD_GL_EXT_EGL_image_array = has_ext("GL_EXT_EGL_image_array");
  GLAD_GL_EXT_EGL_image_storage = has_ext("GL_EXT_EGL_image_storage");
  GLAD_GL_EXT_YUV_target = has_ext("GL_EXT_YUV_target");
  GLAD_GL_EXT_base_instance = has_ext("GL_EXT_base_instance");
  GLAD_GL_EXT_blend_func_extended = has_ext("GL_EXT_blend_func_extended");
  GLAD_GL_EXT_blend_minmax = has_ext("GL_EXT_blend_minmax");
  GLAD_GL_EXT_buffer_storage = has_ext("GL_EXT_buffer_storage");
  GLAD_GL_EXT_clear_texture = has_ext("GL_EXT_clear_texture");
  GLAD_GL_EXT_clip_control = has_ext("GL_EXT_clip_control");
  GLAD_GL_EXT_clip_cull_distance = has_ext("GL_EXT_clip_cull_distance");
  GLAD_GL_EXT_color_buffer_float = has_ext("GL_EXT_color_buffer_float");
  GLAD_GL_EXT_color_buffer_half_float =
      has_ext("GL_EXT_color_buffer_half_float");
  GLAD_GL_EXT_conservative_depth = has_ext("GL_EXT_conservative_depth");
  GLAD_GL_EXT_copy_image = has_ext("GL_EXT_copy_image");
  GLAD_GL_EXT_debug_label = has_ext("GL_EXT_debug_label");
  GLAD_GL_EXT_debug_marker = has_ext("GL_EXT_debug_marker");
  GLAD_GL_EXT_depth_clamp = has_ext("GL_EXT_depth_clamp");
  GLAD_GL_EXT_discard_framebuffer = has_ext("GL_EXT_discard_framebuffer");
  GLAD_GL_EXT_disjoint_timer_query = has_ext("GL_EXT_disjoint_timer_query");
  GLAD_GL_EXT_draw_buffers = has_ext("GL_EXT_draw_buffers");
  GLAD_GL_EXT_draw_buffers_indexed = has_ext("GL_EXT_draw_buffers_indexed");
  GLAD_GL_EXT_draw_elements_base_vertex =
      has_ext("GL_EXT_draw_elements_base_vertex");
  GLAD_GL_EXT_draw_instanced = has_ext("GL_EXT_draw_instanced");
  GLAD_GL_EXT_draw_transform_feedback =
      has_ext("GL_EXT_draw_transform_feedback");
  GLAD_GL_EXT_external_buffer = has_ext("GL_EXT_external_buffer");
  GLAD_GL_EXT_float_blend = has_ext("GL_EXT_float_blend");
  GLAD_GL_EXT_geometry_point_size = has_ext("GL_EXT_geometry_point_size");
  GLAD_GL_EXT_geometry_shader = has_ext("GL_EXT_geometry_shader");
  GLAD_GL_EXT_gpu_shader5 = has_ext("GL_EXT_gpu_shader5");
  GLAD_GL_EXT_instanced_arrays = has_ext("GL_EXT_instanced_arrays");
  GLAD_GL_EXT_map_buffer_range = has_ext("GL_EXT_map_buffer_range");
  GLAD_GL_EXT_memory_object = has_ext("GL_EXT_memory_object");
  GLAD_GL_EXT_memory_object_fd = has_ext("GL_EXT_memory_object_fd");
  GLAD_GL_EXT_memory_object_win32 = has_ext("GL_EXT_memory_object_win32");
  GLAD_GL_EXT_multi_draw_arrays = has_ext("GL_EXT_multi_draw_arrays");
  GLAD_GL_EXT_multi_draw_indirect = has_ext("GL_EXT_multi_draw_indirect");
  GLAD_GL_EXT_multisampled_compatibility =
      has_ext("GL_EXT_multisampled_compatibility");
  GLAD_GL_EXT_multisampled_render_to_texture =
      has_ext("GL_EXT_multisampled_render_to_texture");
  GLAD_GL_EXT_multiview_draw_buffers = has_ext("GL_EXT_multiview_draw_buffers");
  GLAD_GL_EXT_multiview_tessellation_geometry_shader =
      has_ext("GL_EXT_multiview_tessellation_geometry_shader");
  GLAD_GL_EXT_multiview_texture_multisample =
      has_ext("GL_EXT_multiview_texture_multisample");
  GLAD_GL_EXT_multiview_timer_query = has_ext("GL_EXT_multiview_timer_query");
  GLAD_GL_EXT_occlusion_query_boolean =
      has_ext("GL_EXT_occlusion_query_boolean");
  GLAD_GL_EXT_polygon_offset_clamp = has_ext("GL_EXT_polygon_offset_clamp");
  GLAD_GL_EXT_post_depth_coverage = has_ext("GL_EXT_post_depth_coverage");
  GLAD_GL_EXT_primitive_bounding_box = has_ext("GL_EXT_primitive_bounding_box");
  GLAD_GL_EXT_protected_textures = has_ext("GL_EXT_protected_textures");
  GLAD_GL_EXT_pvrtc_sRGB = has_ext("GL_EXT_pvrtc_sRGB");
  GLAD_GL_EXT_raster_multisample = has_ext("GL_EXT_raster_multisample");
  GLAD_GL_EXT_read_format_bgra = has_ext("GL_EXT_read_format_bgra");
  GLAD_GL_EXT_render_snorm = has_ext("GL_EXT_render_snorm");
  GLAD_GL_EXT_robustness = has_ext("GL_EXT_robustness");
  GLAD_GL_EXT_sRGB = has_ext("GL_EXT_sRGB");
  GLAD_GL_EXT_sRGB_write_control = has_ext("GL_EXT_sRGB_write_control");
  GLAD_GL_EXT_semaphore = has_ext("GL_EXT_semaphore");
  GLAD_GL_EXT_semaphore_fd = has_ext("GL_EXT_semaphore_fd");
  GLAD_GL_EXT_semaphore_win32 = has_ext("GL_EXT_semaphore_win32");
  GLAD_GL_EXT_separate_shader_objects =
      has_ext("GL_EXT_separate_shader_objects");
  GLAD_GL_EXT_shader_framebuffer_fetch =
      has_ext("GL_EXT_shader_framebuffer_fetch");
  GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent =
      has_ext("GL_EXT_shader_framebuffer_fetch_non_coherent");
  GLAD_GL_EXT_shader_group_vote = has_ext("GL_EXT_shader_group_vote");
  GLAD_GL_EXT_shader_implicit_conversions =
      has_ext("GL_EXT_shader_implicit_conversions");
  GLAD_GL_EXT_shader_integer_mix = has_ext("GL_EXT_shader_integer_mix");
  GLAD_GL_EXT_shader_io_blocks = has_ext("GL_EXT_shader_io_blocks");
  GLAD_GL_EXT_shader_non_constant_global_initializers =
      has_ext("GL_EXT_shader_non_constant_global_initializers");
  GLAD_GL_EXT_shader_pixel_local_storage =
      has_ext("GL_EXT_shader_pixel_local_storage");
  GLAD_GL_EXT_shader_pixel_local_storage2 =
      has_ext("GL_EXT_shader_pixel_local_storage2");
  GLAD_GL_EXT_shader_texture_lod = has_ext("GL_EXT_shader_texture_lod");
  GLAD_GL_EXT_shadow_samplers = has_ext("GL_EXT_shadow_samplers");
  GLAD_GL_EXT_sparse_texture = has_ext("GL_EXT_sparse_texture");
  GLAD_GL_EXT_sparse_texture2 = has_ext("GL_EXT_sparse_texture2");
  GLAD_GL_EXT_tessellation_point_size =
      has_ext("GL_EXT_tessellation_point_size");
  GLAD_GL_EXT_tessellation_shader = has_ext("GL_EXT_tessellation_shader");
  GLAD_GL_EXT_texture_border_clamp = has_ext("GL_EXT_texture_border_clamp");
  GLAD_GL_EXT_texture_buffer = has_ext("GL_EXT_texture_buffer");
  GLAD_GL_EXT_texture_compression_astc_decode_mode =
      has_ext("GL_EXT_texture_compression_astc_decode_mode");
  GLAD_GL_EXT_texture_compression_bptc =
      has_ext("GL_EXT_texture_compression_bptc");
  GLAD_GL_EXT_texture_compression_dxt1 =
      has_ext("GL_EXT_texture_compression_dxt1");
  GLAD_GL_EXT_texture_compression_rgtc =
      has_ext("GL_EXT_texture_compression_rgtc");
  GLAD_GL_EXT_texture_compression_s3tc =
      has_ext("GL_EXT_texture_compression_s3tc");
  GLAD_GL_EXT_texture_compression_s3tc_srgb =
      has_ext("GL_EXT_texture_compression_s3tc_srgb");
  GLAD_GL_EXT_texture_cube_map_array = has_ext("GL_EXT_texture_cube_map_array");
  GLAD_GL_EXT_texture_filter_anisotropic =
      has_ext("GL_EXT_texture_filter_anisotropic");
  GLAD_GL_EXT_texture_filter_minmax = has_ext("GL_EXT_texture_filter_minmax");
  GLAD_GL_EXT_texture_format_BGRA8888 =
      has_ext("GL_EXT_texture_format_BGRA8888");
  GLAD_GL_EXT_texture_format_sRGB_override =
      has_ext("GL_EXT_texture_format_sRGB_override");
  GLAD_GL_EXT_texture_mirror_clamp_to_edge =
      has_ext("GL_EXT_texture_mirror_clamp_to_edge");
  GLAD_GL_EXT_texture_norm16 = has_ext("GL_EXT_texture_norm16");
  GLAD_GL_EXT_texture_query_lod = has_ext("GL_EXT_texture_query_lod");
  GLAD_GL_EXT_texture_rg = has_ext("GL_EXT_texture_rg");
  GLAD_GL_EXT_texture_sRGB_R8 = has_ext("GL_EXT_texture_sRGB_R8");
  GLAD_GL_EXT_texture_sRGB_RG8 = has_ext("GL_EXT_texture_sRGB_RG8");
  GLAD_GL_EXT_texture_sRGB_decode = has_ext("GL_EXT_texture_sRGB_decode");
  GLAD_GL_EXT_texture_shadow_lod = has_ext("GL_EXT_texture_shadow_lod");
  GLAD_GL_EXT_texture_storage = has_ext("GL_EXT_texture_storage");
  GLAD_GL_EXT_texture_type_2_10_10_10_REV =
      has_ext("GL_EXT_texture_type_2_10_10_10_REV");
  GLAD_GL_EXT_texture_view = has_ext("GL_EXT_texture_view");
  GLAD_GL_EXT_unpack_subimage = has_ext("GL_EXT_unpack_subimage");
  GLAD_GL_EXT_win32_keyed_mutex = has_ext("GL_EXT_win32_keyed_mutex");
  GLAD_GL_EXT_window_rectangles = has_ext("GL_EXT_window_rectangles");
  GLAD_GL_KHR_blend_equation_advanced =
      has_ext("GL_KHR_blend_equation_advanced");
  GLAD_GL_KHR_blend_equation_advanced_coherent =
      has_ext("GL_KHR_blend_equation_advanced_coherent");
  GLAD_GL_KHR_context_flush_control = has_ext("GL_KHR_context_flush_control");
  GLAD_GL_KHR_debug = has_ext("GL_KHR_debug");
  GLAD_GL_KHR_no_error = has_ext("GL_KHR_no_error");
  GLAD_GL_KHR_parallel_shader_compile =
      has_ext("GL_KHR_parallel_shader_compile");
  GLAD_GL_KHR_robust_buffer_access_behavior =
      has_ext("GL_KHR_robust_buffer_access_behavior");
  GLAD_GL_KHR_robustness = has_ext("GL_KHR_robustness");
  GLAD_GL_KHR_shader_subgroup = has_ext("GL_KHR_shader_subgroup");
  GLAD_GL_KHR_texture_compression_astc_hdr =
      has_ext("GL_KHR_texture_compression_astc_hdr");
  GLAD_GL_KHR_texture_compression_astc_ldr =
      has_ext("GL_KHR_texture_compression_astc_ldr");
  GLAD_GL_KHR_texture_compression_astc_sliced_3d =
      has_ext("GL_KHR_texture_compression_astc_sliced_3d");
  GLAD_GL_OES_EGL_image = has_ext("GL_OES_EGL_image");
  GLAD_GL_OES_EGL_image_external = has_ext("GL_OES_EGL_image_external");
  GLAD_GL_OES_EGL_image_external_essl3 =
      has_ext("GL_OES_EGL_image_external_essl3");
  GLAD_GL_OES_compressed_ETC1_RGB8_sub_texture =
      has_ext("GL_OES_compressed_ETC1_RGB8_sub_texture");
  GLAD_GL_OES_compressed_ETC1_RGB8_texture =
      has_ext("GL_OES_compressed_ETC1_RGB8_texture");
  GLAD_GL_OES_compressed_paletted_texture =
      has_ext("GL_OES_compressed_paletted_texture");
  GLAD_GL_OES_copy_image = has_ext("GL_OES_copy_image");
  GLAD_GL_OES_depth24 = has_ext("GL_OES_depth24");
  GLAD_GL_OES_depth32 = has_ext("GL_OES_depth32");
  GLAD_GL_OES_depth_texture = has_ext("GL_OES_depth_texture");
  GLAD_GL_OES_draw_buffers_indexed = has_ext("GL_OES_draw_buffers_indexed");
  GLAD_GL_OES_draw_elements_base_vertex =
      has_ext("GL_OES_draw_elements_base_vertex");
  GLAD_GL_OES_element_index_uint = has_ext("GL_OES_element_index_uint");
  GLAD_GL_OES_fbo_render_mipmap = has_ext("GL_OES_fbo_render_mipmap");
  GLAD_GL_OES_fragment_precision_high =
      has_ext("GL_OES_fragment_precision_high");
  GLAD_GL_OES_geometry_point_size = has_ext("GL_OES_geometry_point_size");
  GLAD_GL_OES_geometry_shader = has_ext("GL_OES_geometry_shader");
  GLAD_GL_OES_get_program_binary = has_ext("GL_OES_get_program_binary");
  GLAD_GL_OES_gpu_shader5 = has_ext("GL_OES_gpu_shader5");
  GLAD_GL_OES_mapbuffer = has_ext("GL_OES_mapbuffer");
  GLAD_GL_OES_packed_depth_stencil = has_ext("GL_OES_packed_depth_stencil");
  GLAD_GL_OES_primitive_bounding_box = has_ext("GL_OES_primitive_bounding_box");
  GLAD_GL_OES_required_internalformat =
      has_ext("GL_OES_required_internalformat");
  GLAD_GL_OES_rgb8_rgba8 = has_ext("GL_OES_rgb8_rgba8");
  GLAD_GL_OES_sample_shading = has_ext("GL_OES_sample_shading");
  GLAD_GL_OES_sample_variables = has_ext("GL_OES_sample_variables");
  GLAD_GL_OES_shader_image_atomic = has_ext("GL_OES_shader_image_atomic");
  GLAD_GL_OES_shader_io_blocks = has_ext("GL_OES_shader_io_blocks");
  GLAD_GL_OES_shader_multisample_interpolation =
      has_ext("GL_OES_shader_multisample_interpolation");
  GLAD_GL_OES_standard_derivatives = has_ext("GL_OES_standard_derivatives");
  GLAD_GL_OES_stencil1 = has_ext("GL_OES_stencil1");
  GLAD_GL_OES_stencil4 = has_ext("GL_OES_stencil4");
  GLAD_GL_OES_surfaceless_context = has_ext("GL_OES_surfaceless_context");
  GLAD_GL_OES_tessellation_point_size =
      has_ext("GL_OES_tessellation_point_size");
  GLAD_GL_OES_tessellation_shader = has_ext("GL_OES_tessellation_shader");
  GLAD_GL_OES_texture_3D = has_ext("GL_OES_texture_3D");
  GLAD_GL_OES_texture_border_clamp = has_ext("GL_OES_texture_border_clamp");
  GLAD_GL_OES_texture_buffer = has_ext("GL_OES_texture_buffer");
  GLAD_GL_OES_texture_compression_astc =
      has_ext("GL_OES_texture_compression_astc");
  GLAD_GL_OES_texture_cube_map_array = has_ext("GL_OES_texture_cube_map_array");
  GLAD_GL_OES_texture_float = has_ext("GL_OES_texture_float");
  GLAD_GL_OES_texture_float_linear = has_ext("GL_OES_texture_float_linear");
  GLAD_GL_OES_texture_half_float = has_ext("GL_OES_texture_half_float");
  GLAD_GL_OES_texture_half_float_linear =
      has_ext("GL_OES_texture_half_float_linear");
  GLAD_GL_OES_texture_npot = has_ext("GL_OES_texture_npot");
  GLAD_GL_OES_texture_stencil8 = has_ext("GL_OES_texture_stencil8");
  GLAD_GL_OES_texture_storage_multisample_2d_array =
      has_ext("GL_OES_texture_storage_multisample_2d_array");
  GLAD_GL_OES_texture_view = has_ext("GL_OES_texture_view");
  GLAD_GL_OES_vertex_array_object = has_ext("GL_OES_vertex_array_object");
  GLAD_GL_OES_vertex_half_float = has_ext("GL_OES_vertex_half_float");
  GLAD_GL_OES_vertex_type_10_10_10_2 = has_ext("GL_OES_vertex_type_10_10_10_2");
  GLAD_GL_OES_viewport_array = has_ext("GL_OES_viewport_array");
  free_exts();
  return 1;
}

static void find_coreGLES2(void) {
  /* Thank you @elmindreda
   * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176
   * https://github.com/glfw/glfw/blob/master/src/context.c#L36
   */
  int i, major, minor;

  const char* version;
  const char* prefixes[] = {"OpenGL ES-CM ", "OpenGL ES-CL ", "OpenGL ES ",
                            NULL};

  version = (const char*)glGetString(GL_VERSION);
  if (!version) return;

  for (i = 0; prefixes[i]; i++) {
    const size_t length = strlen(prefixes[i]);
    if (strncmp(version, prefixes[i], length) == 0) {
      version += length;
      break;
    }
  }

/* PR #18 */
#ifdef _MSC_VER
  sscanf_s(version, "%d.%d", &major, &minor);
#else
  sscanf(version, "%d.%d", &major, &minor);
#endif

  GLVersion.major = major;
  GLVersion.minor = minor;
  max_loaded_major = major;
  max_loaded_minor = minor;
  GLAD_GL_ES_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
  GLAD_GL_ES_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
  GLAD_GL_ES_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
  GLAD_GL_ES_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
  if (GLVersion.major > 3 || (GLVersion.major >= 3 && GLVersion.minor >= 2)) {
    max_loaded_major = 3;
    max_loaded_minor = 2;
  }
}

int gladLoadGLES2Loader(GLADloadproc load) {
  GLVersion.major = 0;
  GLVersion.minor = 0;
  glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
  if (glGetString == NULL) return 0;
  if (glGetString(GL_VERSION) == NULL) return 0;
  find_coreGLES2();
  load_GL_ES_VERSION_2_0(load);
  load_GL_ES_VERSION_3_0(load);
  load_GL_ES_VERSION_3_1(load);
  load_GL_ES_VERSION_3_2(load);

  if (!find_extensionsGLES2()) return 0;
  load_GL_EXT_EGL_image_storage(load);
  load_GL_EXT_base_instance(load);
  load_GL_EXT_blend_func_extended(load);
  load_GL_EXT_blend_minmax(load);
  load_GL_EXT_buffer_storage(load);
  load_GL_EXT_clear_texture(load);
  load_GL_EXT_clip_control(load);
  load_GL_EXT_copy_image(load);
  load_GL_EXT_debug_label(load);
  load_GL_EXT_debug_marker(load);
  load_GL_EXT_discard_framebuffer(load);
  load_GL_EXT_disjoint_timer_query(load);
  load_GL_EXT_draw_buffers(load);
  load_GL_EXT_draw_buffers_indexed(load);
  load_GL_EXT_draw_elements_base_vertex(load);
  load_GL_EXT_draw_instanced(load);
  load_GL_EXT_draw_transform_feedback(load);
  load_GL_EXT_external_buffer(load);
  load_GL_EXT_geometry_shader(load);
  load_GL_EXT_instanced_arrays(load);
  load_GL_EXT_map_buffer_range(load);
  load_GL_EXT_memory_object(load);
  load_GL_EXT_memory_object_fd(load);
  load_GL_EXT_memory_object_win32(load);
  load_GL_EXT_multi_draw_arrays(load);
  load_GL_EXT_multi_draw_indirect(load);
  load_GL_EXT_multisampled_render_to_texture(load);
  load_GL_EXT_multiview_draw_buffers(load);
  load_GL_EXT_occlusion_query_boolean(load);
  load_GL_EXT_polygon_offset_clamp(load);
  load_GL_EXT_primitive_bounding_box(load);
  load_GL_EXT_raster_multisample(load);
  load_GL_EXT_robustness(load);
  load_GL_EXT_semaphore(load);
  load_GL_EXT_semaphore_fd(load);
  load_GL_EXT_semaphore_win32(load);
  load_GL_EXT_separate_shader_objects(load);
  load_GL_EXT_shader_framebuffer_fetch_non_coherent(load);
  load_GL_EXT_shader_pixel_local_storage2(load);
  load_GL_EXT_sparse_texture(load);
  load_GL_EXT_tessellation_shader(load);
  load_GL_EXT_texture_border_clamp(load);
  load_GL_EXT_texture_buffer(load);
  load_GL_EXT_texture_storage(load);
  load_GL_EXT_texture_view(load);
  load_GL_EXT_win32_keyed_mutex(load);
  load_GL_EXT_window_rectangles(load);
  load_GL_KHR_blend_equation_advanced(load);
  load_GL_KHR_debug(load);
  load_GL_KHR_parallel_shader_compile(load);
  load_GL_KHR_robustness(load);
  load_GL_OES_EGL_image(load);
  load_GL_OES_copy_image(load);
  load_GL_OES_draw_buffers_indexed(load);
  load_GL_OES_draw_elements_base_vertex(load);
  load_GL_OES_geometry_shader(load);
  load_GL_OES_get_program_binary(load);
  load_GL_OES_mapbuffer(load);
  load_GL_OES_primitive_bounding_box(load);
  load_GL_OES_sample_shading(load);
  load_GL_OES_tessellation_shader(load);
  load_GL_OES_texture_3D(load);
  load_GL_OES_texture_border_clamp(load);
  load_GL_OES_texture_buffer(load);
  load_GL_OES_texture_storage_multisample_2d_array(load);
  load_GL_OES_texture_view(load);
  load_GL_OES_vertex_array_object(load);
  load_GL_OES_viewport_array(load);
  return GLVersion.major != 0 || GLVersion.minor != 0;
}

#endif